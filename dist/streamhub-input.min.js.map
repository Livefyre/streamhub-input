{"version":3,"file":"streamhub-input.min.js","sources":["lib/almond/almond.js","lib/require-less/normalize.js","lib/require-css/parse-module-path.js","lib/require-css/transform-css.js","lib/require-css/normalize.js","lib/require-css/css-builder.js","lib/require-less/less.js","lib/inherits/inherits.js","lib/jquery/jquery.min.js","lib/streamhub-sdk/src/jquery.js","lib/view/src/event-map.js","lib/view/src/delegate.js","lib/event-emitter/src/event-emitter.js","lib/view/src/view.js","lib/debug/debug.js","lib/streamhub-sdk/src/view.js","lib/stream/src/writable.js","lib/streamhub-sdk/src/debug.js","lib/stream/src/main.js","lib/stream/src/util.js","lib/stream/src/readable.js","lib/streamhub-sdk/src/views/streams/more.js","lib/stream/src/duplex.js","src/javascript/content-editor/modal-view.js","lib/hogan/web/builds/2.0.0/hogan-2.0.0.amd.js","lib/streamhub-sdk/src/views/show-more-button.js","lib/streamhub-sdk/src/views/list-view.js","src/javascript/content-editor/attachment-view.js","src/javascript/content-editor/attachment-list-view.js","lib/streamhub-sdk/src/auth/auth-optional.js","tools/auth-stub.js","lib/streamhub-sdk/src/auth/main.js","lib/streamhub-sdk/src/ui/command.js","lib/streamhub-sdk/src/util.js","lib/streamhub-sdk/src/ui/auth-required-command.js","lib/streamhub-sdk/src/ui/button.js","lib/streamhub-sdk/src/content/main.js","hgn!streamhub-input/templates/content-editor","lib/streamhub-editor/src/javascript/util.js","hgn!streamhub-editor/templates/editor","lib/streamhub-editor/src/javascript/editor.js","lib/observer/src/observer.js","src/javascript/pipeable.js","lib/requirejs-plugins/src/json.js","json!streamhub-input/../package.json","src/javascript/package-attribute.js","src/javascript/button.js","src/javascript/modal/modal-input-command.js","hgn!streamhub-sdk/content/templates/oembed-link","hgn!streamhub-sdk/content/templates/oembed-rich","lib/streamhub-sdk/src/content/views/oembed-view.js","lib/streamhub-sdk/src/content/views/attachment-list-view.js","lib/streamhub-sdk/src/content/views/tiled-attachment-list-view.js","hgn!streamhub-sdk/content/templates/tiled-attachment-list","lib/streamhub-sdk/src/content/views/gallery-attachment-list-view.js","hgn!streamhub-sdk/content/templates/gallery-attachment-list","hgn!streamhub-sdk/content/templates/content-byline","lib/streamhub-sdk/src/modal/main.js","hgn!streamhub-sdk/modal/templates/modal","src/javascript/modal/launchable-modal.js","hgn!streamhub-input/templates/upload","src/javascript/upload/view.js","src/javascript/upload/button.js","src/javascript/upload/button-icon.js","src/javascript/content-editor/view.js"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n","\n/*\n * css.normalize.js\n *\n * CSS Normalization\n *\n * CSS paths are normalized based on an optional basePath and the RequireJS config\n *\n * Usage:\n *   normalize(css, fromBasePath, toBasePath);\n *\n * css: the stylesheet content to normalize\n * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)\n * toBasePath: the absolute new base path of the css relative to the same root\n * \n * Absolute dependencies are left untouched.\n *\n * Urls in the CSS are picked up by regular expressions.\n * These will catch all statements of the form:\n *\n * url(*)\n * url('*')\n * url(\"*\")\n * \n * @import '*'\n * @import \"*\"\n *\n * (and so also @import url(*) variations)\n *\n * For urls needing normalization\n *\n */\n\ndefine('less/normalize',[],function() {\n  \n  // regular expression for removing double slashes\n  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here\n  var slashes = /([^:])\\/+/g\n  var removeDoubleSlashes = function(uri) {\n    return uri.replace(slashes, '$1/');\n  }\n\n  // given a relative URI, and two absolute base URIs, convert it from one base to another\n  var protocolRegEx = /[^\\:\\/]*:\\/\\/([^\\/])*/;\n  var absUrlRegEx = /^(\\/|data:)/;\n  function convertURIBase(uri, fromBase, toBase) {\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    uri = removeDoubleSlashes(uri);\n    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not\n    // use absolute path at fromBase\n    var toBaseProtocol = toBase.match(protocolRegEx);\n    var fromBaseProtocol = fromBase.match(protocolRegEx);\n    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))\n      return absoluteURI(uri, fromBase);\n    \n    else {\n      return relativeURI(absoluteURI(uri, fromBase), toBase);\n    }\n  };\n  \n  // given a relative URI, calculate the absolute URI\n  function absoluteURI(uri, base) {\n    if (uri.substr(0, 2) == './')\n      uri = uri.substr(2);\n\n    // absolute urls are left in tact\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    \n    var baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    \n    baseParts.pop();\n    \n    while (curPart = uriParts.shift())\n      if (curPart == '..')\n        baseParts.pop();\n      else\n        baseParts.push(curPart);\n    \n    return baseParts.join('/');\n  };\n\n\n  // given an absolute URI, calculate the relative URI\n  function relativeURI(uri, base) {\n    \n    // reduce base and uri strings to just their difference string\n    var baseParts = base.split('/');\n    baseParts.pop();\n    base = baseParts.join('/') + '/';\n    i = 0;\n    while (base.substr(i, 1) == uri.substr(i, 1))\n      i++;\n    while (base.substr(i, 1) != '/')\n      i--;\n    base = base.substr(i + 1);\n    uri = uri.substr(i + 1);\n\n    // each base folder difference is thus a backtrack\n    baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    out = '';\n    while (baseParts.shift())\n      out += '../';\n    \n    // finally add uri parts\n    while (curPart = uriParts.shift())\n      out += curPart + '/';\n    \n    return out.substr(0, out.length - 1);\n  };\n  \n  var normalizeCSS = function(source, fromBase, toBase) {\n\n    fromBase = removeDoubleSlashes(fromBase);\n    toBase = removeDoubleSlashes(toBase);\n\n    var urlRegEx = /@import\\s*(\"([^\"]*)\"|'([^']*)')|url\\s*\\(\\s*(\\s*\"([^\"]*)\"|'([^']*)'|[^\\)]*\\s*)\\s*\\)/ig;\n    var result, url, source;\n\n    while (result = urlRegEx.exec(source)) {\n      url = result[3] || result[2] || result[5] || result[6] || result[4];\n      var newUrl;\n      newUrl = convertURIBase(url, fromBase, toBase);\n      var quoteLen = result[5] || result[6] ? 1 : 0;\n      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);\n      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);\n    }\n    \n    return source;\n  };\n  \n  normalizeCSS.convertURIBase = convertURIBase;\n  normalizeCSS.absoluteURI = absoluteURI;\n  normalizeCSS.relativeURI = relativeURI;\n  \n  return normalizeCSS;\n});\n","\ndefine('css/parse-module-path',['require','exports','module'],function (require, exports, module) {/**\n * The moduleId after css! can have params prefixed, and the params will\n * be passed to transform functions e.g.\n * Params will only be parsed if they start with '?'\n * in: 'css!?prefix=[data-lf-module=streamhub-wall#3.0.0]:./styles/wall-component.css'\n * out: { params: { prefix: '[data-...', cssId: './styles/wall-...' }}\n */\nvar cssIdParamsPattern = /^\\?([^:]+)\\:(.*)/;\n\n/**\n * in: 'blah=foo&bar:module/path'\n * out: { cssId: 'module/path',\n *        params: { blah: 'foo', bar: undefined } }\n */\nvar parseCssId = module.exports = function (cssId) {\n  var paramPatternMatch = cssId.match(cssIdParamsPattern);\n  if ( ! paramPatternMatch) {\n    return parsedObj(cssId);\n  }\n  var paramsStr = paramPatternMatch[1];\n  var cssId = paramPatternMatch[2];\n  return parsedObj(cssId, paramsStrToObj(paramsStr));\n}\n\nfunction parsedObj(cssId, params) {\n  return {\n    cssId: cssId,\n    params: params\n  };\n}\n\n/**\n * in: 'blah=foo&bar'\n * out: { blah: 'foo', bar: undefined }\n */\nfunction paramsStrToObj(paramsStr) {\n  var paramParts = paramsStr.split('&');\n  var param;\n  var key;\n  var val;\n  var paramsObj = {};\n  for (var i=0; i < paramParts.length; i++) {\n    param = paramParts[i].split('=');\n    key = param[0];\n    val = (param.length > 1 ? unescape(param.slice(1).join('=')) : undefined);\n    paramsObj[key] = val;\n  }\n  return paramsObj;\n}\n\n});\n","\ndefine('css/transform-css',['require','exports','module','./parse-module-path'],function (require, exports, module) {var parseModuleName = require('./parse-module-path');\n\n/**\n * Get the transformed CSS from a given CSS file URL\n */\nvar transformedCss = exports = module.exports = function (req, loadModule, transformModuleNames, moduleName, callback) {\n    var parsed = parseModuleName(moduleName);\n    // TODO: move into parseModuleName\n    var cssModule = parsed.cssId + '.css';\n    // Load file URL as string\n    console.log('getting transformed css for ', cssModule);\n    loadModule(cssModule, function (cssStr) {\n        exports.fromCssStr(req, transformModuleNames, parsed.params, cssStr, callback);\n    });\n};\n\nexports.fromCssStr = function (req, transformModuleNames, params, cssStr, callback) {\n    var transformedCss = cssStr;\n    req(transformModuleNames, function () {\n        var transforms = [].slice.call(arguments);\n        transforms.forEach(function (transform) {\n            transformedCss = transform(transformedCss, params);\n        });\n        callback(transformedCss);\n    });\n};\n\n/**\n * Get an array of module names to load, each of which will\n * export a function that transforms a css string\n * @param key {string} 'requirejs' or 'node'\n */\nexports.getTransformEaches = function getTransformEaches(config, key) {\n    var cssConfig = config.css || {};\n    var transformEaches = cssConfig.transformEach;\n    if ( ! (transformEaches instanceof Array)) {\n      transformEaches = [transformEaches];\n    }\n    var transforms = transformEaches.map(function (transformEach) {\n      // It could just be a function to use for all platforms\n      if (typeof transformEach === 'function' || typeof transformEach === 'string') {\n        return transformEach;\n      }\n      // or it could be an object with requirejs and node keys\n      var keyed = transformEach[key];\n      if (keyed) {\n        return keyed;\n      }\n      // dont support this\n      throw new Error(\"Couldn't extract transform from \" + transformEach);\n    });\n    return transforms;\n};\n\n});\n","\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n/*\n * css.normalize.js\n *\n * CSS Normalization\n *\n * CSS paths are normalized based on an optional basePath and the RequireJS config\n *\n * Usage:\n *   normalize(css, fromBasePath, toBasePath);\n *\n * css: the stylesheet content to normalize\n * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)\n * toBasePath: the absolute new base path of the css relative to the same root\n * \n * Absolute dependencies are left untouched.\n *\n * Urls in the CSS are picked up by regular expressions.\n * These will catch all statements of the form:\n *\n * url(*)\n * url('*')\n * url(\"*\")\n * \n * @import '*'\n * @import \"*\"\n *\n * (and so also @import url(*) variations)\n *\n * For urls needing normalization\n *\n */\n\ndefine('css/normalize',[],function() {\n  \n  // regular expression for removing double slashes\n  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here\n  var slashes = /([^:])\\/+/g\n  var removeDoubleSlashes = function(uri) {\n    return uri.replace(slashes, '$1/');\n  }\n\n  // given a relative URI, and two absolute base URIs, convert it from one base to another\n  var protocolRegEx = /[^\\:\\/]*:\\/\\/([^\\/])*/;\n  var absUrlRegEx = /^(\\/|data:)/;\n  function convertURIBase(uri, fromBase, toBase) {\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    uri = removeDoubleSlashes(uri);\n    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not\n    // use absolute path at fromBase\n    var toBaseProtocol = toBase.match(protocolRegEx);\n    var fromBaseProtocol = fromBase.match(protocolRegEx);\n    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))\n      return absoluteURI(uri, fromBase);\n    \n    else {\n      return relativeURI(absoluteURI(uri, fromBase), toBase);\n    }\n  };\n  \n  // given a relative URI, calculate the absolute URI\n  function absoluteURI(uri, base) {\n    if (uri.substr(0, 2) == './')\n      uri = uri.substr(2);\n\n    // absolute urls are left in tact\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    \n    var baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    \n    baseParts.pop();\n    \n    while (curPart = uriParts.shift())\n      if (curPart == '..')\n        baseParts.pop();\n      else\n        baseParts.push(curPart);\n    \n    return baseParts.join('/');\n  };\n\n\n  // given an absolute URI, calculate the relative URI\n  function relativeURI(uri, base) {\n    \n    // reduce base and uri strings to just their difference string\n    var baseParts = base.split('/');\n    baseParts.pop();\n    base = baseParts.join('/') + '/';\n    i = 0;\n    while (base.substr(i, 1) == uri.substr(i, 1))\n      i++;\n    while (base.substr(i, 1) != '/')\n      i--;\n    base = base.substr(i + 1);\n    uri = uri.substr(i + 1);\n\n    // each base folder difference is thus a backtrack\n    baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    out = '';\n    while (baseParts.shift())\n      out += '../';\n    \n    // finally add uri parts\n    while (curPart = uriParts.shift())\n      out += curPart + '/';\n    \n    return out.substr(0, out.length - 1);\n  };\n  \n  var normalizeCSS = function(source, fromBase, toBase) {\n\n    fromBase = removeDoubleSlashes(fromBase);\n    toBase = removeDoubleSlashes(toBase);\n\n    var urlRegEx = /@import\\s*(\"([^\"]*)\"|'([^']*)')|url\\s*\\(\\s*(\\s*\"([^\"]*)\"|'([^']*)'|[^\\)]*\\s*)\\s*\\)/ig;\n    var result, url, source;\n\n    while (result = urlRegEx.exec(source)) {\n      url = result[3] || result[2] || result[5] || result[6] || result[4];\n      var newUrl;\n      newUrl = convertURIBase(url, fromBase, toBase);\n      var quoteLen = result[5] || result[6] ? 1 : 0;\n      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);\n      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);\n    }\n    \n    return source;\n  };\n  \n  normalizeCSS.convertURIBase = convertURIBase;\n  normalizeCSS.absoluteURI = absoluteURI;\n  normalizeCSS.relativeURI = relativeURI;\n  \n  return normalizeCSS;\n});\n//>>excludeEnd('excludeRequireCss')\n;","\ndefine('css/css-builder',['require', './normalize', './parse-module-path', './transform-css'],\nfunction(req, normalize, parseModulePath, getTransformedCss) {\n  var cssAPI = {};\n\n  var isWindows = !!process.platform.match(/^win/);\n\n  function compress(css) {\n    if (typeof process !== \"undefined\" && process.versions && !!process.versions.node && require.nodeRequire) {\n      try {\n        var csso = require.nodeRequire('csso');\n      }\n      catch(e) {\n        console.log('Compression module not installed. Use \"npm install csso -g\" to enable.');\n        return css;\n      }\n      var csslen = css.length;\n      try {\n        css =  csso.justDoIt(css);\n      }\n      catch(e) {\n        console.log('Compression failed due to a CSS syntax error.');\n        return css;\n      }\n      console.log('Compressed CSS output to ' + Math.round(css.length / csslen * 100) + '%.');\n      return css;\n    }\n    console.log('Compression not supported outside of nodejs environments.');\n    return css;\n  }\n\n  //load file code - stolen from text plugin\n  function loadFile(path) {\n    if (typeof process !== \"undefined\" && process.versions && !!process.versions.node && require.nodeRequire) {\n      var fs = require.nodeRequire('fs');\n      var file = fs.readFileSync(path, 'utf8');\n      if (file.indexOf('\\uFEFF') === 0)\n        return file.substring(1);\n      return file;\n    }\n    else {\n      var file = new java.io.File(path),\n        lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n        input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), 'utf-8')),\n        stringBuffer, line;\n      try {\n        stringBuffer = new java.lang.StringBuffer();\n        line = input.readLine();\n        if (line && line.length() && line.charAt(0) === 0xfeff)\n          line = line.substring(1);\n        stringBuffer.append(line);\n        while ((line = input.readLine()) !== null) {\n          stringBuffer.append(lineSeparator).append(line);\n        }\n        return String(stringBuffer.toString());\n      }\n      finally {\n        input.close();\n      }\n    }\n  }\n\n\n  function saveFile(path, data) {\n    if (typeof process !== \"undefined\" && process.versions && !!process.versions.node && require.nodeRequire) {\n      var fs = require.nodeRequire('fs');\n      fs.writeFileSync(path, data, 'utf8');\n    }\n    else {\n      var content = new java.lang.String(data);\n      var output = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(path), 'utf-8'));\n\n      try {\n        output.write(content, 0, content.length());\n        output.flush();\n      }\n      finally {\n        output.close();\n      }\n    }\n  }\n\n  //when adding to the link buffer, paths are normalised to the baseUrl\n  //when removing from the link buffer, paths are normalised to the output file path\n  function escape(content) {\n    return content.replace(/([\"'\\\\])/g, '\\\\$1')\n      .replace(/[\\f]/g, \"\\\\f\")\n      .replace(/[\\b]/g, \"\\\\b\")\n      .replace(/[\\n]/g, \"\\\\n\")\n      .replace(/[\\t]/g, \"\\\\t\")\n      .replace(/[\\r]/g, \"\\\\r\");\n  }\n\n  // NB add @media query support for media imports\n  var importRegEx = /@import\\s*(url)?\\s*(('([^']*)'|\"([^\"]*)\")|\\(('([^']*)'|\"([^\"]*)\"|([^\\)]*))\\))\\s*;?/g;\n  var absUrlRegEx = /^([^\\:\\/]+:\\/)?\\//;\n\n\n  var siteRoot;\n\n  var baseParts = req.toUrl('base_url').split('/');\n  baseParts[baseParts.length - 1] = '';\n  var baseUrl = baseParts.join('/');\n\n  var curModule = 0;\n  var config;\n\n  var layerBuffer = [];\n\n  cssAPI.addToBuffer = function (str) {\n    layerBuffer.push(str);\n  };\n\n  cssAPI.clearBuffer = function () {\n    layerBuffer.length = 0;\n  };\n\n  cssAPI.getBuffer = function () {\n    return layerBuffer;\n  };\n\n  var cssBuffer = {};\n\n  // Load a file path on disk\n  function loadModuleAsync(toUrl, module, callback) {\n    var str = loadFile(toUrl(module));\n    callback(str);\n  }\n\n  var didClearFile = false;\n  cssAPI.load = function(name, req, load, _config) {\n    //store config\n    config = config || _config;\n    var cssConfig = config.css || {};\n\n    // The config.css.clearFileEachBuild option, if present\n    // indicates a file that should be emptied on each new build\n    // Otherwise the file will always be appended to\n    if (cssConfig.clearFileEachBuild && ! didClearFile) {\n      saveFile(cssConfig.clearFileEachBuild, '');\n    }\n\n    if (!siteRoot) {\n      siteRoot = path.resolve(config.dir || path.dirname(config.out), config.siteRoot || '.') + '/';\n      if (isWindows)\n        siteRoot = siteRoot.replace(/\\\\/g, '/');\n    }\n\n    //external URLS don't get added (just like JS requires)\n    if (name.match(absUrlRegEx))\n      return load();\n\n    function nodeReq(depNames, callback) {\n      var depUrls = depNames.map(req.toUrl);\n      var deps = depUrls.map(require.nodeRequire);\n      callback.apply({}, deps);\n    }\n    console.log('transforming css for', name);\n    getTransformedCss(\n      nodeReq,\n      loadModuleAsync.bind({}, req.toUrl),\n      getTransformedCss.getTransformEaches(config, 'node'),\n      name,\n      function withTransformedCss(cssStr) {\n        var parsed = parseModulePath(name);\n        var fileUrl = req.toUrl(parsed.cssId + '.css');\n        var normalizedCssStr = normalize(cssStr, isWindows ? fileUrl.replace(/\\\\/g, '/') : fileUrl, siteRoot);\n        cssBuffer[name] = normalizedCssStr;\n        load();\n      });\n  };\n\n  cssAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 4, 4) == '.css')\n      name = name.substr(0, name.length - 4);\n    return normalize(name);\n  };\n\n  cssAPI.write = function(pluginName, moduleName, write, parse) {\n    //external URLS don't get added (just like JS requires)\n    if (moduleName.match(absUrlRegEx))\n      return;\n\n    cssAPI.addToBuffer(cssBuffer[moduleName]);\n\n    if (config.buildCSS != false)\n    write.asModule(pluginName + '!' + moduleName, 'define(function(){})');\n  }\n\n  cssAPI.onLayerEnd = function(write, data) {\n    this.flushBuffer(config, write, data);\n  }\n\n  cssAPI.flushBuffer = function(config, write, data) {\n    var layerBuffer = cssAPI.getBuffer();\n\n    if (config.separateCSS && config.IESelectorLimit)\n      throw 'RequireCSS: separateCSS option is not compatible with ensuring the IE selector limit';\n\n    if (config.separateCSS) {\n      console.log('Writing CSS! file: ' + data.name + '\\n');\n      var outPath;\n\n      if (config.dir) {\n        outPath = path.resolve(config.dir, config.baseUrl, data.name + '.css');\n      } else {\n        outPath = config.out.replace(/(\\.js)?$/, '.css');\n      }\n\n      var css = layerBuffer.join('');\n      var toWrite = compress(css);\n      debugger;\n      if (fs.existsSync(outPath)) {\n        var existingCss = loadFile(outPath);\n        toWrite = existingCss +'\\n' + toWrite;\n        console.log('RequireCSS: Warning, separateCSS module path \"' + outPath + '\" already exists and is being appended to by the layer CSS.');\n        saveFile(outPath, toWrite);\n      } else {\n        saveFile(outPath, toWrite);\n      }\n\n    }\n    if (config.buildCSS != false) {\n      var styles = config.IESelectorLimit ? layerBuffer : [layerBuffer.join('')];\n      for (var i = 0; i < styles.length; i++) {\n        if (styles[i] == '')\n          return;\n        console.log('writing something');\n        write(\n          \"(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\\n\"\n          + \"('\" + escape(compress(styles[i])) + \"');\\n\"\n        );\n      }\n    }\n    //clear layer buffer for next layer\n    cssAPI.clearBuffer();\n  }\n\n  return cssAPI;\n});\n","\ndefine('less/less',['require', 'css'], function(require, cssAPI) {\n  \n  var lessAPI = {};\n  \n  lessAPI.pluginBuilder = './less-builder';\n  \n  if (typeof window == 'undefined') {\n    lessAPI.load = function(n, r, load) { load(); }\n    return lessAPI;\n  }\n  \n  lessAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 5, 5) == '.less')\n      name = name.substr(0, name.length - 5);\n\n    name = normalize(name);\n\n    return name;\n  }\n  \n  var head = document.getElementsByTagName('head')[0];\n\n  var base = document.getElementsByTagName('base');\n  base = base && base[0] && base[0] && base[0].href;\n  var pagePath = (base || window.location.href.split('#')[0].split('?')[0]).split('/');\n  pagePath[pagePath.length - 1] = '';\n  pagePath = pagePath.join('/');\n\n  var styleCnt = 0;\n  var curStyle;\n  lessAPI.inject = function(css) {\n    if (styleCnt < 31) {\n      curStyle = document.createElement('style');\n      curStyle.type = 'text/css';\n      head.appendChild(curStyle);\n      styleCnt++;\n    }\n    if (curStyle.styleSheet)\n      curStyle.styleSheet.cssText += css;\n    else\n      curStyle.appendChild(document.createTextNode(css));\n  }\n\n  // If config.less.browserLoad is set, then the user does not want to \n  // run less.js in the browser. They just want to include another,\n  // probably already built, css file.\n  var insertedBrowerLoad = false;\n\n  lessAPI.load = function(lessId, req, load, config) {\n    var lessConfig = window.less = config.less || {};\n    window.less.env = 'development';\n\n    if (lessConfig.browserLoad) {\n      if ( ! insertedBrowerLoad) {\n        insertedBrowerLoad = true;\n        config.css.transform = false;\n        return cssAPI.load(lessConfig.browserLoad, req, load, config);        \n      }\n      return load();\n    }\n\n    require(['./lessc', './normalize'], function(lessc, normalize) {\n\n      var fileUrl = req.toUrl(lessId + '.less');\n      fileUrl = normalize.absoluteURI(fileUrl, pagePath);\n\n      var parser = new lessc.Parser(window.less);\n\n      parser.parse('@import (multiple) \"' + fileUrl + '\";', function(err, tree) {\n        if (err)\n          return load.error(err);\n\n        lessAPI.inject(normalize(tree.toCSS(config.less), fileUrl, pagePath));\n\n        setTimeout(load, 7);\n      });\n\n    });\n  }\n  \n  return lessAPI;\n});\n\ndefine('less', ['less/less'], function (main) { return main; });\n","\ndefine('inherits',[], function () {\n\n\n    /**\n     * sub should prototypally inherit from base\n     * @param sub {function} Subclass constructor\n     * @param base {function} Base class constructor\n     */\n    function inherits (sub, base) {\n        var Fn = function(){};\n        Fn.prototype = base.prototype;\n        sub.prototype = new Fn();\n        sub.prototype.constructor = sub;\n    }\n\n\n    /**\n     * sub should parasitically inherit from base\n     * that is, we should pluck values from base.prototype onto sub.prototype\n     */\n    inherits.parasitically = function (sub, base) {\n        var baseKeys = inherits.keys(base.prototype),\n            baseKeysLength = baseKeys.length,\n            methodName;\n        for (var i=0; i < baseKeysLength; i++) {\n            methodName = baseKeys[i];\n            if ( ! sub.prototype[methodName]) {\n                sub.prototype[methodName] = base.prototype[methodName];\n            }\n        }\n    };\n\n\n    /**\n     * Object.keys shim\n     */\n    inherits.keys = Object.keys || (function () {\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !{toString:null}.propertyIsEnumerable(\"toString\"),\n            DontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ],\n            DontEnumsLength = DontEnums.length;\n\n        return function (o) {\n            if (typeof o != \"object\" && typeof o != \"function\" || o === null)\n                throw new TypeError(\"Object.keys called on a non-object\");\n\n            var result = [];\n            for (var name in o) {\n                if (hasOwnProperty.call(o, name))\n                    result.push(name);\n            }\n\n            if (hasDontEnumBug) {\n                for (var i = 0; i < DontEnumsLength; i++) {\n                    if (hasOwnProperty.call(o, DontEnums[i]))\n                        result.push(DontEnums[i]);\n                }\n            }\n\n            return result;\n        };\n    })();\n\n    return inherits;\n});","\ndefine('jquery',[], function(require, exports, module) {/*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license\n//@ sourceMappingURL=jquery.min.map\n*/\n(function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f=\"1.10.2\",d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=/\\S+/g,C=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,k=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,E=/^[\\],:{}\\s]*$/,S=/(?:^|:|,)(?:\\s*\\[)+/g,A=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,j=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,D=/^-ms-/,L=/-([\\da-z])/gi,H=function(e,t){return t.toUpperCase()},q=function(e){(a.addEventListener||\"load\"===e.type||\"complete\"===a.readyState)&&(_(),x.ready())},_=function(){a.addEventListener?(a.removeEventListener(\"DOMContentLoaded\",q,!1),e.removeEventListener(\"load\",q,!1)):(a.detachEvent(\"onreadystatechange\",q),e.detachEvent(\"onload\",q))};x.fn=x.prototype={jquery:f,constructor:x,init:function(e,n,r){var i,o;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof x?n[0]:n,x.merge(this,x.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:a,!0)),k.test(i[1])&&x.isPlainObject(n))for(i in n)x.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(o=a.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=a,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:\"\",length:0,toArray:function(){return g.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(g.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},l=2),\"object\"==typeof s||x.isFunction(s)||(s={}),u===l&&(s=this,--l);u>l;l++)if(null!=(o=arguments[l]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(x.isPlainObject(r)||(n=x.isArray(r)))?(n?(n=!1,a=e&&x.isArray(e)?e:[]):a=e&&x.isPlainObject(e)?e:{},s[i]=x.extend(c,a,r)):r!==t&&(s[i]=r));return s},x.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=l),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){if(e===!0?!--x.readyWait:!x.isReady){if(!a.body)return setTimeout(x.ready);x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(a,[x]),x.fn.trigger&&x(a).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===x.type(e)},isArray:Array.isArray||function(e){return\"array\"===x.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?c[y.call(e)]||\"object\":typeof e},isPlainObject:function(e){var n;if(!e||\"object\"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!v.call(e,\"constructor\")&&!v.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(r){return!1}if(x.support.ownLast)for(n in e)return v.call(e,n);for(n in e);return n===t||v.call(e,n)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||a;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=x.trim(n),n&&E.test(n.replace(A,\"@\").replace(j,\"]\").replace(S,\"\")))?Function(\"return \"+n)():(x.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||x.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&x.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(D,\"ms-\").replace(L,H)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:b&&!b.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":b.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(C,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?x.merge(n,\"string\"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(m)return m.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return d.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),x.isFunction(e)?(r=g.call(arguments,2),i=function(){return e.apply(n||this,r.concat(g.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):t},access:function(e,n,r,i,o,a,s){var l=0,u=e.length,c=null==r;if(\"object\"===x.type(r)){o=!0;for(l in r)x.access(e,n,l,r[l],!0,a,s)}else if(i!==t&&(o=!0,x.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(x(e),n)})),n))for(;u>l;l++)n(e[l],r,s?i:i.call(e[l],l,n(e[l],r)));return o?e:c?n.call(e):u?n(e[0],r):a},now:function(){return(new Date).getTime()},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),x.ready.promise=function(t){if(!n)if(n=x.Deferred(),\"complete\"===a.readyState)setTimeout(x.ready);else if(a.addEventListener)a.addEventListener(\"DOMContentLoaded\",q,!1),e.addEventListener(\"load\",q,!1);else{a.attachEvent(\"onreadystatechange\",q),e.attachEvent(\"onload\",q);var r=!1;try{r=null==e.frameElement&&a.documentElement}catch(i){}r&&r.doScroll&&function o(){if(!x.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(o,50)}_(),x.ready()}}()}return n.promise(t)},x.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){c[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=x(a),function(e,t){var n,r,i,o,a,s,l,u,c,p,f,d,h,g,m,y,v,b=\"sizzle\"+-new Date,w=e.document,T=0,C=0,N=st(),k=st(),E=st(),S=!1,A=function(e,t){return e===t?(S=!0,0):0},j=typeof t,D=1<<31,L={}.hasOwnProperty,H=[],q=H.pop,_=H.push,M=H.push,O=H.slice,F=H.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},B=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",P=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",R=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",W=R.replace(\"w\",\"w#\"),$=\"\\\\[\"+P+\"*(\"+R+\")\"+P+\"*(?:([*^$|!~]?=)\"+P+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+W+\")|)|)\"+P+\"*\\\\]\",I=\":(\"+R+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+$.replace(3,8)+\")*)|.*)\\\\)|)\",z=RegExp(\"^\"+P+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+P+\"+$\",\"g\"),X=RegExp(\"^\"+P+\"*,\"+P+\"*\"),U=RegExp(\"^\"+P+\"*([>+~]|\"+P+\")\"+P+\"*\"),V=RegExp(P+\"*[+~]\"),Y=RegExp(\"=\"+P+\"*([^\\\\]'\\\"]*)\"+P+\"*\\\\]\",\"g\"),J=RegExp(I),G=RegExp(\"^\"+W+\"$\"),Q={ID:RegExp(\"^#(\"+R+\")\"),CLASS:RegExp(\"^\\\\.(\"+R+\")\"),TAG:RegExp(\"^(\"+R.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+$),PSEUDO:RegExp(\"^\"+I),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+P+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+P+\"*(?:([+-]|)\"+P+\"*(\\\\d+)|))\"+P+\"*\\\\)|)\",\"i\"),bool:RegExp(\"^(?:\"+B+\")$\",\"i\"),needsContext:RegExp(\"^\"+P+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+P+\"*((?:-\\\\d)?\\\\d*)\"+P+\"*\\\\)|)(?=[^-]|$)\",\"i\")},K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,et=/^(?:input|select|textarea|button)$/i,tt=/^h\\d$/i,nt=/'|\\\\/g,rt=RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+P+\"?|(\"+P+\")|.)\",\"ig\"),it=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(55296|r>>10,56320|1023&r)};try{M.apply(H=O.call(w.childNodes),w.childNodes),H[w.childNodes.length].nodeType}catch(ot){M={apply:H.length?function(e,t){_.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function at(e,t,n,i){var o,a,s,l,u,c,d,m,y,x;if((t?t.ownerDocument||t:w)!==f&&p(t),t=t||f,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(l=t.nodeType)&&9!==l)return[];if(h&&!i){if(o=Z.exec(e))if(s=o[1]){if(9===l){if(a=t.getElementById(s),!a||!a.parentNode)return n;if(a.id===s)return n.push(a),n}else if(t.ownerDocument&&(a=t.ownerDocument.getElementById(s))&&v(t,a)&&a.id===s)return n.push(a),n}else{if(o[2])return M.apply(n,t.getElementsByTagName(e)),n;if((s=o[3])&&r.getElementsByClassName&&t.getElementsByClassName)return M.apply(n,t.getElementsByClassName(s)),n}if(r.qsa&&(!g||!g.test(e))){if(m=d=b,y=t,x=9===l&&e,1===l&&\"object\"!==t.nodeName.toLowerCase()){c=mt(e),(d=t.getAttribute(\"id\"))?m=d.replace(nt,\"\\\\$&\"):t.setAttribute(\"id\",m),m=\"[id='\"+m+\"'] \",u=c.length;while(u--)c[u]=m+yt(c[u]);y=V.test(e)&&t.parentNode||t,x=c.join(\",\")}if(x)try{return M.apply(n,y.querySelectorAll(x)),n}catch(T){}finally{d||t.removeAttribute(\"id\")}}}return kt(e.replace(z,\"$1\"),t,n,i)}function st(){var e=[];function t(n,r){return e.push(n+=\" \")>o.cacheLength&&delete t[e.shift()],t[n]=r}return t}function lt(e){return e[b]=!0,e}function ut(e){var t=f.createElement(\"div\");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ct(e,t){var n=e.split(\"|\"),r=e.length;while(r--)o.attrHandle[n[r]]=t}function pt(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||D)-(~e.sourceIndex||D);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function ft(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function dt(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function ht(e){return lt(function(t){return t=+t,lt(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}s=at.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},r=at.support={},p=at.setDocument=function(e){var n=e?e.ownerDocument||e:w,i=n.defaultView;return n!==f&&9===n.nodeType&&n.documentElement?(f=n,d=n.documentElement,h=!s(n),i&&i.attachEvent&&i!==i.top&&i.attachEvent(\"onbeforeunload\",function(){p()}),r.attributes=ut(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),r.getElementsByTagName=ut(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),r.getElementsByClassName=ut(function(e){return e.innerHTML=\"<div class='a'></div><div class='a i'></div>\",e.firstChild.className=\"i\",2===e.getElementsByClassName(\"i\").length}),r.getById=ut(function(e){return d.appendChild(e).id=b,!n.getElementsByName||!n.getElementsByName(b).length}),r.getById?(o.find.ID=function(e,t){if(typeof t.getElementById!==j&&h){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){return e.getAttribute(\"id\")===t}}):(delete o.find.ID,o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){var n=typeof e.getAttributeNode!==j&&e.getAttributeNode(\"id\");return n&&n.value===t}}),o.find.TAG=r.getElementsByTagName?function(e,n){return typeof n.getElementsByTagName!==j?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},o.find.CLASS=r.getElementsByClassName&&function(e,n){return typeof n.getElementsByClassName!==j&&h?n.getElementsByClassName(e):t},m=[],g=[],(r.qsa=K.test(n.querySelectorAll))&&(ut(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||g.push(\"\\\\[\"+P+\"*(?:value|\"+B+\")\"),e.querySelectorAll(\":checked\").length||g.push(\":checked\")}),ut(function(e){var t=n.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"t\",\"\"),e.querySelectorAll(\"[t^='']\").length&&g.push(\"[*^$]=\"+P+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":enabled\").length||g.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),g.push(\",.*:\")})),(r.matchesSelector=K.test(y=d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&ut(function(e){r.disconnectedMatch=y.call(e,\"div\"),y.call(e,\"[s!='']:x\"),m.push(\"!=\",I)}),g=g.length&&RegExp(g.join(\"|\")),m=m.length&&RegExp(m.join(\"|\")),v=K.test(d.contains)||d.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},A=d.compareDocumentPosition?function(e,t){if(e===t)return S=!0,0;var i=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t);return i?1&i||!r.sortDetached&&t.compareDocumentPosition(e)===i?e===n||v(w,e)?-1:t===n||v(w,t)?1:c?F.call(c,e)-F.call(c,t):0:4&i?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return S=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:c?F.call(c,e)-F.call(c,t):0;if(o===a)return pt(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?pt(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},n):f},at.matches=function(e,t){return at(e,null,null,t)},at.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&p(e),t=t.replace(Y,\"='$1']\"),!(!r.matchesSelector||!h||m&&m.test(t)||g&&g.test(t)))try{var n=y.call(e,t);if(n||r.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(i){}return at(t,f,null,[e]).length>0},at.contains=function(e,t){return(e.ownerDocument||e)!==f&&p(e),v(e,t)},at.attr=function(e,n){(e.ownerDocument||e)!==f&&p(e);var i=o.attrHandle[n.toLowerCase()],a=i&&L.call(o.attrHandle,n.toLowerCase())?i(e,n,!h):t;return a===t?r.attributes||!h?e.getAttribute(n):(a=e.getAttributeNode(n))&&a.specified?a.value:null:a},at.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},at.uniqueSort=function(e){var t,n=[],i=0,o=0;if(S=!r.detectDuplicates,c=!r.sortStable&&e.slice(0),e.sort(A),S){while(t=e[o++])t===e[o]&&(i=n.push(o));while(i--)e.splice(n[i],1)}return e},a=at.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=a(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=a(t);return n},o=at.selectors={cacheLength:50,createPseudo:lt,match:Q,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(rt,it),e[3]=(e[4]||e[5]||\"\").replace(rt,it),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||at.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&at.error(e[0]),e},PSEUDO:function(e){var n,r=!e[5]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]&&e[4]!==t?e[2]=e[4]:r&&J.test(r)&&(n=mt(r,!0))&&(n=r.indexOf(\")\",r.length-n)-r.length)&&(e[0]=e[0].slice(0,n),e[2]=r.slice(0,n)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(rt,it).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=N[e+\" \"];return t||(t=RegExp(\"(^|\"+P+\")\"+e+\"(\"+P+\"|$)\"))&&N(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||typeof e.getAttribute!==j&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=at.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!l&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[b]||(m[b]={}),u=c[e]||[],d=u[0]===T&&u[1],f=u[0]===T&&u[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[T,d,f];break}}else if(v&&(u=(t[b]||(t[b]={}))[e])&&u[0]===T)f=u[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[b]||(p[b]={}))[e]=[T,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=o.pseudos[e]||o.setFilters[e.toLowerCase()]||at.error(\"unsupported pseudo: \"+e);return r[b]?r(t):r.length>1?(n=[e,e,\"\",t],o.setFilters.hasOwnProperty(e.toLowerCase())?lt(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=F.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:lt(function(e){var t=[],n=[],r=l(e.replace(z,\"$1\"));return r[b]?lt(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:lt(function(e){return function(t){return at(e,t).length>0}}),contains:lt(function(e){return function(t){return(t.textContent||t.innerText||a(t)).indexOf(e)>-1}}),lang:lt(function(e){return G.test(e||\"\")||at.error(\"unsupported lang: \"+e),e=e.replace(rt,it).toLowerCase(),function(t){var n;do if(n=h?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===d},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!o.pseudos.empty(e)},header:function(e){return tt.test(e.nodeName)},input:function(e){return et.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:ht(function(){return[0]}),last:ht(function(e,t){return[t-1]}),eq:ht(function(e,t,n){return[0>n?n+t:n]}),even:ht(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:ht(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:ht(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:ht(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}},o.pseudos.nth=o.pseudos.eq;for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[n]=ft(n);for(n in{submit:!0,reset:!0})o.pseudos[n]=dt(n);function gt(){}gt.prototype=o.filters=o.pseudos,o.setFilters=new gt;function mt(e,t){var n,r,i,a,s,l,u,c=k[e+\" \"];if(c)return t?0:c.slice(0);s=e,l=[],u=o.preFilter;while(s){(!n||(r=X.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=U.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(z,\" \")}),s=s.slice(n.length));for(a in o.filter)!(r=Q[a].exec(s))||u[a]&&!(r=u[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?at.error(e):k(e,l).slice(0)}function yt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function vt(e,t,n){var r=t.dir,o=n&&\"parentNode\"===r,a=C++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||o)return e(t,n,i)}:function(t,n,s){var l,u,c,p=T+\" \"+a;if(s){while(t=t[r])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[r])if(1===t.nodeType||o)if(c=t[b]||(t[b]={}),(u=c[r])&&u[0]===p){if((l=u[1])===!0||l===i)return l===!0}else if(u=c[r]=[p],u[1]=e(t,n,s)||i,u[1]===!0)return!0}}function bt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function xt(e,t,n,r,i){var o,a=[],s=0,l=e.length,u=null!=t;for(;l>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),u&&t.push(s));return a}function wt(e,t,n,r,i,o){return r&&!r[b]&&(r=wt(r)),i&&!i[b]&&(i=wt(i,o)),lt(function(o,a,s,l){var u,c,p,f=[],d=[],h=a.length,g=o||Nt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:xt(g,f,e,s,l),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,l),r){u=xt(y,d),r(u,[],s,l),c=u.length;while(c--)(p=u[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){u=[],c=y.length;while(c--)(p=y[c])&&u.push(m[c]=p);i(null,y=[],u,l)}c=y.length;while(c--)(p=y[c])&&(u=i?F.call(o,p):f[c])>-1&&(o[u]=!(a[u]=p))}}else y=xt(y===a?y.splice(h,y.length):y),i?i(null,a,y,l):M.apply(a,y)})}function Tt(e){var t,n,r,i=e.length,a=o.relative[e[0].type],s=a||o.relative[\" \"],l=a?1:0,c=vt(function(e){return e===t},s,!0),p=vt(function(e){return F.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==u)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;i>l;l++)if(n=o.relative[e[l].type])f=[vt(bt(f),n)];else{if(n=o.filter[e[l].type].apply(null,e[l].matches),n[b]){for(r=++l;i>r;r++)if(o.relative[e[r].type])break;return wt(l>1&&bt(f),l>1&&yt(e.slice(0,l-1).concat({value:\" \"===e[l-2].type?\"*\":\"\"})).replace(z,\"$1\"),n,r>l&&Tt(e.slice(l,r)),i>r&&Tt(e=e.slice(r)),i>r&&yt(e))}f.push(n)}return bt(f)}function Ct(e,t){var n=0,r=t.length>0,a=e.length>0,s=function(s,l,c,p,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,C=u,N=s||a&&o.find.TAG(\"*\",d&&l.parentNode||l),k=T+=null==C?1:Math.random()||.1;for(w&&(u=l!==f&&l,i=n);null!=(h=N[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,l,c)){p.push(h);break}w&&(T=k,i=++n)}r&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,r&&b!==v){g=0;while(m=t[g++])m(x,y,l,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=q.call(p));y=xt(y)}M.apply(p,y),w&&!s&&y.length>0&&v+t.length>1&&at.uniqueSort(p)}return w&&(T=k,u=C),x};return r?lt(s):s}l=at.compile=function(e,t){var n,r=[],i=[],o=E[e+\" \"];if(!o){t||(t=mt(e)),n=t.length;while(n--)o=Tt(t[n]),o[b]?r.push(o):i.push(o);o=E(e,Ct(i,r))}return o};function Nt(e,t,n){var r=0,i=t.length;for(;i>r;r++)at(e,t[r],n);return n}function kt(e,t,n,i){var a,s,u,c,p,f=mt(e);if(!i&&1===f.length){if(s=f[0]=f[0].slice(0),s.length>2&&\"ID\"===(u=s[0]).type&&r.getById&&9===t.nodeType&&h&&o.relative[s[1].type]){if(t=(o.find.ID(u.matches[0].replace(rt,it),t)||[])[0],!t)return n;e=e.slice(s.shift().value.length)}a=Q.needsContext.test(e)?0:s.length;while(a--){if(u=s[a],o.relative[c=u.type])break;if((p=o.find[c])&&(i=p(u.matches[0].replace(rt,it),V.test(s[0].type)&&t.parentNode||t))){if(s.splice(a,1),e=i.length&&yt(s),!e)return M.apply(n,i),n;break}}}return l(e,f)(i,t,!h,n,V.test(e)),n}r.sortStable=b.split(\"\").sort(A).join(\"\")===b,r.detectDuplicates=S,p(),r.sortDetached=ut(function(e){return 1&e.compareDocumentPosition(f.createElement(\"div\"))}),ut(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||ct(\"type|href|height|width\",function(e,n,r){return r?t:e.getAttribute(n,\"type\"===n.toLowerCase()?1:2)}),r.attributes&&ut(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||ct(\"value\",function(e,n,r){return r||\"input\"!==e.nodeName.toLowerCase()?t:e.defaultValue}),ut(function(e){return null==e.getAttribute(\"disabled\")})||ct(B,function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&i.specified?i.value:e[n]===!0?n.toLowerCase():null}),x.find=at,x.expr=at.selectors,x.expr[\":\"]=x.expr.pseudos,x.unique=at.uniqueSort,x.text=at.getText,x.isXMLDoc=at.isXML,x.contains=at.contains}(e);var O={};function F(e){var t=O[e]={};return x.each(e.match(T)||[],function(e,n){t[n]=!0}),t}x.Callbacks=function(e){e=\"string\"==typeof e?O[e]||F(e):x.extend({},e);var n,r,i,o,a,s,l=[],u=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=l.length,n=!0;l&&o>a;a++)if(l[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,l&&(u?u.length&&c(u.shift()):r?l=[]:p.disable())},p={add:function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);\"function\"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this},remove:function(){return l&&x.each(arguments,function(e,t){var r;while((r=x.inArray(t,l,r))>-1)l.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?x.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],o=0,this},disable:function(){return l=u=r=t,this},disabled:function(){return!l},lock:function(){return u=t,r||p.disable(),this},locked:function(){return!u},fireWith:function(e,t){return!l||i&&!u||(t=t||[],t=[e,t.slice?t.slice():t],n?u.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},x.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",x.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",x.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",x.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&x.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?x.extend(e,r):r}},i={};return r.pipe=r.then,x.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=g.call(arguments),r=n.length,i=1!==r||e&&x.isFunction(e.promise)?r:0,o=1===i?e:x.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?g.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,l,u;if(r>1)for(s=Array(r),l=Array(r),u=Array(r);r>t;t++)n[t]&&x.isFunction(n[t].promise)?n[t].promise().done(a(t,u,n)).fail(o.reject).progress(a(t,l,s)):--i;return i||o.resolveWith(u,n),o.promise()}}),x.support=function(t){var n,r,o,s,l,u,c,p,f,d=a.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\")||[],r=d.getElementsByTagName(\"a\")[0],!r||!r.style||!n.length)return t;s=a.createElement(\"select\"),u=s.appendChild(a.createElement(\"option\")),o=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t.getSetAttribute=\"t\"!==d.className,t.leadingWhitespace=3===d.firstChild.nodeType,t.tbody=!d.getElementsByTagName(\"tbody\").length,t.htmlSerialize=!!d.getElementsByTagName(\"link\").length,t.style=/top/.test(r.getAttribute(\"style\")),t.hrefNormalized=\"/a\"===r.getAttribute(\"href\"),t.opacity=/^0.5/.test(r.style.opacity),t.cssFloat=!!r.style.cssFloat,t.checkOn=!!o.value,t.optSelected=u.selected,t.enctype=!!a.createElement(\"form\").enctype,t.html5Clone=\"<:nav></:nav>\"!==a.createElement(\"nav\").cloneNode(!0).outerHTML,t.inlineBlockNeedsLayout=!1,t.shrinkWrapBlocks=!1,t.pixelPosition=!1,t.deleteExpando=!0,t.noCloneEvent=!0,t.reliableMarginRight=!0,t.boxSizingReliable=!0,o.checked=!0,t.noCloneChecked=o.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!u.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}o=a.createElement(\"input\"),o.setAttribute(\"value\",\"\"),t.input=\"\"===o.getAttribute(\"value\"),o.value=\"t\",o.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===o.value,o.setAttribute(\"checked\",\"t\"),o.setAttribute(\"name\",\"t\"),l=a.createDocumentFragment(),l.appendChild(o),t.appendChecked=o.checked,t.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip;for(f in x(t))break;return t.ownLast=\"0\"!==f,x(function(){var n,r,o,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",l=a.getElementsByTagName(\"body\")[0];l&&(n=a.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",l.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",o=d.getElementsByTagName(\"td\"),o[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===o[0].offsetHeight,o[0].style.display=\"\",o[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===o[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",x.swap(l,null!=l.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===d.offsetWidth}),e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(a.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(l.style.zoom=1)),l.removeChild(n),n=d=o=r=null)}),n=s=l=u=r=o=null,t\n}({});var B=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,P=/([A-Z])/g;function R(e,n,r,i){if(x.acceptData(e)){var o,a,s=x.expando,l=e.nodeType,u=l?x.cache:e,c=l?e[s]:e[s]&&s;if(c&&u[c]&&(i||u[c].data)||r!==t||\"string\"!=typeof n)return c||(c=l?e[s]=p.pop()||x.guid++:s),u[c]||(u[c]=l?{}:{toJSON:x.noop}),(\"object\"==typeof n||\"function\"==typeof n)&&(i?u[c]=x.extend(u[c],n):u[c].data=x.extend(u[c].data,n)),a=u[c],i||(a.data||(a.data={}),a=a.data),r!==t&&(a[x.camelCase(n)]=r),\"string\"==typeof n?(o=a[n],null==o&&(o=a[x.camelCase(n)])):o=a,o}}function W(e,t,n){if(x.acceptData(e)){var r,i,o=e.nodeType,a=o?x.cache:e,s=o?e[x.expando]:x.expando;if(a[s]){if(t&&(r=n?a[s]:a[s].data)){x.isArray(t)?t=t.concat(x.map(t,x.camelCase)):t in r?t=[t]:(t=x.camelCase(t),t=t in r?[t]:t.split(\" \")),i=t.length;while(i--)delete r[t[i]];if(n?!I(r):!x.isEmptyObject(r))return}(n||(delete a[s].data,I(a[s])))&&(o?x.cleanData([e],!0):x.support.deleteExpando||a!=a.window?delete a[s]:a[s]=null)}}}x.extend({cache:{},noData:{applet:!0,embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"},hasData:function(e){return e=e.nodeType?x.cache[e[x.expando]]:e[x.expando],!!e&&!I(e)},data:function(e,t,n){return R(e,t,n)},removeData:function(e,t){return W(e,t)},_data:function(e,t,n){return R(e,t,n,!0)},_removeData:function(e,t){return W(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&x.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),x.fn.extend({data:function(e,n){var r,i,o=null,a=0,s=this[0];if(e===t){if(this.length&&(o=x.data(s),1===s.nodeType&&!x._data(s,\"parsedAttrs\"))){for(r=s.attributes;r.length>a;a++)i=r[a].name,0===i.indexOf(\"data-\")&&(i=x.camelCase(i.slice(5)),$(s,i,o[i]));x._data(s,\"parsedAttrs\",!0)}return o}return\"object\"==typeof e?this.each(function(){x.data(this,e)}):arguments.length>1?this.each(function(){x.data(this,e,n)}):s?$(s,e,x.data(s,e)):null},removeData:function(e){return this.each(function(){x.removeData(this,e)})}});function $(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(P,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:B.test(r)?x.parseJSON(r):r}catch(o){}x.data(e,n,r)}else r=t}return r}function I(e){var t;for(t in e)if((\"data\"!==t||!x.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}x.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=x._data(e,n),r&&(!i||x.isArray(r)?i=x._data(e,n,x.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=x.queue(e,t),r=n.length,i=n.shift(),o=x._queueHooks(e,t),a=function(){x.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return x._data(e,n)||x._data(e,n,{empty:x.Callbacks(\"once memory\").add(function(){x._removeData(e,t+\"queue\"),x._removeData(e,n)})})}}),x.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?x.queue(this[0],e):n===t?this:this.each(function(){var t=x.queue(this,e,n);x._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&x.dequeue(this,e)})},dequeue:function(e){return this.each(function(){x.dequeue(this,e)})},delay:function(e,t){return e=x.fx?x.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=x.Deferred(),a=this,s=this.length,l=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=x._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(l));return l(),o.promise(n)}});var z,X,U=/[\\t\\r\\n\\f]/g,V=/\\r/g,Y=/^(?:input|select|textarea|button|object)$/i,J=/^(?:a|area)$/i,G=/^(?:checked|selected)$/i,Q=x.support.getSetAttribute,K=x.support.input;x.fn.extend({attr:function(e,t){return x.access(this,x.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){x.removeAttr(this,e)})},prop:function(e,t){return x.access(this,x.prop,e,t,arguments.length>1)},removeProp:function(e){return e=x.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).addClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=x.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=0===arguments.length||\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).removeClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?x.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e;return\"boolean\"==typeof t&&\"string\"===n?t?this.addClass(e):this.removeClass(e):x.isFunction(e)?this.each(function(n){x(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var t,r=0,o=x(this),a=e.match(T)||[];while(t=a[r++])o.hasClass(t)?o.removeClass(t):o.addClass(t)}else(n===i||\"boolean\"===n)&&(this.className&&x._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":x._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(U,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=x.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,x(this).val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":x.isArray(o)&&(o=x.map(o,function(e){return null==e?\"\":e+\"\"})),r=x.valHooks[this.type]||x.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=x.valHooks[o.type]||x.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(V,\"\"):null==n?\"\":n)}}}),x.extend({valHooks:{option:{get:function(e){var t=x.find.attr(e,\"value\");return null!=t?t:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,l=0>i?s:o?i:0;for(;s>l;l++)if(n=r[l],!(!n.selected&&l!==i||(x.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&x.nodeName(n.parentNode,\"optgroup\"))){if(t=x(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n,r,i=e.options,o=x.makeArray(t),a=i.length;while(a--)r=i[a],(r.selected=x.inArray(x(r).val(),o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}},attr:function(e,n,r){var o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute===i?x.prop(e,n,r):(1===s&&x.isXMLDoc(e)||(n=n.toLowerCase(),o=x.attrHooks[n]||(x.expr.match.bool.test(n)?X:z)),r===t?o&&\"get\"in o&&null!==(a=o.get(e,n))?a:(a=x.find.attr(e,n),null==a?t:a):null!==r?o&&\"set\"in o&&(a=o.set(e,r,n))!==t?a:(e.setAttribute(n,r+\"\"),r):(x.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(T);if(o&&1===e.nodeType)while(n=o[i++])r=x.propFix[n]||n,x.expr.match.bool.test(n)?K&&Q||!G.test(n)?e[r]=!1:e[x.camelCase(\"default-\"+n)]=e[r]=!1:x.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!x.support.radioValue&&\"radio\"===t&&x.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!x.isXMLDoc(e),a&&(n=x.propFix[n]||n,o=x.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var t=x.find.attr(e,\"tabindex\");return t?parseInt(t,10):Y.test(e.nodeName)||J.test(e.nodeName)&&e.href?0:-1}}}}),X={set:function(e,t,n){return t===!1?x.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&x.propFix[n]||n,n):e[x.camelCase(\"default-\"+n)]=e[n]=!0,n}},x.each(x.expr.match.bool.source.match(/\\w+/g),function(e,n){var r=x.expr.attrHandle[n]||x.find.attr;x.expr.attrHandle[n]=K&&Q||!G.test(n)?function(e,n,i){var o=x.expr.attrHandle[n],a=i?t:(x.expr.attrHandle[n]=t)!=r(e,n,i)?n.toLowerCase():null;return x.expr.attrHandle[n]=o,a}:function(e,n,r){return r?t:e[x.camelCase(\"default-\"+n)]?n.toLowerCase():null}}),K&&Q||(x.attrHooks.value={set:function(e,n,r){return x.nodeName(e,\"input\")?(e.defaultValue=n,t):z&&z.set(e,n,r)}}),Q||(z={set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},x.expr.attrHandle.id=x.expr.attrHandle.name=x.expr.attrHandle.coords=function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&\"\"!==i.value?i.value:null},x.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&r.specified?r.value:t},set:z.set},x.attrHooks.contenteditable={set:function(e,t,n){z.set(e,\"\"===t?!1:t,n)}},x.each([\"width\",\"height\"],function(e,n){x.attrHooks[n]={set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}}})),x.support.hrefNormalized||x.each([\"href\",\"src\"],function(e,t){x.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),x.support.style||(x.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),x.support.optSelected||(x.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),x.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){x.propFix[this.toLowerCase()]=this}),x.support.enctype||(x.propFix.enctype=\"encoding\"),x.each([\"radio\",\"checkbox\"],function(){x.valHooks[this]={set:function(e,n){return x.isArray(n)?e.checked=x.inArray(x(e).val(),n)>=0:t}},x.support.checkOn||(x.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}function at(){try{return a.activeElement}catch(e){}}x.event={global:{},add:function(e,n,r,o,a){var s,l,u,c,p,f,d,h,g,m,y,v=x._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=x.guid++),(l=v.events)||(l=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof x===i||e&&x.event.triggered===e.type?t:x.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(T)||[\"\"],u=n.length;while(u--)s=rt.exec(n[u])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),g&&(p=x.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=x.event.special[g]||{},d=x.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&x.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=l[g])||(h=l[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),x.event.global[g]=!0);e=null}},remove:function(e,t,n,r,i){var o,a,s,l,u,c,p,f,d,h,g,m=x.hasData(e)&&x._data(e);if(m&&(c=m.events)){t=(t||\"\").match(T)||[\"\"],u=t.length;while(u--)if(s=rt.exec(t[u])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=x.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),l=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));l&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||x.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)x.event.remove(e,d+t[u],n,r,!0);x.isEmptyObject(c)&&(delete m.handle,x._removeData(e,\"events\"))}},trigger:function(n,r,i,o){var s,l,u,c,p,f,d,h=[i||a],g=v.call(n,\"type\")?n.type:n,m=v.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(u=f=i=i||a,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+x.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),l=0>g.indexOf(\":\")&&\"on\"+g,n=n[x.expando]?n:new x.Event(g,\"object\"==typeof n&&n),n.isTrigger=o?2:3,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:x.makeArray(r,[n]),p=x.event.special[g]||{},o||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!o&&!p.noBubble&&!x.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(u=u.parentNode);u;u=u.parentNode)h.push(u),f=u;f===(i.ownerDocument||a)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((u=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(x._data(u,\"events\")||{})[n.type]&&x._data(u,\"handle\"),s&&s.apply(u,r),s=l&&u[l],s&&x.acceptData(u)&&s.apply&&s.apply(u,r)===!1&&n.preventDefault();if(n.type=g,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(h.pop(),r)===!1)&&x.acceptData(i)&&l&&i[g]&&!x.isWindow(i)){f=i[l],f&&(i[l]=null),x.event.triggered=g;try{i[g]()}catch(y){}x.event.triggered=t,f&&(i[l]=f)}return n.result}},dispatch:function(e){e=x.event.fix(e);var n,r,i,o,a,s=[],l=g.call(arguments),u=(x._data(this,\"events\")||{})[e.type]||[],c=x.event.special[e.type]||{};if(l[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=x.event.handlers.call(this,e,u),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((x.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,l),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],l=n.delegateCount,u=e.target;if(l&&u.nodeType&&(!e.button||\"click\"!==e.type))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(u.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;l>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?x(r,this).index(u)>=0:x.find(r,this,null,[u]).length),o[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return n.length>l&&s.push({elem:this,handlers:n.slice(l)}),s},fix:function(e){if(e[x.expando])return e;var t,n,r,i=e.type,o=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new x.Event(o),t=r.length;while(t--)n=r[t],e[n]=o[n];return e.target||(e.target=o.srcElement||a),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,o):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,o,s=n.button,l=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||a,o=i.documentElement,r=i.body,e.pageX=n.clientX+(o&&o.scrollLeft||r&&r.scrollLeft||0)-(o&&o.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(o&&o.scrollTop||r&&r.scrollTop||0)-(o&&o.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&l&&(e.relatedTarget=l===e.target?n.toElement:l),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==at()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===at()&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},click:{trigger:function(){return x.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t},_default:function(e){return x.nodeName(e.target,\"a\")}},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=x.extend(new x.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?x.event.trigger(i,null,t):x.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},x.removeEvent=a.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},x.Event=function(e,n){return this instanceof x.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&x.extend(this,n),this.timeStamp=e&&e.timeStamp||x.now(),this[x.expando]=!0,t):new x.Event(e,n)},x.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},x.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){x.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!x.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),x.support.submitBubbles||(x.event.special.submit={setup:function(){return x.nodeName(this,\"form\")?!1:(x.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=x.nodeName(n,\"input\")||x.nodeName(n,\"button\")?n.form:t;r&&!x._data(r,\"submitBubbles\")&&(x.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),x._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&x.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return x.nodeName(this,\"form\")?!1:(x.event.remove(this,\"._submit\"),t)}}),x.support.changeBubbles||(x.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(x.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),x.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),x.event.simulate(\"change\",this,e,!0)})),!1):(x.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!x._data(t,\"changeBubbles\")&&(x.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||x.event.simulate(\"change\",this.parentNode,e,!0)}),x._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return x.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),x.support.focusinBubbles||x.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){x.event.simulate(t,e.target,x.event.fix(e),!0)};x.event.special[t]={setup:function(){0===n++&&a.addEventListener(e,r,!0)},teardown:function(){0===--n&&a.removeEventListener(e,r,!0)}}}),x.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return x().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=x.guid++)),this.each(function(){x.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,x(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){x.event.remove(this,e,r,n)})},trigger:function(e,t){return this.each(function(){x.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?x.event.trigger(e,n,r,!0):t}});var st=/^.[^:#\\[\\.,]*$/,lt=/^(?:parents|prev(?:Until|All))/,ut=x.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};x.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if(\"string\"!=typeof e)return this.pushStack(x(e).filter(function(){for(t=0;i>t;t++)if(x.contains(r[t],this))return!0}));for(t=0;i>t;t++)x.find(e,r[t],n);return n=this.pushStack(i>1?x.unique(n):n),n.selector=this.selector?this.selector+\" \"+e:e,n},has:function(e){var t,n=x(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(x.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e||[],!0))},filter:function(e){return this.pushStack(ft(this,e||[],!1))},is:function(e){return!!ft(this,\"string\"==typeof e&&ut.test(e)?x(e):e||[],!1).length},closest:function(e,t){var n,r=0,i=this.length,o=[],a=ut.test(e)||\"string\"!=typeof e?x(e,t||this.context):0;for(;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(11>n.nodeType&&(a?a.index(n)>-1:1===n.nodeType&&x.find.matchesSelector(n,e))){n=o.push(n);break}return this.pushStack(o.length>1?x.unique(o):o)},index:function(e){return e?\"string\"==typeof e?x.inArray(this[0],x(e)):x.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?x(e,t):x.makeArray(e&&e.nodeType?[e]:e),r=x.merge(this.get(),n);return this.pushStack(x.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}x.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return x.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return x.dir(e,\"nextSibling\")},prevAll:function(e){return x.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return x.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return x.dir(e,\"previousSibling\",n)},siblings:function(e){return x.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return x.sibling(e.firstChild)},contents:function(e){return x.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:x.merge([],e.childNodes)}},function(e,t){x.fn[e]=function(n,r){var i=x.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(i=x.filter(r,i)),this.length>1&&(ct[e]||(i=x.unique(i)),lt.test(e)&&(i=i.reverse())),this.pushStack(i)}}),x.extend({filter:function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?x.find.matchesSelector(r,e)?[r]:[]:x.find.matches(e,x.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!x(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(x.isFunction(t))return x.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return x.grep(e,function(e){return e===t!==n});if(\"string\"==typeof t){if(st.test(t))return x.filter(t,e,n);t=x.filter(t,e)}return x.grep(e,function(e){return x.inArray(e,t)>=0!==n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Ct=/^(?:checkbox|radio)$/i,Nt=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:x.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(a),Dt=jt.appendChild(a.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,x.fn.extend({text:function(e){return x.access(this,function(e){return e===t?x.text(this):this.empty().append((this[0]&&this[0].ownerDocument||a).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=e?x.filter(e,this):this,i=0;for(;null!=(n=r[i]);i++)t||1!==n.nodeType||x.cleanData(Ft(n)),n.parentNode&&(t&&x.contains(n.ownerDocument,n)&&_t(Ft(n,\"script\")),n.parentNode.removeChild(n));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&x.cleanData(Ft(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&x.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return x.clone(this,e,t)})},html:function(e){return x.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!x.support.htmlSerialize&&mt.test(e)||!x.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(x.cleanData(Ft(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=x.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],i=e[t++];i&&(r&&r.parentNode!==i&&(r=this.nextSibling),x(this).remove(),i.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=d.apply([],e);var r,i,o,a,s,l,u=0,c=this.length,p=this,f=c-1,h=e[0],g=x.isFunction(h);if(g||!(1>=c||\"string\"!=typeof h||x.support.checkClone)&&Nt.test(h))return this.each(function(r){var i=p.eq(r);g&&(e[0]=h.call(this,r,i.html())),i.domManip(e,t,n)});if(c&&(l=x.buildFragment(e,this[0].ownerDocument,!1,!n&&this),r=l.firstChild,1===l.childNodes.length&&(l=r),r)){for(a=x.map(Ft(l,\"script\"),Ht),o=a.length;c>u;u++)i=l,u!==f&&(i=x.clone(i,!0,!0),o&&x.merge(a,Ft(i,\"script\"))),t.call(this[u],i,u);if(o)for(s=a[a.length-1].ownerDocument,x.map(a,qt),u=0;o>u;u++)i=a[u],kt.test(i.type||\"\")&&!x._data(i,\"globalEval\")&&x.contains(s,i)&&(i.src?x._evalUrl(i.src):x.globalEval((i.text||i.textContent||i.innerHTML||\"\").replace(St,\"\")));l=r=null}return this}});function Lt(e,t){return x.nodeName(e,\"table\")&&x.nodeName(1===t.nodeType?t:t.firstChild,\"tr\")?e.getElementsByTagName(\"tbody\")[0]||e.appendChild(e.ownerDocument.createElement(\"tbody\")):e}function Ht(e){return e.type=(null!==x.find.attr(e,\"type\"))+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function _t(e,t){var n,r=0;for(;null!=(n=e[r]);r++)x._data(n,\"globalEval\",!t||x._data(t[r],\"globalEval\"))}function Mt(e,t){if(1===t.nodeType&&x.hasData(e)){var n,r,i,o=x._data(e),a=x._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)x.event.add(t,n,s[n][r])}a.data&&(a.data=x.extend({},a.data))}}function Ot(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!x.support.noCloneEvent&&t[x.expando]){i=x._data(t);for(r in i.events)x.removeEvent(t,r,i.handle);t.removeAttribute(x.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),x.support.html5Clone&&e.innerHTML&&!x.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Ct.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}x.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){x.fn[e]=function(e){var n,r=0,i=[],o=x(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),x(o[r])[t](n),h.apply(i,n.get());return this.pushStack(i)}});function Ft(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||x.nodeName(o,n)?s.push(o):x.merge(s,Ft(o,n));return n===t||n&&x.nodeName(e,n)?x.merge([e],s):s}function Bt(e){Ct.test(e.type)&&(e.defaultChecked=e.checked)}x.extend({clone:function(e,t,n){var r,i,o,a,s,l=x.contains(e.ownerDocument,e);if(x.support.html5Clone||x.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(x.support.noCloneEvent&&x.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||x.isXMLDoc(e)))for(r=Ft(o),s=Ft(e),a=0;null!=(i=s[a]);++a)r[a]&&Ot(i,r[a]);if(t)if(n)for(s=s||Ft(e),r=r||Ft(o),a=0;null!=(i=s[a]);a++)Mt(i,r[a]);else Mt(e,o);return r=Ft(o,\"script\"),r.length>0&&_t(r,!l&&Ft(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,l,u,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===x.type(o))x.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),l=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[l]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!x.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!x.support.tbody){o=\"table\"!==l||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)x.nodeName(u=o.childNodes[i],\"tbody\")&&!u.childNodes.length&&o.removeChild(u)}x.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),x.support.appendChecked||x.grep(Ft(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===x.inArray(o,r))&&(a=x.contains(o.ownerDocument,o),s=Ft(f.appendChild(o),\"script\"),a&&_t(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,l=x.expando,u=x.cache,c=x.support.deleteExpando,f=x.event.special;for(;null!=(n=e[s]);s++)if((t||x.acceptData(n))&&(o=n[l],a=o&&u[o])){if(a.events)for(r in a.events)f[r]?x.event.remove(n,r):x.removeEvent(n,r,a.handle);\nu[o]&&(delete u[o],c?delete n[l]:typeof n.removeAttribute!==i?n.removeAttribute(l):n[l]=null,p.push(o))}},_evalUrl:function(e){return x.ajax({url:e,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})}}),x.fn.extend({wrapAll:function(e){if(x.isFunction(e))return this.each(function(t){x(this).wrapAll(e.call(this,t))});if(this[0]){var t=x(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return x.isFunction(e)?this.each(function(t){x(this).wrapInner(e.call(this,t))}):this.each(function(){var t=x(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=x.isFunction(e);return this.each(function(n){x(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){x.nodeName(this,\"body\")||x(this).replaceWith(this.childNodes)}).end()}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+w+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+w+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+w+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===x.css(e,\"display\")||!x.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=x._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=x._data(r,\"olddisplay\",ln(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&x._data(r,\"olddisplay\",i?n:x.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}x.fn.extend({css:function(e,n){return x.access(this,function(e,n,r){var i,o,a={},s=0;if(x.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=x.css(e,n[s],!1,o);return a}return r!==t?x.style(e,n,r):x.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){nn(this)?x(this).show():x(this).hide()})}}),x.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":x.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,l=x.camelCase(n),u=e.style;if(n=x.cssProps[l]||(x.cssProps[l]=tn(u,l)),s=x.cssHooks[n]||x.cssHooks[l],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:u[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(x.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||x.cssNumber[l]||(r+=\"px\"),x.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(u[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{u[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,l=x.camelCase(n);return n=x.cssProps[l]||(x.cssProps[l]=tn(e.style,l)),s=x.cssHooks[n]||x.cssHooks[l],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||x.isNumeric(o)?o||0:a):a}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s.getPropertyValue(n)||s[n]:t,u=e.style;return s&&(\"\"!==l||x.contains(e.ownerDocument,e)||(l=x.style(e,n)),Yt.test(l)&&Ut.test(n)&&(i=u.width,o=u.minWidth,a=u.maxWidth,u.minWidth=u.maxWidth=u.width=l,l=s.width,u.width=i,u.minWidth=o,u.maxWidth=a)),l}):a.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s[n]:t,u=e.style;return null==l&&u&&u[n]&&(l=u[n]),Yt.test(l)&&!zt.test(n)&&(i=u.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),u.left=\"fontSize\"===n?\"1em\":l,l=u.pixelLeft+\"px\",u.left=i,a&&(o.left=a)),\"\"===l?\"auto\":l});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=x.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=x.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=x.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(x.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function ln(e){var t=a,n=Gt[e];return n||(n=un(e,t),\"none\"!==n&&n||(Pt=(Pt||x(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=un(e,t),Pt.detach()),Gt[e]=n),n}function un(e,t){var n=x(t.createElement(e)).appendTo(t.body),r=x.css(n[0],\"display\");return n.remove(),r}x.each([\"height\",\"width\"],function(e,n){x.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(x.css(e,\"display\"))?x.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,i),i):0)}}}),x.support.opacity||(x.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=x.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===x.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),x(function(){x.support.reliableMarginRight||(x.cssHooks.marginRight={get:function(e,n){return n?x.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!x.support.pixelPosition&&x.fn.position&&x.each([\"top\",\"left\"],function(e,n){x.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?x(e).position()[n]+\"px\":r):t}}})}),x.expr&&x.expr.filters&&(x.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!x.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||x.css(e,\"display\"))},x.expr.filters.visible=function(e){return!x.expr.filters.hidden(e)}),x.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){x.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(x.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;x.fn.extend({serialize:function(){return x.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=x.prop(this,\"elements\");return e?x.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!x(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Ct.test(e))}).map(function(e,t){var n=x(this).val();return null==n?null:x.isArray(n)?x.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),x.param=function(e,n){var r,i=[],o=function(e,t){t=x.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=x.ajaxSettings&&x.ajaxSettings.traditional),x.isArray(e)||e.jquery&&!x.isPlainObject(e))x.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(x.isArray(t))x.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==x.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}x.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){x.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),x.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}});var mn,yn,vn=x.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Cn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Nn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=x.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=o.href}catch(Ln){yn=a.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(T)||[];if(x.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(l){var u;return o[l]=!0,x.each(e[l]||[],function(e,l){var c=l(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(u=c):t:(n.dataTypes.unshift(c),s(c),!1)}),u}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function _n(e,n){var r,i,o=x.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&x.extend(!0,e,r),e}x.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,l=e.indexOf(\" \");return l>=0&&(i=e.slice(l,e.length),e=e.slice(0,l)),x.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&x.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?x(\"<div>\").append(x.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},x.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){x.fn[t]=function(e){return this.on(t,e)}}),x.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Cn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":x.parseJSON,\"text xml\":x.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?_n(_n(e,x.ajaxSettings),t):_n(x.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,l,u,c,p=x.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?x(f):x.event,h=x.Deferred(),g=x.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},b=0,w=\"canceled\",C={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)m[t]=[m[t],e[t]];else C.always(e[C.status]);return this},abort:function(e){var t=e||w;return u&&u.abort(t),k(0,t),this}};if(h.promise(C).complete=g.add,C.success=C.done,C.error=C.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=x.trim(p.dataType||\"*\").toLowerCase().match(T)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?\"80\":\"443\"))===(mn[3]||(\"http:\"===mn[1]?\"80\":\"443\")))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=x.param(p.data,p.traditional)),qn(An,p,n,C),2===b)return C;l=p.global,l&&0===x.active++&&x.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Nn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(x.lastModified[o]&&C.setRequestHeader(\"If-Modified-Since\",x.lastModified[o]),x.etag[o]&&C.setRequestHeader(\"If-None-Match\",x.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&C.setRequestHeader(\"Content-Type\",p.contentType),C.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)C.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,C,p)===!1||2===b))return C.abort();w=\"abort\";for(i in{success:1,error:1,complete:1})C[i](p[i]);if(u=qn(jn,p,n,C)){C.readyState=1,l&&d.trigger(\"ajaxSend\",[C,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){C.abort(\"timeout\")},p.timeout));try{b=1,u.send(y,k)}catch(N){if(!(2>b))throw N;k(-1,N)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,N=n;2!==b&&(b=2,s&&clearTimeout(s),u=t,a=i||\"\",C.readyState=e>0?4:0,c=e>=200&&300>e||304===e,r&&(w=Mn(p,C,r)),w=On(p,w,C,c),c?(p.ifModified&&(T=C.getResponseHeader(\"Last-Modified\"),T&&(x.lastModified[o]=T),T=C.getResponseHeader(\"etag\"),T&&(x.etag[o]=T)),204===e||\"HEAD\"===p.type?N=\"nocontent\":304===e?N=\"notmodified\":(N=w.state,y=w.data,v=w.error,c=!v)):(v=N,(e||!N)&&(N=\"error\",0>e&&(e=0))),C.status=e,C.statusText=(n||N)+\"\",c?h.resolveWith(f,[y,N,C]):h.rejectWith(f,[C,N,v]),C.statusCode(m),m=t,l&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[C,p,c?y:v]),g.fireWith(f,[C,N]),l&&(d.trigger(\"ajaxComplete\",[C,p]),--x.active||x.event.trigger(\"ajaxStop\")))}return C},getJSON:function(e,t,n){return x.get(e,t,n,\"json\")},getScript:function(e,n){return x.get(e,t,n,\"script\")}}),x.each([\"get\",\"post\"],function(e,n){x[n]=function(e,r,i,o){return x.isFunction(r)&&(o=o||i,i=r,r=t),x.ajax({url:e,type:n,dataType:o,data:r,success:i})}});function Mn(e,n,r){var i,o,a,s,l=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in l)if(l[s]&&l[s].test(o)){u.unshift(s);break}if(u[0]in r)a=u[0];else{for(s in r){if(!u[0]||e.converters[s+\" \"+u[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==u[0]&&u.unshift(a),r[a]):t}function On(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if(\"*\"===o)o=l;else if(\"*\"!==l&&l!==o){if(a=u[l+\" \"+o]||u[\"* \"+o],!a)for(i in u)if(s=i.split(\" \"),s[1]===o&&(a=u[l+\" \"+s[0]]||u[\"* \"+s[0]])){a===!0?a=u[i]:u[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(p){return{state:\"parsererror\",error:a?p:\"No conversion from \"+l+\" to \"+o}}}return{state:\"success\",data:t}}x.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return x.globalEval(e),e}}}),x.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),x.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=a.head||x(\"head\")[0]||a.documentElement;return{send:function(t,i){n=a.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var Fn=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;x.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Fn.pop()||x.expando+\"_\"+vn++;return this[e]=!0,e}}),x.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,l=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return l||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=x.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,l?n[l]=n[l].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||x.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,Fn.push(o)),s&&x.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}x.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=x.ajaxSettings.xhr(),x.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=x.support.ajax=!!Rn,Rn&&x.ajaxTransport(function(n){if(!n.crossDomain||x.support.cors){var r;return{send:function(i,o){var a,s,l=n.xhr();if(n.username?l.open(n.type,n.url,n.async,n.username,n.password):l.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)l[s]=n.xhrFields[s];n.mimeType&&l.overrideMimeType&&l.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)l.setRequestHeader(s,i[s])}catch(u){}l.send(n.hasContent&&n.data||null),r=function(e,i){var s,u,c,p;try{if(r&&(i||4===l.readyState))if(r=t,a&&(l.onreadystatechange=x.noop,$n&&delete Pn[a]),i)4!==l.readyState&&l.abort();else{p={},s=l.status,u=l.getAllResponseHeaders(),\"string\"==typeof l.responseText&&(p.text=l.responseText);try{c=l.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,u)},n.async?4===l.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},x(e).unload($n)),Pn[a]=r),l.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+w+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Yn.exec(t),o=i&&i[3]||(x.cssNumber[e]?\"\":\"px\"),a=(x.cssNumber[e]||\"px\"!==o&&+r)&&Yn.exec(x.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==o){o=o||a[3],i=i||[],a=+r||1;do s=s||\".5\",a/=s,x.style(n.elem,e,a+o);while(s!==(s=n.cur()/r)&&1!==s&&--l)}return i&&(a=n.start=+a||+r||0,n.unit=o,n.end=i[1]?a+(i[1]+1)*i[2]:+i[2]),n}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=x.now()}function Zn(e,t,n){var r,i=(Qn[t]||[]).concat(Qn[\"*\"]),o=0,a=i.length;for(;a>o;o++)if(r=i[o].call(n,t,e))return r}function er(e,t,n){var r,i,o=0,a=Gn.length,s=x.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;for(;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:x.extend({},t),opts:x.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=x.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),c=u.props;for(tr(c,u.opts.specialEasing);a>o;o++)if(r=Gn[o].call(u,e,c,u.opts))return r;return x.map(c,Zn,u),x.isFunction(u.opts.start)&&u.opts.start.call(e,u),x.fx.timer(x.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function tr(e,t){var n,r,i,o,a;for(n in e)if(r=x.camelCase(n),i=t[r],o=e[n],x.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=x.cssHooks[r],a&&\"expand\"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}x.Animation=x.extend(er,{tweener:function(e,t){x.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,l,u=this,c={},p=e.style,f=e.nodeType&&nn(e),d=x._data(e,\"fxshow\");n.queue||(s=x._queueHooks(e,\"fx\"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,u.always(function(){u.always(function(){s.unqueued--,x.queue(e,\"fx\").length||s.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],\"inline\"===x.css(e,\"display\")&&\"none\"===x.css(e,\"float\")&&(x.support.inlineBlockNeedsLayout&&\"inline\"!==ln(e.nodeName)?p.zoom=1:p.display=\"inline-block\")),n.overflow&&(p.overflow=\"hidden\",x.support.shrinkWrapBlocks||u.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Vn.exec(i)){if(delete t[r],o=o||\"toggle\"===i,i===(f?\"hide\":\"show\"))continue;c[r]=d&&d[r]||x.style(e,r)}if(!x.isEmptyObject(c)){d?\"hidden\"in d&&(f=d.hidden):d=x._data(e,\"fxshow\",{}),o&&(d.hidden=!f),f?x(e).show():u.done(function(){x(e).hide()}),u.done(function(){var t;x._removeData(e,\"fxshow\");for(t in c)x.style(e,t,c[t])});for(r in c)a=Zn(f?d[r]:0,r,u),r in d||(d[r]=a.start,f&&(a.end=a.start,a.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}x.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(x.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?x.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=x.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){x.fx.step[e.prop]?x.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[x.cssProps[e.prop]]||x.cssHooks[e.prop])?x.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},x.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=x.fn[t];x.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),x.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=x.isEmptyObject(e),o=x.speed(t,n,r),a=function(){var t=er(this,x.extend({},e),o);(i||x._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=x.timers,a=x._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&x.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=x._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=x.timers,a=r?r.length:0;for(n.finish=!0,x.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}x.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){x.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),x.speed=function(e,t,n){var r=e&&\"object\"==typeof e?x.extend({},e):{complete:n||!n&&t||x.isFunction(e)&&e,duration:e,easing:n&&t||t&&!x.isFunction(t)&&t};return r.duration=x.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in x.fx.speeds?x.fx.speeds[r.duration]:x.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){x.isFunction(r.old)&&r.old.call(this),r.queue&&x.dequeue(this,r.queue)},r},x.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},x.timers=[],x.fx=rr.prototype.init,x.fx.tick=function(){var e,n=x.timers,r=0;for(Xn=x.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||x.fx.stop(),Xn=t},x.fx.timer=function(e){e()&&x.timers.push(e)&&x.fx.start()},x.fx.interval=13,x.fx.start=function(){Un||(Un=setInterval(x.fx.tick,x.fx.interval))},x.fx.stop=function(){clearInterval(Un),Un=null},x.fx.speeds={slow:600,fast:200,_default:400},x.fx.step={},x.expr&&x.expr.filters&&(x.expr.filters.animated=function(e){return x.grep(x.timers,function(t){return e===t.elem}).length}),x.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){x.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,x.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},x.offset={setOffset:function(e,t,n){var r=x.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=x(e),o=i.offset(),a=x.css(e,\"top\"),s=x.css(e,\"left\"),l=(\"absolute\"===r||\"fixed\"===r)&&x.inArray(\"auto\",[a,s])>-1,u={},c={},p,f;l?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),x.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(u.top=t.top-o.top+p),null!=t.left&&(u.left=t.left-o.left+f),\"using\"in t?t.using.call(e,u):i.css(u)}},x.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===x.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),x.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=x.css(e[0],\"borderTopWidth\",!0),n.left+=x.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-x.css(r,\"marginTop\",!0),left:t.left-n.left-x.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||s;while(e&&!x.nodeName(e,\"html\")&&\"static\"===x.css(e,\"position\"))e=e.offsetParent;return e||s})}}),x.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);x.fn[e]=function(i){return x.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?x(a).scrollLeft():o,r?o:x(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return x.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}x.each({Height:\"height\",Width:\"width\"},function(e,n){x.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){x.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return x.access(this,function(n,r,i){var o;return x.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?x.css(n,r,s):x.style(n,r,i,s)},n,a?i:t,a,null)}})}),x.fn.size=function(){return this.length},x.fn.andSelf=x.fn.addBack,\"object\"==typeof module&&module&&\"object\"==typeof module.exports?module.exports=x:(e.jQuery=e.$=x,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return x}))})(window);\n});","\ndefine('streamhub-sdk/jquery/jquery',['jquery'], function($) {\n    'use strict';\n\n    /**\n     * Cross domain requests in IE8/9 fail. Here is a patch for that.\n     * AJAX POST request on IE fails with error “No Transport”: http://stackoverflow.com/q/15418290\n     */\n    if (!$.support.cors && window.XDomainRequest) {\n        var httpRegEx = /^https?:\\/\\//i;\n        var getOrPostRegEx = /^get|post$/i;\n        var sameSchemeRegEx = new RegExp('^'+location.protocol, 'i');\n        var xmlRegEx = /\\/xml/i;\n        var XDomainRequest = window.XDomainRequest;\n        var ActiveXObject = window.ActiveXObject;\n\n        // ajaxTransport exists in jQuery 1.5+\n        $.ajaxTransport('text html xml json', function(options, userOptions, jqXHR) {\n            // XDomainRequests must be: asynchronous, GET or POST methods, HTTP or HTTPS protocol, and same scheme as calling page\n            if (options.crossDomain && options.async && getOrPostRegEx.test(options.type) && httpRegEx.test(userOptions.url) && sameSchemeRegEx.test(userOptions.url)) {\n                var xdr = null;\n                var userType = (userOptions.dataType||'').toLowerCase();\n                \n                return {\n                    send: function(headers, complete) {\n                        xdr = new XDomainRequest();\n                        \n                        if (/^\\d+$/.test(userOptions.timeout)) {\n                            xdr.timeout = userOptions.timeout;\n                        }\n                        \n                        xdr.ontimeout = function(){\n                            complete(500, 'timeout');\n                        };\n                        \n                        xdr.onload = function() {\n                            var allResponseHeaders = 'Content-Length: ' + xdr.responseText.length + '\\r\\nContent-Type: ' + xdr.contentType;\n                            var status = {\n                                code: 200,\n                                message: 'success'\n                            };\n                            var responses = {\n                                text: xdr.responseText\n                            };\n    \n                            try {\n                                if (userType === 'json') {\n                                    try {\n                                        responses.json = JSON.parse(xdr.responseText);\n                                    } catch(e) {\n                                        status.code = 500;\n                                        status.message = 'parseerror';\n                                        //throw 'Invalid JSON: ' + xdr.responseText;\n                                    }\n                                } else if ((userType === 'xml') || ((userType !== 'text') && xmlRegEx.test(xdr.contentType))) {\n                                    var doc = new ActiveXObject('Microsoft.XMLDOM');\n                                    doc.async = false;\n                                    try {\n                                        doc.loadXML(xdr.responseText);\n                                    } catch(e) {\n                                        doc = undefined;\n                                    }\n                                    if (!doc || !doc.documentElement || doc.getElementsByTagName('parsererror').length) {\n                                        status.code = 500;\n                                        status.message = 'parseerror';\n                                        throw 'Invalid XML: ' + xdr.responseText;\n                                    }\n                                    responses.xml = doc;\n                                }\n                            } catch(parseMessage) {\n                                throw parseMessage;\n                            } finally {\n                                complete(status.code, status.message, responses, allResponseHeaders);\n                            }\n                        };\n                        \n                        xdr.onerror = function(){\n                            complete(500, 'error', {\n                                text: xdr.responseText\n                            });\n                        };\n                        xdr.open(options.type, options.url);\n\n                        xdr.onprogress = function () {};\n\n                        if (userOptions.data && options.type === 'POST') {\n                            var data = userOptions.data;\n                            if (typeof(data) === 'object') {\n                                data = $.param(data);\n                            }\n\n                            xdr.send(data);\n                        } else {\n                            xdr.send();\n                        }\n                    },\n                    abort: function() {\n                        if (xdr) {\n                            xdr.abort();\n                        }\n                    }\n                };\n            }\n        });\n    }\n\n    return $;\n});\n\ndefine('streamhub-sdk/jquery', ['streamhub-sdk/jquery/jquery'], function (main) { return main; });\n","\ndefine('view/event-map',['require','exports','module'],function (require, exports, module) {'use strict';\n\n/**\n * An extensible object that maps event selectors to callback functions\n * @param events {Object} - Initial event mapping\n */\nfunction EventMap (events) {\n    this._factories = [];\n    extend(this, [events]);\n}\n\n/**\n * Return another EventMap that has been extended with\n * the provided objects\n * @param {...object} extensions - Objects to extend from\n * @returns {EventMap} - A new EventMap, extended from this and others\n */\nEventMap.prototype.extended = function () {\n    var newMap = new EventMap(this);\n    var extensions = [].slice.apply(arguments);\n    extend(newMap, extensions);\n    return newMap;\n};\n\n/**\n * Evaluate the EventMap with a particular context\n * Any ._factories will be called so that `this` is the provided context\n * @returns {object} object mapping event strings/selectors to callback functions\n */\nEventMap.prototype.withContext = function (context) {\n    var contextualExtensions = [];\n    var factory;\n    var theseEvents;\n    var events = {};\n    for (var i=0, numFactories=this._factories.length; i < numFactories; i++) {\n        factory = this._factories[i];\n        theseEvents = {};\n        contextualExtensions.push(factory.call(context, theseEvents) || theseEvents);\n    }\n    extend(events, [this].concat(contextualExtensions));\n    return events;\n};\n\n/**\n * Extend the first argument with keys from the rest, left to right\n * Only extends ownProperties (unlike $.extend)\n * @param {object} target - Target Object to extend\n * @param {object[]} extensions - Array of Objects to extend from\n */\nfunction extend (target, extensions) {\n    var copy, name, extension, extensionsLength;\n    target = target || {},\n    extensions = extensions || [];\n    extensionsLength = extensions.length;\n\n    for (var i=0; i < extensionsLength; i++) {\n        // Only deal with non-undefined values\n        if ((extension = extensions[i]) !== undefined) {\n            // If it's a function, store in target._factories\n            if (typeof extension === 'function') {\n                target._factories.push(extension);\n                continue;\n            }\n            // Extend the base object\n            for (name in extension) {\n                if ( ! extension.hasOwnProperty(name)) {\n                    continue;\n                }\n                copy = extension[name];\n\n                // Copy _factories array\n                if (name === '_factories' && copy.slice) {\n                    copy = copy.slice();\n                }\n\n                // Prevent never-ending loop\n                if (target === copy) {\n                    continue;\n                }\n\n                if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    // Return the modified object\n    return target;\n}\n\nmodule.exports = EventMap;\n\n});\n","\ndefine('view/delegate',['require','exports','module','jquery','view/event-map'],function (require, exports, module) {/**\n * @fileOverview Delegate utils.\n */\nvar $ = require('jquery');\nvar EventMap = require('view/event-map');\n\n/** @const {string} */\nvar EVENT_ANTENNA = '.delegateEvents';\n\n/** @const {RegExp} */\nvar EVENT_SPLITTER = /^(\\S+)\\s*(.*)$/;\n\n/** @type {number} */\nvar idCounts = 0;\n\n/**\n * Delegate events. Binds a listener for all events onto the $antenna. The\n * uniqueId is used as a way to access them later.\n * @param {jQuery} $antenna\n * @param {Object.<string, string|function>} events\n * @param {string} uniqueId\n * @param {Object} context\n */\nfunction delegateEvents($antenna, events, uniqueId, context) {\n    undelegateEvents($antenna, uniqueId);\n    if (events instanceof EventMap) {\n        events = events.withContext(context);\n    }\n    for (var key in events) {\n        if (events.hasOwnProperty(key)) {\n            var method = events[key];\n            if (typeof method === 'string') {\n                method = context[method];\n            }\n            if (!method) {\n                throw \"Undefined method for: \" + key;\n            }\n            method = $.proxy(method, context);\n\n            var match = key.match(EVENT_SPLITTER);\n            if (!match) {\n                throw \"Invalid event/selector pair: \" + key;\n            }\n            var eventName = match[1];\n            var selector = match[2];\n            eventName += EVENT_ANTENNA + uniqueId;\n            if (selector === '') {\n                $antenna.on(eventName, method);\n            } else {\n                $antenna.on(eventName, selector, method);\n            }\n        }\n    }\n}\n\n/**\n * Get a unique Id\n * @return {string}\n */\nfunction getUniqueId () {\n    return ++idCounts + '';\n}\n\n/**\n * Undelegate events. Removes all events from the provided antenna jQuery\n * element. Uses the uniqueId as a way of grabbing all delegated events.\n * @param {jQuery} $antenna The antenna element.\n * @param {string} uniqueId The id that all events are using.\n */\nfunction undelegateEvents($antenna, uniqueId) {\n    $antenna.off(EVENT_ANTENNA + uniqueId);\n}\n\nmodule.exports = {\n    delegateEvents: delegateEvents,\n    getUniqueId: getUniqueId,\n    undelegateEvents: undelegateEvents\n};\n\n});\n","\ndefine('event-emitter',[],function() {\n\n    var slice = Array.prototype.slice;\n\n\n    /**\n     * Defines the base class for all event emitting objects to extend.\n     * @exports streamhub-sdk/event-emitter\n     * @constructor\n     */\n    var EventEmitter = function() {\n        this._listeners = {};\n    };\n\n\n    EventEmitter.listenerCount = function (emitter, eventName) {\n        var listeners = emitter._listeners[eventName];\n        if ( ! listeners) {\n            return 0;\n        }\n        return listeners.length;\n    };\n\n\n    /**\n     * Binds a listener function to an event name.\n     * @param name {string} The event name to bind to.\n     * @param fn {function} The callback function to call whenever the event is emitted.\n     * @returns {EventEmitter} Returns 'this' for chaining\n     */\n    EventEmitter.prototype.on = function(name, fn) {\n        this._listeners[name] = this._listeners[name] || [];\n        this._listeners[name].push(fn);\n        return this;\n    };\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n\n    EventEmitter.prototype.once = function (name, fn) {\n        function doAndRemoveListener () {\n            this.removeListener(name, doAndRemoveListener);\n            fn.apply(this, arguments);\n        }\n        // Store original listener\n        doAndRemoveListener.listener = fn;\n        return this.on(name, doAndRemoveListener);\n    };\n\n\n    /**\n     * Removes a bound listener from the named event.\n     * @param name {string} The name of the event to remove this listener from.\n     * @param fn {function} The original callback function to remove.\n     */\n    EventEmitter.prototype.removeListener = function(name, fn) {\n        if (fn && this._listeners[name]) {\n            this._listeners[name].splice(indexOf(this._listeners[name], fn), 1);\n        }\n    };\n\n\n    /**\n     * Emits an event from the object this is called on. Iterates through bound\n     * listeners and passes through the arguments emit was called with.\n     * @param name {string} The name of the event to emit.\n     * @param {...Object} Optional arguments to pass to each listener's callback.\n     */\n    EventEmitter.prototype.emit = function(name) {\n        var listeners = this._listeners[name] || [],\n            args = slice.call(arguments, 1),\n            err;\n\n        // Copy listeners in case executing them mutates the array\n        // e.g. .once() listeners remove themselves\n        if (listeners.length) {\n            listeners = listeners.slice();\n        }\n        \n        // Throw on error event if there are no listeners\n        if (name === 'error' && ! listeners.length) {\n            err = args[0];\n            if (err instanceof Error) {\n                throw err;\n            } else {\n                throw TypeError('Uncaught, unspecified \"error\" event');\n            }\n        }\n\n        for (var i=0, numListeners=listeners.length; i < numListeners; i++) {\n            try {\n                listeners[i].apply(this, args); \n            } catch(err) {\n                this.emit('error', err);\n            }\n        }\n    };\n\n    /**\n     * Helper for Array.prototype.indexOf since IE8 does not have it.\n     * Note this does not implement a \"fromIndex\" param.\n     * @param {Array} arr\n     * @parma {*} obj\n     */\n    function indexOf(arr, obj) {\n        if (Array.prototype.indexOf) {\n            return arr.indexOf(obj);\n        }\n\n        for (var i = 0, l = arr.length; i < l; i++) {\n            if (arr[i] === obj) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    return EventEmitter;\n});\n","\ndefine('view/view',['require','exports','module','jquery','view/delegate','event-emitter','view/event-map','inherits'],function (require, exports, module) {var $ = require('jquery');\nvar delegate = require('view/delegate');\nvar EventEmitter = require('event-emitter');\nvar EventMap = require('view/event-map');\nvar inherits = require('inherits');\n\n'use strict';\n\n/**\n * A View is an Object that facades an HTMLElement, and provides helpful methods\n * for automatically creating appropriate Elements on construction, rendering\n * templates as their innerHTML, and delegating and undelegating event listeners\n * @param opts {Object} A set of options to config the view with\n * @param opts.el {HTMLElement} The element the View should control\n * @exports view/view\n * @constructor\n */\nvar View = function(opts) {\n    EventEmitter.call(this);\n    opts = opts || {};\n    this.opts = opts;\n    this.uid = delegate.getUniqueId();\n\n    this.setElement(opts.el || document.createElement(this.elTag));\n};\ninherits(View, EventEmitter);\n\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n/**\n * Find elements within the View's .el by jQuery selector\n * @param {string} selector\n * @return {jQuery}\n */\nView.prototype.$ = function(selector) {\n    return this.$el.find(selector);\n};\n\n/**\n * Find elements by class name\n * @param {string} className\n * @return {jQuery}\n */\nView.prototype.getElementsByClass = function(className) {\n    return this.$el.find('.' + className);\n};\n\n/**\n * The HTMLElement tag to use if this View creates its own element\n * @type {string}\n */\nView.prototype.elTag = 'div';\n\n/**\n * Class to be added to the view's element.\n * @type {string}\n */\nView.prototype.elClass = '';\n\n/**\n * Event bindings.\n * @type {EventMap}\n */\nView.prototype.events = new EventMap();\n\n/**\n * Get contextual data for a template.\n * @type {function()}\n */\nView.prototype.getTemplateContext = function () {\n    return this;\n};\n\n/**\n * The template that may be used for this view.\n * @type {?function()}\n */\nView.prototype.template = null;\n\n/**\n * Set the element for the view to render in.\n * You will probably want to call .render() after this, but not always.\n * @param element {HTMLElement} The element to render this View in\n * @return this\n */\nView.prototype.setElement = function (element) {\n    if (this.el) {\n        this.$el.removeClass(this.elClass);\n        this.undelegateEvents();\n    }\n\n    this.$el = element instanceof $ ? element : $(element);\n    this.el = this.$el[0];\n\n    if (this.elClass) {\n        this.$el.addClass(this.elClass);\n    }\n\n    this.delegateEvents();\n\n    return this;\n};\n\n/**\n * Attatch the declared events\n * @param events {Object.<string, (string|function)>} Mapping of event/selectors to a function\n * or the name of a method on this view.\n * Backbone.View style, e.g. { \"click testSelector\": \"updateTestEl\" }\n */\nView.prototype.delegateEvents = function (events) {\n    if (!(events || (events = this.events))) {\n        return this;\n    }\n    delegate.delegateEvents(this.$el, events, this.uid, this);\n    return this;\n};\n\n/**\n * Unbinds the events registered with .delegateEvents\n */\nView.prototype.undelegateEvents = function() {\n    delegate.undelegateEvents(this.$el, this.uid);\n    return this;\n};\n\n/**\n * If a template is set, render it in this.el\n * Subclasses will want to setElement on child views after rendering,\n *     then call .render() on those subelements\n */\nView.prototype.render = function () {\n    var context;\n    if (typeof this.template === 'function') {\n        context = this.getTemplateContext();\n        this.$el.html(this.template(context));\n    }\n};\n\n/**\n * The inverse of render. Detaches the element from the DOM.\n * Retains data and event handlers\n */\nView.prototype.detach = function () {\n    this.$el.detach();\n};\n\n/**\n * Destroy this View, rendering it useless.\n * Remove .el from the DOM, and unbind all event listeners in .events\n * Subclasses should free up as much memory as possible here.\n */\nView.prototype.destroy = function () {\n    this.$el.remove();\n    this.template = null;\n    this.undelegateEvents();\n};\n\nmodule.exports = View;\n\n});\n\ndefine('view', ['view/view'], function (main) { return main; });\n","\ndefine('debug/debug',['require','exports','module'],function (require, exports, module) {\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n\n});\n\ndefine('debug', ['debug/debug'], function (main) { return main; });\n","\ndefine('streamhub-sdk/view',['view'], function(View) {\n    'use strict';\n    return View;\n});\n","\ndefine('stream/writable',['stream', 'stream/util', 'inherits'], function (Stream, util, inherits) {\n\n    function Writable (opts) {\n        this.writable = true;\n        this._writableState = new WritableState(opts, this);\n        Stream.call(this, opts);\n    }\n\n    inherits(Writable, Stream);\n\n\n    Writable.prototype.write = function (chunk, errback) {\n        var state = this._writableState,\n            ret = false,\n            writeAfterEndErr;\n\n        if (typeof errback !== 'function') {\n            errback = function () {};\n        }\n\n        if (state.ended) {\n            writeAfterEndErr = new Error('.write() called after stream end');\n            this.emit('error', writeAfterEndErr);\n            util.nextTick(function () {\n                errback(writeAfterEndErr);\n            });\n        } else {\n            ret = this._writeOrBuffer(chunk, errback);\n        }\n\n        return ret;\n    };\n\n\n    Writable.prototype._writeOrBuffer = function (chunk, errback) {\n        var state = this._writableState,\n            ret = state.buffer.length < state.highWaterMark;\n\n        state.needDrain = !ret;\n\n        if (state.writing) {\n            state.buffer.push(new WriteReq(chunk, errback));\n        } else {\n            this._doWrite(chunk, errback);\n        }\n\n        return ret;\n    };\n\n\n    Writable.prototype._write = function(chunk, errback) {\n        errback(new Error('._write not implemented'));\n    };\n\n\n    Writable.prototype._onwrite = function (err) {\n        var self = this,\n            state = this._writableState,\n            sync = state.sync,\n            errback = state.writecb,\n            finished;\n\n        state.writing = false;\n        state.writecb = null;\n        state.writelen = 0;\n\n        if (err) {\n            if (sync) {\n                util.nextTick(function () {\n                    errback(err);\n                });\n            } else {\n                errback(err);\n            }\n            this.emit('error', err);\n        } else {\n            finished = this._needFinish();\n            if ( ! finished && ! state.bufferProcessing && state.buffer.length) {\n                this._clearBuffer();\n            }\n\n            if (sync) {\n                util.nextTick(function () {\n                    self._afterWrite(finished, errback);\n                });\n            } else {\n                this._afterWrite(finished, errback);\n            }\n        }\n    };\n\n\n    Writable.prototype._doWrite = function (chunk, errback) {\n        var state = this._writableState;\n        state.writelen = 1;\n        state.writecb = errback;\n        state.writing = true;\n        state.sync = true;\n        this._write(chunk, state.onwrite);\n        state.sync = false;\n    };\n\n\n    Writable.prototype._afterWrite = function (finished, errback) {\n        var state = this._writableState;\n        if ( ! finished) {\n            this._onwriteDrain();\n        }\n        errback();\n        if (finished) {\n            this._finishMaybe();\n        }\n    };\n\n\n    Writable.prototype._onwriteDrain = function () {\n        var state = this._writableState;\n        if (state.buffer.length === 0 && state.needDrain) {\n            state.needDrain = false;\n            this.emit('drain');\n        }\n    };\n\n\n    Writable.prototype._clearBuffer = function () {\n        var state = this._writableState;\n\n        state.bufferProcessing = true;\n\n        for (var c = 0; c < state.buffer.length; c++) {\n            var entry = state.buffer[c];\n            var chunk = entry.chunk;\n            var cb = entry.callback;\n            var len = 1;\n\n            this._doWrite(chunk, cb);\n\n            // if we didn't call the onwrite immediately, then\n            // it means that we need to wait until it does.\n            // also, that means that the chunk and cb are currently\n            // being processed, so move the buffer counter past them.\n            if (state.writing) {\n                c++;\n                break;\n            }\n        }\n\n        state.bufferProcessing = false;\n        if (c < state.buffer.length) {\n            state.buffer = state.buffer.slice(c);\n        } else {\n            // Clear the buffer\n            state.buffer.length = 0;\n        }\n    };\n\n\n    Writable.prototype.pipe = function () {\n        this.emit('error', new Error('Cannot pipe. Not readable'));\n    };\n\n\n    Writable.prototype.end = function (chunk, errback) {\n        var state = this._writableState;\n\n        // If only passed an errback\n        if (typeof chunk === 'function') {\n            errback = chunk;\n            chunk = null;\n        }\n\n        // If passed a chunk\n        if (typeof chunk !== 'undefined' && chunk !== null) {\n            this.write(chunk);\n        }\n\n        // Ignore extra .end() calls\n        if ( ! state.ending && ! state.finished) {\n            // Shut it down\n            state.ending = true;\n            this._finishMaybe();\n            if (errback) {\n                if (state.finished) {\n                    util.nextTick(errback);\n                } else {\n                    this.once('finish', errback);\n                }\n            }\n            state.ended = true;\n        }\n    };\n\n\n    /**\n     * @private\n     */\n    Writable.prototype._finishMaybe = function () {\n        var state = this._writableState,\n            needToFinish = this._needFinish();\n        if (needToFinish) {\n            state.finished = true;\n            this.emit('finish');\n        }\n        return needToFinish;\n    };\n\n\n    /**\n     * @private\n     */\n    Writable.prototype._needFinish = function () {\n        var state = this._writableState;\n        return (state.ending &&\n                state.buffer.length === 0 &&\n                ! state.finished &&\n                ! state.writing);\n    };\n\n\n    function WriteReq(chunk, cb) {\n        this.chunk = chunk;\n        this.callback = cb;\n    }\n\n\n    /**\n     * From https://github.com/isaacs/readable-stream/blob/c547457903406fdb9b5c621501c55eced48cae82/lib/_stream_writable.js#L41\n     */\n    function WritableState (opts, stream) {\n        opts = opts || {};\n\n        // the point at which write() starts returning false\n        // Note: 0 is a valid value, means that we always return false if\n        // the entire buffer is not flushed immediately on write()\n        var hwm = opts.highWaterMark;\n        this.highWaterMark = (hwm || hwm === 0) ? hwm : 0;\n\n        // object stream flag to indicate whether or not this stream\n        // contains buffers or objects.\n        this.objectMode = !!opts.objectMode;\n\n        // cast to ints.\n        this.highWaterMark = ~~this.highWaterMark;\n\n        this.needDrain = false;\n        // at the start of calling end()\n        this.ending = false;\n        // when end() has been called, and returned\n        this.ended = false;\n        // when 'finish' is emitted\n        this.finished = false;\n\n        // should we decode strings into buffers before passing to _write?\n        // this is here so that some node-core streams can optimize string\n        // handling at a lower level.\n        var noDecode = opts.decodeStrings === false;\n        this.decodeStrings = !noDecode;\n\n        // Crypto is kind of old and crusty.  Historically, its default string\n        // encoding is 'binary' so we have to make this configurable.\n        // Everything else in the universe uses 'utf8', though.\n        this.defaultEncoding = opts.defaultEncoding || 'utf8';\n\n        // not an actual buffer we keep track of, but a measurement\n        // of how much we're waiting to get pushed to some underlying\n        // socket or file.\n        this.length = 0;\n\n        // a flag to see when we're in the middle of a write.\n        this.writing = false;\n\n        // a flag to be able to tell if the onwrite cb is called immediately,\n        // or on a later tick.  We set this to true at first, becuase any\n        // actions that shouldn't happen until \"later\" should generally also\n        // not happen before the first write call.\n        this.sync = true;\n\n        // a flag to know if we're processing previously buffered items, which\n        // may call the _write() callback in the same tick, so that we don't\n        // end up in an overlapped onwrite situation.\n        this.bufferProcessing = false;\n\n        // the callback that's passed to _write(chunk,cb)\n        this.onwrite = function(er) {\n            stream._onwrite(er);\n        };\n\n        // the callback that the user supplies to write(chunk,encoding,cb)\n        this.writecb = null;\n\n        // the amount that is being written when _write is called.\n        this.writelen = 0;\n\n        this.buffer = [];\n    }\n\n    Writable.WritableState = WritableState;\n    return Writable;\n});","\ndefine('streamhub-sdk/debug',['require','exports','module','debug'],function (require, exports, module) {module.exports = require('debug');\n\n});\n","\ndefine('stream/main',[\n    'inherits',\n    'event-emitter'],\nfunction (inherits, EventEmitter) {\n    \"use strict\";\n\n    /**\n     * Base class for all Streams\n     */\n    function Stream (opts) {\n        EventEmitter.call(this);\n    }\n    inherits(Stream, EventEmitter);\n\n    return Stream;\n});\ndefine('stream', ['stream/main'], function (main) { return main; });\n","\ndefine('stream/util',[],function () {\n    \"use strict\";\n\n    var exports = {};\n\n    exports.nextTick = (function () {\n        if (typeof setImmediate == 'function') {\n            return function(f){ setImmediate(f); };\n        }\n        // fallback for other environments / postMessage behaves badly on IE8\n        else if (typeof window == 'undefined' || window.ActiveXObject || !window.postMessage) {\n            return function(f){ setTimeout(f); };\n        } else {\n            var q = [];\n\n            window.addEventListener('message', function(){\n                var i = 0;\n                while (i < q.length) {\n                    try { q[i++](); }\n                    catch (e) {\n                        q = q.slice(i);\n                        window.postMessage('tic!', '*');\n                        throw e;\n                    }\n                }\n                q.length = 0;\n            }, true);\n\n            return function(fn){\n                if (!q.length) window.postMessage('tic!', '*');\n                q.push(fn);\n            };\n        }\n    }());\n\n    return exports;\n});","\ndefine('stream/readable',['stream', 'stream/util', 'event-emitter', 'inherits'],\nfunction (Stream, util, EventEmitter, inherits) {\n    \"use strict\";\n\n    /**\n     * Base class for Readable Streams\n     * @constructor\n     * @param [opts] {object} Configuration options\n     * @param [opts.highWaterMark=0] {number} The maximum number of objects to\n     *     store in the internal buffer before ceasing to read from upstream\n     */\n    function Readable (opts) {\n        opts = opts || {};\n        // This Readable implementation only supports objectMode\n        opts.objectMode = true;\n        this._readableState = new ReadableState(opts, this);\n\n        this.readable = true;\n        Stream.call(this);\n    }\n    inherits(Readable, Stream);\n\n\n    /**\n     * Pulls all the data out of this readable stream, and writes it to the\n     * supplied destination, automatically managing the flow so that the\n     * destination is not overwhelmed by a fast readable stream.\n     * @param dest {Writable} A writable stream that should be written to\n     * @param [pipeOpts] {object} Pipe options\n     * @param [pipeOpts.end=true] {boolean} Whether the writer should be ended\n     *     when the reader ends\n     */\n    Readable.prototype.pipe = function (dest, pipeOpts) {\n        var src = this,\n            state = this._readableState,\n            doEnd,\n            endFn;\n\n        state.pipes.push(dest);\n\n        doEnd = ( ! pipeOpts || pipeOpts.end !== false );\n\n        endFn = doEnd ? onend : cleanup;\n\n        if (state.endEmitted) {\n            util.nextTick(endFn);\n        } else {\n            src.once('end', endFn);\n        }\n\n        dest.on('unpipe', onunpipe);\n        function onunpipe (readable) {\n            // Only if the unpipe was for this readable\n            if (readable === src) {\n                // Cleanup listeners when unpiped\n                cleanup();\n            }\n        }\n\n        // End the writable destination\n        function onend () {\n            dest.end();\n        }\n\n        // when the dest drains, it reduces the awaitDrain counter\n        // on the source.  This would be more elegant with a .once()\n        // handler in flow(), but adding and removing repeatedly is\n        // too slow.\n        var ondrain = this._pipeOnDrain();\n        dest.on('drain', ondrain);\n\n        function cleanup() {\n            // cleanup event handlers once the pipe is broken\n            dest.removeListener('close', onclose);\n            dest.removeListener('finish', onfinish);\n            dest.removeListener('drain', ondrain);\n            dest.removeListener('error', onerror);\n            dest.removeListener('unpipe', onunpipe);\n            src.removeListener('end', onend);\n            src.removeListener('end', cleanup);\n            src.removeListener('data', ondata);\n\n            // if the reader is waiting for a drain event from this\n            // specific writer, then it would cause it to never start\n            // flowing again.\n            // So, if this is awaiting a drain, then we just call it now.\n            // If we don't know, then assume that we are waiting for one.\n            if (state.awaitDrain &&\n               (!dest._writableState || dest._writableState.needDrain)) {\n                ondrain();\n            }\n        }\n\n        src.on('data', ondata);\n        function ondata (chunk) {\n            var ret = dest.write(chunk);\n            if (ret === false) {\n                // We should stop writing, so pause the source readable\n                src._readableState.awaitDrain++;\n                src.pause();\n            }\n        }\n\n        // Unpipe when there is an error in the destination writable\n        function onerror (err) {\n            unpipe();\n            if (EventEmitter.listenerCount(dest, 'error') === 0) {\n                dest.emit('error', err);\n            }\n        }\n        dest.once('error', onerror);\n\n\n        // Both close and finish should trigger unpipe, but only once\n        function onclose () {\n            dest.removeListener('finish', onfinish);\n            unpipe();\n        }\n        dest.once('close', onclose);\n        function onfinish () {\n            dest.removeListener('close', onclose);\n            unpipe();\n        }\n        dest.once('finish', onfinish);\n\n\n        function unpipe () {\n            src.unpipe(dest);\n        }\n\n        // writables should emit 'pipe' when they're being piped to\n        dest.emit('pipe', src);\n\n        if ( ! state.flowing) {\n            // Start the flow so pipe works\n            src.resume();\n        }\n\n        return dest;\n    };\n\n\n    /**\n     * This method will remove the hooks set up for a previous pipe() call.\n     * If the destination is not specified, then all pipes are removed.\n     * If the destination is specified, but no pipe is set up for it, then\n     * this is a no-op.\n     */\n    Readable.prototype.unpipe = function (dest) {\n        var state = this._readableState;\n\n        // If there are no pipes, don't do anything\n        if (state.pipes.length === 0) {\n            return this;\n        }\n\n        // Only one pipe\n        if (state.pipes.length === 1) {\n            if (dest && dest !== state.pipes[0]) {\n                // passed a dest we're not piping to\n                return this;\n            }\n\n            if (!dest) {\n                dest = state.pipes[0];\n            }\n\n            state.pipes = [];\n            state.flowing = false;\n\n            if (dest) {\n                dest.emit('unpipe', this);\n            }\n\n            return this;\n        }\n\n        // Multiple Pipes\n\n        // If dest not passed, unpipe all of them\n        if ( ! dest) {\n            var dests = state.pipes,\n                numDests = dests.length;\n\n            state.pipes = [];\n            state.flowing = false;\n\n            for (var i=0; i < numDests; i++) {\n                dests[i].emit('unpipe', this);\n            }\n\n            return this;\n        }\n\n        // Dest was passed, only unpipe that one\n        var indexOfDest = state.pipes.indexOf(dest);\n        if (indexOfDest === -1) {\n            return this;\n        }\n\n        state.pipes.splice(indexOfDest, 1);\n        dest.emit('unpipe', this);\n\n        return this;\n    };\n\n\n    /**\n     * Get a function that will be excuted by a pipe destination\n     * so that this readable continues piping when the writable drains\n     */\n    Readable.prototype._pipeOnDrain = function () {\n        var src = this;\n        return function () {\n            var dest = this,\n                state = src._readableState;\n            if (state.awaitDrain) {\n                state.awaitDrain--;\n            }\n            if (state.awaitDrain === 0 &&\n                EventEmitter.listenerCount(src, 'data')) {\n                state.flowing = true;\n                src._flow();\n            }\n        };\n    };\n\n\n    /**\n     * Continually .read() this Readable until there is nothing\n     * more to read. Calling .read() will emit 'data'\n     */\n    Readable.prototype._flow = function () {\n        var state = this._readableState,\n            chunk;\n        if (state.flowing) {\n            do {\n                chunk = this.read();\n            } while (chunk !== null && state.flowing);\n        }\n    };\n\n\n    /**\n     * Push a chunk onto the end of the internal buffer\n     * The _read() function will not be called again until at least one\n     *     push(chunk) call is made.\n     * The Readable class works by putting data into a read queue to be pulled\n     *     out later by calling the read() method when the 'readable' event fires.\n     * @param chunk {...object} Chunk of data to push into the read queue.\n     *     if chunk === null, that signals the end of data\n     * @returns {boolean} Whether or not more pushes should be performed\n     */\n    Readable.prototype.push = function (chunk) {\n        var chunks = Array.prototype.slice.call(arguments);\n        return this._addToBuffer.apply(this, [false].concat(chunks));\n    };\n\n\n    /**\n     * Push a chunk onto the front of the internal buffer.\n     * This is useful in certain cases where a stream is being consumed by a\n     * parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n     * @param chunk {...object} Chunk of data to unshift onto the read queue\n     * @returns {boolean} Whether or not more pushes should be performed\n     */\n    Readable.prototype.unshift = function (chunk) {\n        var chunks = Array.prototype.slice.call(arguments);\n        return this._addToBuffer.apply(this, [true].concat(chunks));\n    };\n\n\n    /**\n     * @private\n     * Common implementation shared between .push and .unshift\n     * Both methods mutate to read buffer\n     * @param addToFront {boolean} Whether to add to the front or back of the\n     *     buffer\n     * @param chunk {...object} Chunk of data to add to the read queue\n     * @returns {boolean} Whether this stream should have more data pushed\n     *     to it\n     */\n    Readable.prototype._addToBuffer = function (addToFront, firstChunk) {\n        var chunks = Array.prototype.slice.call(arguments, 1),\n            state = this._readableState;\n        if (firstChunk === null) {\n            // End of file.\n            state.reading = false;\n            // Start wrapping up if we haven't before\n            if ( ! state.ended) {\n                this._endReadable();\n            }\n        } else {\n            if (state.ended && ! addToFront) {\n                this.emit('error', new Error(\"readable.push() called after EOF\"));\n            } else if (state.endEmitted && addToFront) {\n                this.emit('error', new Error(\"readable.unshift() called after end event\"));\n            } else {\n                if (addToFront) {\n                    state.buffer.unshift.apply(state.buffer, chunks);\n                } else {\n                    state.reading = false;\n                    state.buffer.push.apply(state.buffer, chunks);\n                }\n                // If we've pushed data to the buffer,\n                // let listeners know we're readable\n                if (firstChunk && state.needReadable) {\n                    this._emitReadable();\n                }\n                this._maybeReadMore();\n            }\n        }\n        \n        // Return whether\n        return ! state.ended && \n               ( state.needReadable ||\n                 state.buffer.length < state.highWaterMark ||\n                 state.buffer.length === 0);\n    };\n\n\n    /**\n     * @private\n     * _read() more data from upstream until the buffer length is greater than\n     *     the highWaterMark. It triggers this by calling .read(0);\n     * This executes on nextTick, not synchronously\n     */\n    Readable.prototype._maybeReadMore = function () {\n        var self = this,\n            state = self._readableState;\n\n        if (state.readingMore) {\n            return;\n        }\n        state.readingMore = true;\n\n        util.nextTick(_readMore);\n\n        function _readMore () {\n            var len = state.buffer.length;\n            while ( ! state.reading && ! state.ended &&\n                    state.buffer.length < state.highWaterMark ) {\n                // Trigger ._read()\n                self.read(0);\n                if (len === state.buffer.length) {\n                    // self.read(0) didn't add any data\n                    break;\n                } else {\n                    len = state.buffer.length;\n                }\n            }\n            state.readingMore = false;\n        }\n    };\n\n\n    /**\n     * Resume emitting data events.\n     * This method will switch the stream into flowing-mode. If you do not want\n     * to consume the data from a stream, but you do want to get to its end\n     * event, you can call readable.resume() to open the flow of data.\n     */\n    Readable.prototype.resume = function () {\n        var state = this._readableState;\n        if ( ! state.flowing) {\n            state.flowing = true;\n            // Make sure there's data coming from upstream\n            if ( ! state.reading) {\n                this.read(0);\n            }\n            this._scheduleResume();\n        }\n    };\n\n\n    /**\n     * @private\n     * If not already scheduled, schedule _doResume to execute\n     * on nextTick\n     */\n    Readable.prototype._scheduleResume = function () {\n        var self = this,\n            state = this._readableState;\n        if ( ! state.resumeScheduled) {\n            state.resumeScheduled = true;\n            util.nextTick(function () {\n                self._doResume();\n            });\n        }\n    };\n\n\n    Readable.prototype._doResume = function () {\n        var state = this._readableState;\n        state.resumeScheduled = false;\n        this.emit('resume');\n        this._flow();\n        // Make sure we're getting data from upstream\n        if (state.flowing && ! state.reading) {\n            this.read(0);\n        }\n    };\n\n\n    /**\n     * Stop emitting data events. Any data that becomes available will remain\n     * in the internal buffer.\n     */\n    Readable.prototype.pause = function () {\n        if (this._readableState.flowing !== false) {\n            this._readableState.flowing = false;\n            this.emit('pause');\n        }\n    };\n\n\n    /**\n     * Bind an event listener to an event on this stream\n     * Readable adds some extra functionality so that binding a listener\n     *     to 'readable' marks ._readableState.needReadable=true\n     * @param eventName {string} The Event name to listen for\n     * @param cb {function} Callback function to call when eventName fires\n     */\n    Readable.prototype.on = function (eventName, cb) {\n        var ret = Stream.prototype.on.call(this, eventName, cb),\n            state = this._readableState;\n\n        if (eventName === 'data' && (state.flowing !== false)) {\n            this.resume();\n        }\n\n        if (eventName === 'readable' && this.readable) {\n            // Start reading on the first readable listener\n            if ( ! state.readableListening) {\n                state.readableListening = true;\n                state.emittedReadable = false;\n                state.needReadable = true;\n                if ( ! state.reading) {\n                    this.read(0);\n                } else if (state.buffer.length) {\n                    this._emitReadable();\n                }\n            }\n        }\n    };\n\n\n    /**\n     * Read data from the read buffer\n     * @param [size] {number} The number of items to read from the buffer.\n     *     If not provided, all data will be returned.\n     *     If 0, There are some cases where you want to trigger a refresh of the\n     *     underlying readable stream mechanisms, without actually consuming any\n     *     data. In that case, you can call stream.read(0), which will always\n     *     return null.\n     *     If the internal read buffer is below the highWaterMark, and the\n     *     stream is not currently reading, then calling read(0) will trigger a\n     *     low-level _read call.\n     *     There is almost never a need to do this externally.\n     * @returns {object|null} An object from the read buffer, or null\n     */\n    Readable.prototype.read = function (size) {\n        var state = this._readableState,\n            originalSize = size,\n            doRead,\n            ret;\n\n        state.calledRead = true;\n        \n        if (typeof size !== 'number' || size > 0) {\n            // User wants data. We'll need to emit readable\n            state.emittedReadable = false;\n        }\n\n        if (size === 0 && state.needReadable &&\n           (state.buffer.length >= state.highWaterMark || state.ended)) {\n            if (state.buffer.length === 0 && state.ended) {\n                this._endReadable();\n            } else {\n                this._emitReadable();\n            }\n            return null;\n        }\n\n        size = this._getSizeToRead(size);\n\n        // If called with 0 once end has been emitted, return null\n        if (size === 0 && state.ended) {\n            if (state.buffer.length === 0) {\n                this._endReadable();\n            }\n            return null;\n        }\n\n        // Determine whether ._read needs to be called to fill up the buffer\n        doRead = state.needReadable;\n\n        // We need to read if this read will lower the buffer size\n        // below the highWaterMark\n        if (state.buffer.length === 0 ||\n            state.buffer.length - size < state.highWaterMark) {\n            doRead = true;\n        }\n\n        // Never read if already reading or the stream has ended\n        if (state.reading || state.ended) {\n            doRead = false;\n        }\n\n        if (doRead) {\n            state.reading = true;\n            state.sync = true;\n            if (state.buffer.length === 0) {\n                state.needReadable = true;\n            }\n            // Go get more data!\n            this._read(state.highWaterMark);\n            state.sync = false;\n            // state.reading will be falsy if _read executed synchronously\n            // This could change the buffer so we recalc size\n            if ( ! state.reading) {\n                size = this._getSizeToRead(originalSize);\n            }\n        }\n\n        if (size > 0) {\n            ret = this._readFromBuffer(size);\n        } else {\n            ret = null;\n        }\n\n        if (ret === null) {\n            state.needReadable = true;\n            size = 0;\n        }\n\n        // If we have nothing in the buffer, then we want to know\n        // as soon as we *do* get something into the buffer.\n        if (state.buffer.length === 0 && !state.ended) {\n            state.needReadable = true;\n        }\n\n        // If we happened to read() exactly the remaining amount in the\n        // buffer, and the EOF has been seen at this point, then make sure\n        // that we emit 'end' on the very next tick.\n        if (state.ended && !state.endEmitted && state.buffer.length === 0) {\n            this._endReadable();\n        }\n\n        if (ret !== null) {\n            this.emit('data', ret);\n        }\n\n        return ret;\n    };\n\n\n    /**\n     * @private\n     * Fetch data asynchronously from an upstream source.\n     * Implement this function, but do NOT call it directly.\n     * When data is available, put it into the read queue by calling\n     *     readable.push(chunk). If push returns false, then you should stop\n     *     pushing. When _read is called again, you should start pushing more.\n     */\n    Readable.prototype._read = function () {\n        this.emit('error', new Error('._read() not implemented'));\n    };\n\n\n    /**\n     * @private\n     * Get data from the internal read buffer\n     * @returns {object|null} An object from the internal read buffer, or null\n     *     if there is no more on the buffer\n     */\n    Readable.prototype._readFromBuffer = function () {\n        var state = this._readableState,\n            buffer = state.buffer;\n        if (buffer.length === 0) {\n            return null;\n        } else {\n            return buffer.shift();\n        }\n    };\n\n\n    /**\n     * @private\n     * Get the appropriate number of objects to read from the buffer.\n     * @param sizeAskedFor {number} The Number of items asked for by the user\n     * @returns {number} The number of objects that should be returned from\n     *     .read()\n     */\n    Readable.prototype._getSizeToRead = function (sizeAskedFor) {\n        var state = this._readableState;\n        // Don't read anything if there's nothing to read\n        if (state.buffer.length === 0 && state.ended) {\n            return 0;\n        }\n        // Assuming objectMode. Return at most one item\n        return sizeAskedFor === 0 ? 0 : 1;\n    };\n\n\n    /**\n     * @private\n     * Cause the stream to emit 'readable'\n     */\n    Readable.prototype._emitReadable = function () {\n        var self = this,\n            state = this._readableState;\n\n        state.needReadable = false;\n\n        if ( ! state.emittedReadable) {\n            state.emittedReadable = true;\n            if (state.sync) {\n                util.nextTick(emitReadable);\n            } else {\n                emitReadable();\n            }\n        }\n\n        function emitReadable () {\n            self.emit('readable');\n            self._flow();\n        }\n    };\n\n\n    /**\n     * @private\n     * Mark the stream as closed and that it should not be readable again.\n     * Often this happens after this.push(null);\n     */\n    Readable.prototype._endReadable = function () {\n        var state = this._readableState;\n        state.ended = true;\n        if (state.buffer.length) {\n            this._emitReadable();\n        } else {\n            this._emitEnd();\n        }\n    };\n\n\n    /**\n     * @private\n     * Emit the end event if it hasn't been emitted yet\n     */\n    Readable.prototype._emitEnd = function () {\n        var self = this,\n            state = this._readableState;\n        if (state.buffer.length > 0) {\n            throw new Error(\"Tried to emit end event on a non-empty Readable\");\n        }\n        if ( ! state.endEmitted && state.calledRead) {\n            state.ended = true;\n            util.nextTick(function () {\n                // Check that we didn't get one last unshift.\n                if (!state.endEmitted && state.buffer.length === 0) {\n                    state.endEmitted = true;\n                    self.readable = false;\n                    self.emit('end');\n                }\n            });\n        }\n    };\n\n\n    /**\n     * The state objects contain other useful information for debugging the\n     * state of streams in your programs. It is safe to look at them, but beyond\n     * setting option flags in the constructor, it is not safe to modify them.\n     * Copied from http://bit.ly/16eA5K7\n     */\n    function ReadableState(opts, stream) {\n        opts = opts || {};\n\n        // the point at which it stops calling _read() to fill the buffer\n        // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n        var hwm = opts.highWaterMark;\n        this.highWaterMark = (hwm || hwm === 0) ? hwm : 0;\n\n        // cast to ints.\n        this.highWaterMark = ~~this.highWaterMark;\n\n        this.buffer = [];\n        this.pipes = [];\n        this.pipesCount = 0;\n        this.flowing = null;\n        this.ended = false;\n        this.endEmitted = false;\n        this.reading = false;\n\n        // In streams that never have any data, and do push(null) right away,\n        // the consumer can miss the 'end' event if they do some I/O before\n        // consuming the stream.  So, we don't emit('end') until some reading\n        // happens.\n        this.calledRead = false;\n\n        // a flag to be able to tell if the onwrite cb is called immediately,\n        // or on a later tick.  We set this to true at first, becuase any\n        // actions that shouldn't happen until \"later\" should generally also\n        // not happen before the first write call.\n        this.sync = true;\n\n        // whenever we return null, then we set a flag to say\n        // that we're awaiting a 'readable' event emission.\n        this.needReadable = false;\n        this.emittedReadable = false;\n        this.readableListening = false;\n\n\n        // object stream flag. Used to make read(n) ignore n and to\n        // make all the buffer merging and length checks go away\n        this.objectMode = !!opts.objectMode;\n\n        // Crypto is kind of old and crusty.  Historically, its default string\n        // encoding is 'binary' so we have to make this configurable.\n        // Everything else in the universe uses 'utf8', though.\n        this.defaultEncoding = opts.defaultEncoding || 'utf8';\n\n        // when piping, we only care about 'readable' events that happen\n        // after read()ing all the bytes and not getting any pushback.\n        this.ranOut = false;\n\n        // the number of writers that are awaiting a drain event in .pipe()s\n        this.awaitDrain = 0;\n\n        // if true, a maybeReadMore has been scheduled\n        this.readingMore = false;\n\n        this.decoder = null;\n        this.encoding = null;\n    }\n\n    return Readable;\n});","\ndefine('streamhub-sdk/views/streams/more',[\n    'inherits',\n    'stream/duplex',\n    'streamhub-sdk/debug'],\nfunction (inherits, Duplex, debug) {\n    'use strict';\n\n\n    var log = debug('streamhub-sdk/views/streams/more');\n\n\n    /**\n     * A Duplex stream (Readable & Writable) that only passes through\n     * the number of items it is instructed to.\n     * More also maintains a LIFO stack such that previously emitted Content can\n     * be stashed back into More so that it is re-read out later when needed.\n     * @constructor\n     * @param opts {object}\n     * @param [opts.goal=0] {number} The initial amount to let through\n     */\n    var More = function (opts) {\n        opts = opts || {};\n        this._goal = opts.goal || 0;\n        this._stack = [];\n        this._requestMore = null;\n        Duplex.call(this, opts);\n    };\n\n    inherits(More, Duplex);\n\n\n    /**\n     * Let more items pass through.\n     * This sets the goal of the stream to the provided number.\n     * @param newGoal {number} The number of items this stream should\n     *     let through before holding again.\n     */\n    More.prototype.setGoal = function (newGoal) {\n        this._goal = newGoal;\n\n        if (this._goal > 0) {\n            this._fetchAndPush();\n        }\n    };\n\n\n    /**\n     * Get the number of objects the stream is waiting for to reach its goal\n     */\n    More.prototype.getGoal = function () {\n        return this._goal;\n    };\n\n\n    /**\n     * stack Content that should be re-emitted later in last-in-first-out\n     * fashion. stacked stuff is read out before written stuff\n     * @param obj {Object} An object to stack, that you may want back later\n     */\n    More.prototype.stack = function (obj) {\n        this._stack.push(obj);\n        this.emit('hold');\n    };\n\n\n    /**\n     * Required by Duplex subclasses.\n     * This ensures that once the goal is reached, no more content\n     * passes through.\n     * @private\n     */\n    More.prototype._write = function (chunk, doneWriting) {\n        var self = this;\n        log('_write', chunk);\n\n        // Put on BOTTOM of the stack.\n        // written stuff comes after all stacked stuff\n        this._stack.unshift(chunk);\n\n        // Save the doneWriting cb for later. We'll call it once this\n        // new bottom of the stack is popped, and we need more data\n        // from the Writable side of the duplex\n        this._requestMore = function () {\n            self._requestMore = null;\n            doneWriting();\n        };\n\n        if (this._goal >= 1) {\n            this._fetchAndPush();\n        } else {\n            // Emit 'hold' to signify that there is data waiting, if only\n            // the goal were increased. This is useful to render a 'show more'\n            // button only if there is data in the buffer, and avoids a\n            // show more button that, when clicked, does nothing but disappear\n            this.emit('hold');\n        }\n    };\n\n\n    /**\n     * Required by Readable subclasses. Get data from upstream. In this case,\n     * either the internal ._stack or the Writable side of the Duplex\n     * @private\n     */\n    More.prototype._read = function () {\n        if (this._goal <= 0 && this._stack.length) {\n            // You don't get data yet.\n            this.emit('hold');\n            return;\n        }\n        this._fetchAndPush();\n    };\n\n\n    /**\n     * Fetch data from the internal stack (sync) and push it.\n     * Or, if there is nothing in the stack, request more from the Writable\n     * side of the duplex, which will eventually call this again.\n     * @private\n     */\n    More.prototype._fetchAndPush = function () {\n        // If there's data in the stack, pop, push it along, & decrement goal\n        if (this._stack.length) {\n            // There's stuff in the stack. Push it.\n            this._goal--;\n            this.push(this._stack.pop());\n        }\n\n        // If there was no data, or we just pushed the last bit,\n        // request more if possible\n        if (this._stack.length === 0 &&\n            typeof this._requestMore === 'function') {\n            this._requestMore();\n        }\n    };\n\n\n    return More;\n});\n","\ndefine('stream/duplex',['stream/readable', 'stream/writable', 'stream/util', 'inherits'],\nfunction (Readable, Writable, util, inherits) {\n\n\tfunction Duplex (opts) {\n\t\tReadable.call(this, opts);\n\t\tWritable.call(this, opts);\n\n\t\tif (opts && opts.readable === false) {\n\t\t\tthis.readable = false;\n\t\t}\n\n\t\tif (opts && opts.writable === false) {\n\t\t\tthis.writable = false;\n\t\t}\n\n\t\tthis.allowHalfOpen = true;\n\t\tif (opts && opts.allowHalfOpen === false) {\n\t\t\tthis.allowHalfOpen = false;\n\t\t}\n\n\t\tthis.once('end', onend);\n\t}\n\n\tinherits(Duplex, Readable);\n\tinherits.parasitically(Duplex, Writable);\n\n\t// Enforce noHalfOpen\n\tfunction onend () {\n\t\tvar self = this;\n\n\t\tif (this.allowHalfOpen || this._writableState.ended) {\n\t\t\treturn;\n\t\t}\n\n\t\t// No more data can be written.\n\t\t// But more writes can happen in this tick\n\t\tutil.nextTick(function () {\n\t\t\tself.end();\n\t\t});\n\t}\n\n\treturn Duplex;\n});","\ndefine('streamhub-input/javascript/content-editor/modal-view',['require','exports','module','streamhub-input/javascript/content-editor/view','hgn!streamhub-input/templates/content-editor','hgn!streamhub-editor/templates/editor','inherits','hgn!streamhub-input/templates/content-editor-modal','streamhub-input/javascript/modal/launchable-modal','jquery'],function (require, exports, module) {var ContentEditor = require('streamhub-input/javascript/content-editor/view');\nvar contentEditorTemplate = require('hgn!streamhub-input/templates/content-editor');\nvar editorTemplate = require('hgn!streamhub-editor/templates/editor');\nvar inherits = require('inherits');\nvar modalTemplate = require('hgn!streamhub-input/templates/content-editor-modal');\nvar LaunchableModal = require('streamhub-input/javascript/modal/launchable-modal');\nvar $ = require('jquery');\n\n'use strict';\n\n/**\n * @constructor\n * @extends {ContentEditor}\n * @extends {LaunchableModal}\n */\nfunction ModalContentEditor(opts) {\n    opts = opts || {};\n    ContentEditor.call(this, opts);\n    LaunchableModal.call(this);\n}\ninherits(ModalContentEditor, ContentEditor);\ninherits.parasitically(ContentEditor, LaunchableModal);\n\n/** @override */\nModalContentEditor.prototype.classes = {\n    EDITOR_SECTION: 'lf-content-editor'\n};\n$.extend(ModalContentEditor.prototype.classes, ContentEditor.prototype.classes);\n\n/** @override */\nModalContentEditor.prototype.template = function (context) {\n    return modalTemplate(context, {\n        contentEditor: contentEditorTemplate.template,\n        editor: editorTemplate.template\n    });\n};\n\n/** @override */\nModalContentEditor.prototype._handlePostSuccess = function () {\n    ContentEditor.prototype._handlePostSuccess.call(this);\n    this.returnModal();\n};\n\n/** @override */\nModalContentEditor.prototype.render = function () {\n    ContentEditor.prototype.render.call(this);\n    var classes = ModalContentEditor.prototype.classes.EDITOR_SECTION;\n    this.$errorContainer = this.getElementsByClass(classes);\n};\n\nmodule.exports = ModalContentEditor;\n\n});\n","\n/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n\nvar Hogan = {};\n\n(function (Hogan, useArrayBuffer) {\n  Hogan.Template = function (renderFunc, text, compiler, options) {\n    this.r = renderFunc || this.r;\n    this.c = compiler;\n    this.options = options;\n    this.text = text || '';\n    this.buf = (useArrayBuffer) ? [] : '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // tries to find a partial in the curent scope and render it\n    rp: function(name, context, partials, indent) {\n      var partial = partials[name];\n\n      if (!partial) {\n        return '';\n      }\n\n      if (this.c && typeof partial == 'string') {\n        partial = this.c.compile(partial, this.options);\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ls(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = (val === '') || !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        return ctx[ctx.length - 1];\n      }\n\n      for (var i = 1; i < names.length; i++) {\n        if (val && typeof val == 'object' && names[i] in val) {\n          cx = val;\n          val = val[names[i]];\n        } else {\n          val = '';\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.lv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        if (v && typeof v == 'object' && key in v) {\n          val = v[key];\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.lv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ho: function(val, cx, partials, text, tags) {\n      var compiler = this.c;\n      var options = this.options;\n      options.delimiters = tags;\n      var text = val.call(cx, text);\n      text = (text == null) ? String(text) : text.toString();\n      this.b(compiler.compile(text, options).render(cx, partials));\n      return false;\n    },\n\n    // template result buffering\n    b: (useArrayBuffer) ? function(s) { this.buf.push(s); } :\n                          function(s) { this.buf += s; },\n    fl: (useArrayBuffer) ? function() { var r = this.buf.join(''); this.buf = []; return r; } :\n                           function() { var r = this.buf; this.buf = ''; return r; },\n\n    // lambda replace section\n    ls: function(val, ctx, partials, inverted, start, end, tags) {\n      var cx = ctx[ctx.length - 1],\n          t = null;\n\n      if (!inverted && this.c && val.length > 0) {\n        return this.ho(val, cx, partials, this.text.substring(start, end), tags);\n      }\n\n      t = val.call(cx);\n\n      if (typeof t == 'function') {\n        if (inverted) {\n          return true;\n        } else if (this.c) {\n          return this.ho(t, cx, partials, this.text.substring(start, end), tags);\n        }\n      }\n\n      return t;\n    },\n\n    // lambda replace variable\n    lv: function(val, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = val.call(cx);\n\n      if (typeof result == 'function') {\n        result = coerceToString(result.call(cx));\n        if (this.c && ~result.indexOf(\"{\\u007B\")) {\n          return this.c.compile(result, this.options).render(cx, partials);\n        }\n      }\n\n      return coerceToString(result);\n    }\n\n  };\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos =/\\'/g,\n      rQuot = /\\\"/g,\n      hChars =/[&<>\\\"\\']/;\n\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp,'&amp;')\n        .replace(rLt,'&lt;')\n        .replace(rGt,'&gt;')\n        .replace(rApos,'&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n\n\n\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      tagTypes = {\n        '#': 1, '^': 2, '/': 3,  '!': 4, '>': 5,\n        '<': 6, '=': 7, '_v': 8, '{': 9, '&': 10\n      };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push(new String(buf));\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (tokens[j].tag && tagTypes[tokens[j].tag] < tagTypes['_v']) ||\n          (!tokens[j].tag && tokens[j].match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (!tokens[j].tag) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = tagTypes[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - ctag.length : i + otag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        token = null;\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n      if (token.tag == '#' || token.tag == '^' || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n        instructions.push(token);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else {\n        instructions.push(token);\n      }\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  Hogan.generate = function (tree, text, options) {\n    var code = 'var _=this;_.b(i=i||\"\");' + walk(tree) + 'return _.fl();';\n    if (options.asString) {\n      return 'function(c,p,i){' + code + ';}';\n    }\n\n    return new Hogan.Template(new Function('c', 'p', 'i', code), text, Hogan, options);\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function walk(tree) {\n    var code = '';\n    for (var i = 0, l = tree.length; i < l; i++) {\n      var tag = tree[i].tag;\n      if (tag == '#') {\n        code += section(tree[i].nodes, tree[i].n, chooseMethod(tree[i].n),\n                        tree[i].i, tree[i].end, tree[i].otag + \" \" + tree[i].ctag);\n      } else if (tag == '^') {\n        code += invertedSection(tree[i].nodes, tree[i].n,\n                                chooseMethod(tree[i].n));\n      } else if (tag == '<' || tag == '>') {\n        code += partial(tree[i]);\n      } else if (tag == '{' || tag == '&') {\n        code += tripleStache(tree[i].n, chooseMethod(tree[i].n));\n      } else if (tag == '\\n') {\n        code += text('\"\\\\n\"' + (tree.length-1 == i ? '' : ' + i'));\n      } else if (tag == '_v') {\n        code += variable(tree[i].n, chooseMethod(tree[i].n));\n      } else if (tag === undefined) {\n        code += text('\"' + esc(tree[i]) + '\"');\n      }\n    }\n    return code;\n  }\n\n  function section(nodes, id, method, start, end, tags) {\n    return 'if(_.s(_.' + method + '(\"' + esc(id) + '\",c,p,1),' +\n           'c,p,0,' + start + ',' + end + ',\"' + tags + '\")){' +\n           '_.rs(c,p,' +\n           'function(c,p,_){' +\n           walk(nodes) +\n           '});c.pop();}';\n  }\n\n  function invertedSection(nodes, id, method) {\n    return 'if(!_.s(_.' + method + '(\"' + esc(id) + '\",c,p,1),c,p,1,0,0,\"\")){' +\n           walk(nodes) +\n           '};';\n  }\n\n  function partial(tok) {\n    return '_.b(_.rp(\"' +  esc(tok.n) + '\",c,p,\"' + (tok.indent || '') + '\"));';\n  }\n\n  function tripleStache(id, method) {\n    return '_.b(_.t(_.' + method + '(\"' + esc(id) + '\",c,p,0)));';\n  }\n\n  function variable(id, method) {\n    return '_.b(_.v(_.' + method + '(\"' + esc(id) + '\",c,p,0)));';\n  }\n\n  function text(id) {\n    return '_.b(' + id + ');';\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  },\n\n  Hogan.cache = {};\n\n  Hogan.compile = function(text, options) {\n    // options\n    //\n    // asString: false (default)\n    //\n    // sectionTags: [{o: '_foo', c: 'foo'}]\n    // An array of object with o and c fields that indicate names for custom\n    // section tags. The example above allows parsing of {{_foo}}{{/foo}}.\n    //\n    // delimiters: A string that overrides the default delimiters.\n    // Example: \"<% %>\"\n    //\n    options = options || {};\n\n    var key = text + '||' + !!options.asString;\n\n    var t = this.cache[key];\n\n    if (t) {\n      return t;\n    }\n\n    t = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = t;\n  };\n})(typeof exports !== 'undefined' ? exports : Hogan);\n\n\nif (typeof define === 'function' && define.amd) {\n  define('hogan',Hogan);\n}\n;","\ndefine('streamhub-sdk/views/show-more-button',['inherits', 'streamhub-sdk/view', 'streamhub-sdk/jquery'],\nfunction (inherits, View) {\n    'use strict';\n\n    /**\n     * A View that provides a button that can control a More stream\n     * @param opts {object}\n     * @param [opts.more] {More} A More stream that this button should control\n     */\n    var ShowMoreButton = function (opts) {\n        View.call(this, opts);\n        opts = opts || {};\n        if (opts.more) {\n            this.setMoreStream(opts.more);\n        }\n    };\n\n    inherits(ShowMoreButton, View);\n\n\n    ShowMoreButton.prototype.events = View.prototype.events.extended({\n        // Hide the button on click. When more content is held and can be shown,\n        // It will reappear\n        'click': function () {\n            this._holding = false;\n            this.$el.hide();\n            this.$el.trigger('showMore.hub');\n        }\n    });\n\n\n    ShowMoreButton.prototype.render = function () {\n        View.prototype.render.call(this);\n        this.$el.css('display', 'none');\n    };\n\n\n    /**\n     * The template to render in the Button\n     * @return {string}\n     */\n    ShowMoreButton.prototype.template = function () {\n        return \"Load More\";\n    };\n\n\n    /**\n     * Set the More Stream this button controls\n     * @param more {More} A More stream that this button should control\n     */\n    ShowMoreButton.prototype.setMoreStream = function (more) {\n        var self = this;\n\n        this._more = more;\n\n        // When more content is held to be shown, show the button\n        this._more.on('hold', function () {\n            self._holding = true;\n            self.$el.css('display', '');\n        });\n    };\n\n\n    ShowMoreButton.prototype.isHolding = function () {\n        return this._holding;\n    };\n\n\n    /**\n     * Get the More Stream this button is controlling\n     * @return {More}\n     */\n    ShowMoreButton.prototype.getMoreStream = function () {\n        return this._more;\n    };\n\n\n    return ShowMoreButton;\n});\n","\ndefine('streamhub-sdk/views/list-view',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'inherits',\n    'streamhub-sdk/debug',\n    'stream/writable',\n    'streamhub-sdk/views/streams/more',\n    'streamhub-sdk/views/show-more-button',\n    'hgn!streamhub-sdk/views/templates/list-view'],\nfunction($, View, inherits, debug, Writable, More, ShowMoreButton, ListViewTemplate) {\n    'use strict';\n\n    var log = debug('streamhub-sdk/views/list-view');\n\n    /**\n     * A simple View that displays Content in a list (`<ul>` by default).\n     *\n     * @param [opts] {Object} A set of options to config the view with\n     * @param [opts.el] {HTMLElement} The element in which to render the streamed content\n     * @param [opts.comparator] {function(view, view): number}\n     * @param [opts.autoRender] Whether to call #render in the constructor\n     * @exports streamhub-sdk/views/list-view\n     * @constructor\n     */\n    var ListView = function(opts) {\n        opts = opts || {};\n        opts.autoRender = opts.autoRender === undefined ? true : opts.autoRender;\n\n        this.views = [];\n\n        View.call(this, opts);\n        Writable.call(this, opts);\n\n        this.comparator = opts.comparator || this.comparator;\n        this._moreAmount = opts.showMore || 50;\n        this.more = opts.more || this._createMoreStream(opts);\n        this.showMoreButton = opts.showMoreButton || this._createShowMoreButton(opts);\n        this.showMoreButton.setMoreStream(this.more);\n\n        //TODO(ryanc): This is out of convention to call #render\n        // in the constructor. However it is convenient/intuitive\n        // in the public API to instantiate a ListView and have it be visible.\n        // Removing this to require an explicit invocation would alter\n        // the public API siginificantly, so for now render stays in the\n        // constructor. To avoid this behavior, opts.autoRender == false.\n        if (opts.autoRender) {\n            this.render();\n        }\n\n        this._pipeMore();\n    };\n\n    inherits(ListView, View);\n    inherits.parasitically(ListView, Writable);\n\n\n    ListView.prototype.events = View.prototype.events.extended({\n        // .showMoreButton will trigger showMore.hub when it is clicked\n        'showMore.hub': function () {\n            this.showMore();\n        },\n        // When a subview .remove()s itself, it should fire this event\n        'removeView.hub': function (event, view) {\n            this.remove(view);\n        }\n    });\n\n    ListView.prototype.template = ListViewTemplate;\n\n\n    /**\n     * Selector of .el child that contentViews should be inserted into\n     */\n    ListView.prototype.listElSelector = '.hub-list';\n\n\n    /**\n     * Selector of .el child in which to render a show more button\n     */\n    ListView.prototype.showMoreElSelector = '.hub-list-more';\n\n\n    /**\n     * Keys are views that were forcibly indexed into this view.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    ListView.prototype._indexedViews = {};\n\n\n    ListView.prototype.setElement = function (element) {\n        View.prototype.setElement.apply(this, arguments);\n        this.$listEl = this.$el;\n    };\n\n\n    /**\n     * Render the ListView in its .el, and call .setElement on any subviews\n     */\n    ListView.prototype.render = function () {\n        View.prototype.render.call(this);\n        this.$listEl = this.$el.find(this.listElSelector);\n\n        this.showMoreButton.setElement(this.$el.find(this.showMoreElSelector));\n        this.showMoreButton.render();\n        if (this.showMoreButton.isHolding()) {\n            this.showMoreButton.$el.show();\n        }\n    };\n\n\n    /**\n     * Called automatically by the Writable base class when .write() is called\n     * @private\n     * @param view {View} View to display in the ListView\n     * @param requestMore {function} A function to call when done writing, so\n     *     that _write will be called again with more data\n     */\n    ListView.prototype._write = function (view, requestMore) {\n        this.add(view);\n        requestMore();\n    };\n\n\n    /**\n     * Comparator function to determine ordering of Views.\n     * Your subclass should implement this if you want ordering\n     * @param a {view}\n     * @param b {view}\n     * @returns {Number} < 0 if a before b, 0 if same ordering, > 0 if b before a\n     */\n    ListView.prototype.comparator = null;\n\n\n    /**\n     * Returns true if the view is listed on the indexedViews list.\n     * @param view {!View}\n     * @returns {!boolean}\n     * @protected\n     */\n    ListView.prototype._isIndexedView = function(view) {\n        return (view && view.uid && this._indexedViews[view.uid]) ? true : false;\n    };\n\n    /**\n     * Adds a view to _indexedViews\n     * @param view {!View}\n     * @private\n     */\n    ListView.prototype._recordIndexedView = function(view) {\n        this._indexedViews[view.uid] = true;\n    };\n\n    /**\n     * Returns the index where newView should be inserted.\n     * Requires this.comparator to be defined.\n     * @private\n     * @param newView {view} View that will be added.\n     * @param [array] {[]} Array to search through. Defaults to this.views.\n     * @return {!number}\n     */\n    ListView.prototype._binarySearch = function(newView, array) {\n        array = array || this.views;\n        if (!this.comparator) {\n            throw new Error(\"Tried to _binarySearch without this.comparator.\");\n        }\n\n        var low = 0, high = array.length, mid, comp, origMid;\n        while (low < high) {\n            origMid = mid = (low + high) >>> 1;\n            comp = array[mid];\n\n            while (this._isIndexedView(comp) && mid > low) {\n            //Try to get a comp that isn't indexed\n            //Move lower looking for a comparable view\n                comp = array[--mid];\n            }\n            if (this._isIndexedView(comp)) {\n            //If nothing was found...\n                if (low === 0) {\n                //...and we're at the beginning, then just add it to the beginning\n                    high = low;\n                } else {\n                //...and we aren't at the beginning, continue to move towards the end\n                    low = origMid + 1;\n                }\n            } else {\n            //Set new low or high and start again\n                if (this.comparator(comp, newView) < 0) {\n                    low = mid + 1;\n                } else {\n                    high = mid;\n                }\n            }\n        }\n\n        return Math.max(0, low);//Incase of miscalculations, use max() to assure minimum of 0\n    };\n\n\n    /**\n     * Add a view to the ListView\n     *     insert the newView into this.el according to this.comparator\n     * @param newView {View} A View to add to the ListView\n     * @param [forcedIndex] {number} location for the new view\n     * @returns the newly added View\n     */\n    ListView.prototype.add = function(newView, forcedIndex) {\n        log(\"add\", newView, forcedIndex);\n        var index;\n\n        if ( ! newView) {\n            log(\"Called add with a falsy parameter, returning\");\n            return;\n        }\n\n        if (typeof(forcedIndex) !== 'number' || Math.abs(forcedIndex) > this.views.length) {\n            if (this.comparator) {\n                index = this._binarySearch(newView);\n            } else {\n                index = this.views.length;\n            }\n        } else {\n            this._recordIndexedView(newView);\n        }\n\n        this.views.splice(forcedIndex || index, 0, newView);\n\n        newView.render();\n        // Add to DOM\n        this._insert(newView, forcedIndex);\n        this.emit('added', newView);\n        return newView;\n    };\n\n\n    /**\n     * Remove a View from this ListView\n     * @param content {Content|ContentView} The ContentView or Content to be removed\n     * @returns {boolean} true if Content was removed, else false\n     */\n    ListView.prototype.remove = function (view) {\n        var viewIndex = this.views.indexOf(view);\n\n        // Return false if the provided view is not managed by this ListView\n        if (viewIndex === -1) {\n            return false;\n        }\n\n        // Remove from DOM\n        this._extract(view);\n\n        // Remove from this.views[]\n        this.views.splice(viewIndex, 1);\n\n        return true;\n    };\n\n\n    /**\n     * Remove a view from the DOM. Called by .remove();\n     * @private\n     * @param view {View} The View to remove from the DOM\n     */\n    ListView.prototype._extract = function (view) {\n        view.$el.remove();\n    };\n\n\n    /**\n     * Insert a contentView into the ListView's .el\n     * @protected\n     * @param view {View} The view to add to this.el\n     * @param [forcedIndex] {number} Index of the view in this.views\n     */\n    ListView.prototype._insert = function (view, forcedIndex) {\n        var newContentViewIndex,\n            $previousEl;\n\n        newContentViewIndex = forcedIndex || this.views.indexOf(view);\n\n        if (newContentViewIndex === 0) {\n            // Beginning!\n            view.$el.prependTo(this.$listEl);\n        } else {\n            // Find it's previous view and insert new view after\n            $previousEl = this.views[newContentViewIndex - 1].$el;\n            view.$el.insertAfter($previousEl);\n        }\n    };\n\n\n    /**\n     * Show More content.\n     * ContentListView keeps track of an internal ._newContentGoal\n     *     which is how many more items he wishes he had.\n     *     This increases that goal and marks the Writable\n     *     side of ContentListView as ready for more writes.\n     * @param numToShow {number} The number of items to try to add\n     */\n    ListView.prototype.showMore = function (numToShow) {\n        if (typeof numToShow === 'undefined') {\n            numToShow = this._moreAmount;\n        }\n        this.more.setGoal(numToShow);\n    };\n\n\n    /**\n     * Create a Stream that extra content can be written into.\n     * This will be used if an opts.moreBuffer is not provided on construction.\n     * By default, this creates a streamhub-sdk/views/streams/more\n     * @private\n     */\n    ListView.prototype._createMoreStream = function (opts) {\n        opts = opts || {};\n        return new More({\n            highWaterMark: 0,\n            goal: opts.initial || 50\n        });\n    };\n\n\n    /**\n     * Create a ShowMoreButton view to be used if one is not passed as\n     *     opts.showMoreButton on construction\n     * @private\n     * @return {ShowMoreButton}\n     */\n    ListView.prototype._createShowMoreButton = function (opts) {\n        return new ShowMoreButton();\n    };\n\n\n    /**\n     * Register listeners to the .more stream so that the items\n     * it reads out go somewhere useful.\n     * By default, this .add()s the items\n     * @private\n     */\n    ListView.prototype._pipeMore = function () {\n        var self = this;\n        this.more.on('readable', function () {\n            var content;\n            while (content = self.more.read()) {\n                self.add(content);\n            }\n        });\n    };\n\n    /**\n     * Detaches list item view elements.\n     * Removes references to list item views.\n     */\n    ListView.prototype.clear = function () {\n        for (var i=0; i < this.views.length; i++) {\n            this.views[i].detach();\n        }\n        this.views = [];\n    };\n\n    ListView.prototype.destroy = function () {\n        View.prototype.destroy.call(this);\n        this.views = null;\n    };\n\n    return ListView;\n});\n","\ndefine('streamhub-input/javascript/content-editor/attachment-view',['require','exports','module','inherits','streamhub-sdk/view','hgn!streamhub-input/templates/attachment'],function (require, exports, module) {var inherits = require('inherits');\nvar View = require('streamhub-sdk/view');\n\n'use strict';\n\nfunction AttachmentView () {\n    View.apply(this, arguments);\n}\ninherits(AttachmentView, View);\n\n/* Ensure thehat the image does not render with an unreasonable aspect ratio */\nAttachmentView.prototype._loadImage = function () {\n    var image = new Image();\n    image.className = this.classes.THUMBNAIL;\n    image.onload = this._handleImageLoaded.bind(this, image);\n    image.src = this.opts.oembed.url;\n    return image;\n};\n\n/*\n * Chose between displaying as a imge with fixed height and scaled width,\n * or a div with fixed height and width.\n */\nAttachmentView.prototype._handleImageLoaded = function (image) {\n    View.prototype.render.call(this);\n    if (image.height / image.width < 0.5) {\n        image = document.createElement('div');\n        image.className = this.classes.THUMBNAIL_CONTAINED;\n        image.style.backgroundImage = 'url(' + this.opts.oembed.url +')';\n    }\n    this.$el.append(image);\n    this.$el.show();\n    return image;\n};\n\n/** @enum {string} */\nAttachmentView.prototype.classes = {\n    THUMBNAIL: 'lf-attachment-thumbnail',\n    THUMBNAIL_CONTAINED: 'lf-attachment-thumbnail-contained'\n};\n\n/** @override */\nAttachmentView.prototype.elClass = 'lf-attachment';\n\n/** @override */\nAttachmentView.prototype.render = function () {\n    this.$el.hide();\n    this._loadImage();\n};\n\n/** @override */\nAttachmentView.prototype.template = require('hgn!streamhub-input/templates/attachment');\n\nmodule.exports = AttachmentView;\n\n});\n","\ndefine('streamhub-input/javascript/content-editor/attachment-list-view',['require','exports','module','inherits','streamhub-sdk/views/list-view','streamhub-input/javascript/content-editor/attachment-view'],function (require, exports, module) {var inherits = require('inherits');\nvar ListView = require('streamhub-sdk/views/list-view');\nvar AttachmentView = require('streamhub-input/javascript/content-editor/attachment-view');\n\n'use strict';\n\n// docs\nfunction AttachmentListView() {\n    ListView.apply(this, arguments);\n\n    /**\n     * View ids -> views\n     * @type {object}\n     */\n    this._viewMap = {};\n}\ninherits(AttachmentListView, ListView);\n\n/** @enum {string} */\nAttachmentListView.prototype.classes = {\n    DATA_ID: 'data-lf-id',\n    DISCARD_X: 'lf-attachment-discard'\n};\n\n/** @override */\nAttachmentListView.prototype.elClass = 'lf-attachment-list-view';\n\n/** @override */\nAttachmentListView.prototype.events = (function () {\n    var events = {};\n    events['click .' + AttachmentListView.prototype.classes.DISCARD_X] = '_handleRemove';\n    return events;\n})();\n\nAttachmentListView.prototype._handleRemove = function (ev) {\n    var id = ev.target.parentNode.getAttribute(this.classes.DATA_ID);\n    this.remove(this._viewMap[id]);\n    this._viewMap[id] = null;\n};\n\n/** @override */\nAttachmentListView.prototype.add = function (content) {\n    var newView = new AttachmentView({\n        oembed: content.attachments[0]\n    });\n    newView.$el.attr(this.classes.DATA_ID, newView.uid);\n    this._viewMap[newView.uid] = newView;\n\n    return ListView.prototype.add.call(this, newView);\n};\n\n/**\n * Clear all currently displayed attachments\n */\nAttachmentListView.prototype.clearAttachments = function () {\n    while (this.views.length) {\n        this.remove(this.views[0]);\n    }\n    this._viewMap = {};\n};\n\n/** @override */\nAttachmentListView.prototype.render = function () {\n    ListView.prototype.render.call(this);\n    for (var i = 0; i < this.views.length; i++) {\n        ListView.prototype._insert.call(this, this.views[i]);\n    }\n};\n\n/**\n * Get all the attachments in view\n * @return {Array.<Oembed>}\n */\nAttachmentListView.prototype.getAttachments = function () {\n    var attachments = [];\n    for (var i = 0; i < this.views.length; i++) {\n        attachments.push(this.views[i].opts.oembed);\n    }\n    return attachments;\n};\n\nmodule.exports = AttachmentListView;\n\n});\n","\ndefine('streamhub-sdk/auth/auth-optional',['require','exports','module'],function (require, exports, module) {/**\n * auth-optional\n * A stub of `auth` that will work as if\n * no delegate is registered and no user\n * is logged in.\n */\nmodule.exports = {\n    get: function () {},\n    login: function () {},\n    logout: function () {},\n    hasDelegate: function () {},\n    on: function () {},\n    isAuthenticated: function () {}\n};\n\n});\n","\ndefine('auth/main',['require','exports','module','streamhub-sdk/auth/auth-optional'],function (require, exports, module) {var authOptional = require('streamhub-sdk/auth/auth-optional');\nvar auth;\n\nauth = authOptional;\n\nif (typeof Livefyre !== 'undefined' &&\n    typeof Livefyre['auth'] === 'object') {\n    auth = Livefyre['auth'];\n}\n\nmodule.exports = auth;\n\n});\n\ndefine('auth', ['auth/main'], function (main) { return main; });\n","\ndefine('streamhub-sdk/auth/main',['auth', 'inherits', 'event-emitter', 'streamhub-sdk/debug'],\nfunction (auth, inherits, EventEmitter, debug) {\n    'use strict';\n\n\n    var log = debug('streamhub-sdk/auth');\n\n\n    /**\n     * An object that knows about the authenticated user\n     */\n    var Auth = new EventEmitter();\n\n\n    /**\n     * Set the Auth token\n     * This is deprecated now. You should use the `auth` module's\n     * `.authenticate({ livefyre: token })` method\n     * But will be supported in streamhub-sdk v2 for backward compatability\n     * @param token {string} A Livefyre authentication token,\n     *     as described at http://bit.ly/17SYaoT\n     */\n    Auth.setToken = function (token) {\n        log('.setToken', token);\n        this._token = token;\n        this.emit('token', token);\n    };\n\n\n    /**\n     * Get the Auth token\n     * @return A token, if one has been set, else undefined\n     */\n    Auth.getToken = function () {\n        var livefyreUser = auth.get('livefyre');\n        if ( ! livefyreUser) {\n            return this._token;\n        }\n        return livefyreUser.get('token');\n    };\n\n\n    /**\n     * An Error that represents that an operation could not be performed\n     * because the user has not been authorized. Semantics like HTTP 401\n     */\n    var UnauthorizedError = function (message) {\n        Error.apply(this, arguments);\n        this.message = message;\n    };\n    inherits(UnauthorizedError, Error);\n    UnauthorizedError.prototype.name = \"UnauthorizedError\";\n\n\n    Auth.UnauthorizedError = UnauthorizedError;\n    return Auth;\n});\n\ndefine('streamhub-sdk/auth', ['streamhub-sdk/auth/main'], function (main) { return main; });\n","\ndefine('streamhub-sdk/ui/command',['require','exports','module','event-emitter','inherits'],function (require, exports, module) {'use strict';\n\nvar EventEmitter = require('event-emitter');\nvar inherits = require('inherits');\n\n/**\n * Does work\n * @constructor\n * @param fn {function} The work to do\n * @param [opts] {Object}\n * @param [opts.enable] {boolean} Set false to disable this command be default.\n */\nfunction Command (fn, opts) {\n    opts = opts || {};\n    if (!fn) {\n        throw 'A function needs to be specified to construct a Command';\n    }\n\n    // Allow for passing another command as fn\n    if (fn instanceof Command) {\n        var fnCommand = fn;\n        fn = function () {\n            fnCommand.execute.apply(fnCommand, arguments);\n        }.bind(this);\n    }\n\n    this._execute = fn;\n    this._canExecute = (opts.enable !== false) ? true : false;\n    EventEmitter.call(this);\n}\ninherits(Command, EventEmitter);\n\n/**\n * Execute the Command\n */\nCommand.prototype.execute = function (errback) {\n    this.canExecute() && this._execute.apply(this, arguments);\n};\n\n/**\n * Enable the Command\n */\nCommand.prototype.enable = function () {\n    this._changeCanExecute(true);\n};\n\n/**\n * Disable the Command, discouraging its Execution\n */\nCommand.prototype.disable = function () {\n    this._changeCanExecute(false);\n};\n\n/**\n * Change whether the Command can be executed\n * @protected\n * @param canExecute {!boolean}\n */\nCommand.prototype._changeCanExecute = function (canExecute) {\n    this._canExecute = canExecute;\n    this._emitChangeCanExecute();\n};\n\n/**\n * Emits a change of whether the Command can be executed\n * @protected\n */\nCommand.prototype._emitChangeCanExecute = function () {\n    this.emit('change:canExecute', this.canExecute());\n};\n\n/**\n * Check whether the Command can be executed\n * @returns {!boolean}\n */\nCommand.prototype.canExecute = function () {\n    return this._canExecute;\n};\n\nmodule.exports = Command;\n\n});\n","\ndefine('streamhub-sdk/util',['streamhub-sdk/debug', 'streamhub-sdk/jquery'], function (debug, $) {\n    'use strict';\n\n    var log = debug('util');\n\n    /** \n     * A module containing utility methods.\n     * @module streamhub-sdk/util\n     */\n    var exports = {};\n\n    /**\n     * Get outerWidth (jquery-style) of element\n     * @deprecated\n     */\n    exports.outerWidth = function(el) {\n        log('Deprecated: util.outerWidth');\n        return $(el).outerWidth(true);\n    };\n\n    /**\n     * Get outerHeight (jquery-style) of element\n     * @deprecated\n     */\n    exports.outerHeight = function(el) {\n        log('Deprecated: util.outerHeight');\n        return $(el).outerHeight(true);\n    };\n\n    /**\n     * Get innerWidth (jquery-style) of element\n     * @deprecated\n     */\n    exports.innerWidth = function(el) {\n        log('Deprecated: util.innerWidth');\n        return $(el).innerWidth();\n    };\n\n    /**\n     * Get innerHeight (jquery-style) of element\n     * @deprecated\n     */\n    exports.innerHeight = function(el) {\n        log('Deprecated: util.innerHeight');\n        return $(el).innerHeight();\n    };\n\n    /**\n     * Format a date object to be displayed to humans\n     * @param date {Date} A JavaScript Date object\n     * @return {string} A formatted timestamp like \"5/27//06 • 3:26 AM\"\n     */\n    var MONTH_STRINGS = [\n        'Jan', 'Feb', 'Mar', 'Apr',\n        'May', 'Jun','Jul', 'Aug',\n        'Sep', 'Oct', 'Nov', 'Dec'\n    ];\n\n    exports.formatDate = function (date, relativeTo) {\n        relativeTo = relativeTo || new Date();\n        var diffMs = date.getTime() - relativeTo.getTime(),\n            dateString;\n        // Future\n        if (diffMs > 0) {\n            return '';\n        }\n        // Less than 60s ago -> 5s\n        if (diffMs > -60 * 1000) {\n            return Math.round( -1 * diffMs / 1000) + 's';\n        }\n        // Less than 1h ago -> 5m\n        if (diffMs > -60 * 60 * 1000) {\n            return Math.round( -1 * diffMs / (1000 * 60)) + 'm';\n        }\n        // Less than 24h ago -> 5h\n        if (diffMs > -60 * 60 * 24 * 1000) {\n            return Math.round( -1 * diffMs / (1000 * 60 * 60)) + 'h';\n        }\n        // >= 24h ago -> 6 Jul\n        dateString = date.getDate() + ' ' + MONTH_STRINGS[date.getMonth()];\n        // or like 6 Jul 2012 if the year if its different than the relativeTo year\n        if (date.getFullYear() !== relativeTo.getFullYear()) {\n            dateString += ' ' + date.getFullYear();\n        }\n        return dateString;\n    };\n\n    exports.objectKeys = Object.keys || (function () {\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !{toString:null}.propertyIsEnumerable(\"toString\"),\n            DontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ],\n            DontEnumsLength = DontEnums.length;\n\n        return function (o) {\n            if (typeof o !== \"object\" && typeof o !== \"function\" || o === null) {\n                throw new TypeError(\"objectKeys called on a non-object\");\n            }\n\n            var result = [];\n            for (var name in o) {\n                if (hasOwnProperty.call(o, name)) {\n                    result.push(name);\n                }\n            }\n\n            if (hasDontEnumBug) {\n                for (var i = 0; i < DontEnumsLength; i++) {\n                    if (hasOwnProperty.call(o, DontEnums[i])) {\n                        result.push(DontEnums[i]);\n                    }\n                }\n            }\n\n            return result;\n        };\n    })();\n\n    Array.prototype.indexOf = Array.prototype.indexOf || function(val) {\n        return $.inArray(val, this);\n    };\n\n    return exports;\n});\n","\ndefine('streamhub-sdk/ui/auth-required-command',['require','exports','module','auth','streamhub-sdk/auth','streamhub-sdk/ui/command','inherits','streamhub-sdk/debug','streamhub-sdk/util'],function (require, exports, module) {var auth = require('auth');\nvar Auth = require('streamhub-sdk/auth');\nvar Command = require('streamhub-sdk/ui/command');\nvar inherits = require('inherits');\nvar log = require('streamhub-sdk/debug')\n        ('streamhub-sdk/ui/auth-required-command');\nvar util = require('streamhub-sdk/util');\n\n'use strict';\n\n/**\n * Wraps a command and only allows that command to be called if the user is\n * authenticated. If the user isn't authenticated and the developer provides\n * an authentication command, then the authentication command will be executed.\n * @param [command] {Command} Option function to replace the default function.\n * @param [opts] {Object}\n * @param [opts.authenticate] {function} Function that will authenticate a user,\n *      hasn't already authenticated, then call a provided callback\n * @constructor\n * @extends {Command}\n */\nvar AuthRequiredCommand = function (command, opts) {\n    var self = this;\n    opts = opts || {};\n    this._authCmd = command || new Command(function () {});\n    Command.call(this, this._authCmd, opts);\n    if (opts.authenticate) {\n        this._authenticate = opts.authenticate;\n    }\n\n    auth.on('delegate', function () {\n        if (auth.hasDelegate()) {\n            self.enable();\n        }\n    });\n};\ninherits(AuthRequiredCommand, Command);\n\n/**\n * Execute the Command\n * @override\n */\nAuthRequiredCommand.prototype.execute = function () {\n    var self = this;\n    var executeArgs = arguments;\n\n    function isAuthenticated () {\n        return auth.get('livefyre');\n    }\n\n    /**\n     * This callback executes this command, wrapped so that it can be passed\n     * to an authenticating command to be called after authentication.\n     */\n    function doWorkWithAuth() {\n        Command.prototype.execute.apply(self, arguments);\n    }\n\n    if (isAuthenticated()) {\n        doWorkWithAuth.apply(self, executeArgs);\n    } else {\n        auth.login(function (err, user) {\n            if (err) {\n                this.emit('loginError.hub', err);\n                return;\n            }\n            doWorkWithAuth.apply(self, executeArgs);\n        });\n    }\n};\n\n/**\n * Check whether the Command can be executed.\n * \n * return | _command.canExecute() | auth.isAuthenticated() | _authCmd.canExecute()\n * -------|-----------------------|------------------------|----------------------\n *  false |         false         |                        |\n *  true  |         true          |     truthy             |\n *  false |         true          |     falsy              |      false\n *  true  |         true          |     falsy              |      true\n * -------------------------------------------------------------------------------\n * @returns {!boolean}\n */\nAuthRequiredCommand.prototype.canExecute = function () {\n    if (! auth.hasDelegate('login')) {\n        return false;\n    }\n    return Command.prototype.canExecute.apply(this, arguments) && this._authCmd.canExecute();\n};\n\n/**\n * Prepares this command for trash collection.\n */\nAuthRequiredCommand.prototype.destroy = function () {\n    this._listeners = null;//EventEmitter\n};\n\nmodule.exports = AuthRequiredCommand;\n\n});\n","\ndefine('streamhub-sdk/ui/button',['require','exports','module','hgn!streamhub-sdk/ui/templates/button','streamhub-sdk/ui/command','inherits','view'],function (require, exports, module) {'use strict';\n\nvar ButtonTemplate = require('hgn!streamhub-sdk/ui/templates/button');\nvar Command = require('streamhub-sdk/ui/command');\nvar inherits = require('inherits');\nvar View = require('view');\n\n/**\n * A View that, when clicked, executes a Command\n */\nfunction Button (command, opts) {\n    opts = opts || {};\n    if (opts.elClassPrefix) {\n        this.elClassPrefix = opts.elClassPrefix;\n    }\n    if (opts.className) {\n        this.elClass += ' '+opts.className;\n    }\n    if (this.elClassPrefix) {\n        this.elClass = distributeClassPrefix(this.elClassPrefix, this.elClass);\n    }\n    this._disabled = false;\n    this._label = opts.label || '';\n    this._errback = opts.errback;\n\n    View.call(this, opts);\n\n    if (typeof command === 'function') {\n        command = new Command(command);\n    }\n    if (command) {\n        this._setCommand(command);\n    }\n}\ninherits(Button, View);\n\nfunction distributeClassPrefix(prefix, classAttr) {\n    var classTemplate = \"{prefix}-{class}\";\n    var classes = classAttr\n        .split(' ')\n        .filter(function (s) { return s; })\n        .map(function (oneClass) {\n            var prefixedClass = classTemplate\n                .replace('{prefix}', prefix)\n                .replace('{class}', oneClass);\n            return prefixedClass;\n        });\n    return classes.join(' ');\n}\n\n// DOM Event Listeners\nButton.prototype.events = View.prototype.events.extended({\n    click: '_execute'\n});\n\nButton.prototype.elClassPrefix = 'lf';\nButton.prototype.elClass += 'btn';\nButton.prototype.template = ButtonTemplate;\n\n/**\n * The CSS Class to put on this.$el when the command is\n * not allowed to be executed\n */\nButton.prototype.disabledClass = 'disabled';\n\n/** Disable the button */\nButton.prototype.disable = function () {\n    this._setEnabled(false);\n};\n\n/** Enable the button */\nButton.prototype.enable = function () {\n    this._setEnabled(true);\n};\n\nButton.prototype.updateLabel = function (label) {\n    this._label = label;\n    this.render();\n};\n\nButton.prototype.render = function () {\n    View.prototype.render.call(this);\n};\n\nButton.prototype.getTemplateContext = function () {\n    var context = {};\n    context.buttonLabel = this._label;\n\n    return context;\n};\n\n/**\n * Execute the button's command\n * @protected\n */\nButton.prototype._execute = function () {\n    !this._disabled && this._command.execute(this._errback);\n};\n\n/**\n * Set the Command that the Button executes.\n * Only intended to be called once\n * @protected\n * @param command {Command}\n */\nButton.prototype._setCommand = function (command) {\n    var self = this;\n    this._command = command;\n    this._setEnabled(this._command.canExecute());\n    this._command.on('change:canExecute', function (canExecute) {\n        self._setEnabled(canExecute);\n    });\n};\n\n/**\n * Set whether the Button is enabled or not\n * @protected\n * @param {boolean} isEnabled - Whether the button should be enabled\n */\nButton.prototype._setEnabled = function (isEnabled) {\n    this.$el.toggleClass(this.disabledClass, ! isEnabled);\n    this._disabled = !isEnabled;\n};\n\nmodule.exports = Button;\n\n});\n","\ndefine('streamhub-sdk/content/main',[\n    'streamhub-sdk/jquery',\n    'event-emitter',\n    'inherits'\n], function($, EventEmitter, inherits, Enums) {\n    'use strict';\n\n    /**\n     * A piece of Web Content\n     * @param body {!string|{body: string}} A string of HTML, the Content body.\n     *     If an object, it should have a .body property\n     * @fires Content#attachment\n     * @fires Content#removeAttachment\n     * @exports streamhub-sdk/content\n     * @constructor\n     */\n    var Content = function(bodyOrObj) {\n        var body = bodyOrObj;\n        var obj = {};\n        EventEmitter.call(this);\n        if (typeof bodyOrObj === 'object') {\n            body = body.body;\n            obj = bodyOrObj;\n        }\n        this.body = body;\n        var vis = (typeof obj.visibility === 'number') ? obj.visibility :\n            (typeof obj.vis === 'number') ? obj.vis : 1;\n        this.visibility = Content.enums.visibility[vis];\n        this.attachments = obj.attachments || [];\n        this.replies = obj.replies || [];\n        this.opines = obj.opines || [];\n    };\n    inherits(Content, EventEmitter);\n\n    Content.prototype.typeUrn = 'urn:livefyre:js:streamhub-sdk:content';\n\n    /**\n     * Attach an Oembed to the Content\n     * @param obj {Oembed} An Oembed Content instance to attach\n     * @fires Content#attachment\n     */\n    Content.prototype.addAttachment = function(obj) {\n        this.attachments.push(obj);\n        this.emit('attachment', obj);\n    };\n\n    /**\n     * Remove an Oembed from the Content\n     * @param obj {Oembed} An Oembed Content instance to attach\n     * @fires Content#removeAttachment\n     */\n    Content.prototype.removeAttachment = function(obj) {\n        this.attachments.splice(this.attachments.indexOf(obj), 1);\n        this.emit('removeAttachment', obj);\n    };\n\n    /**\n     * Add a reply to the Content\n     * @param obj {Content} A piece of Content in reply to this one\n     * @fires Content#addReply\n     */\n    Content.prototype.addReply = function(obj) {\n        this.replies.push(obj);\n        this.emit('reply', obj);\n    };\n\n    /**\n     * Set some properties and emit 'change' and 'change:{property}' events\n     * @param newProperties {Object} An object of properties to set on this Content\n     * @param silence [boolean] Mute any events that would be fired\n     * @fires Content#change\n     * @fires Content#event:change:_property_\n     */\n    Content.prototype.set = function (newProperties, silence) {\n        newProperties = newProperties || {};\n        var oldProperties = {};\n        var oldVal, newVal, changed;\n        for (var key in newProperties) {\n            if (newProperties.hasOwnProperty(key) && key.charAt(0) !== '_') {//ignore _listeners and others\n                oldVal = oldProperties[key] = this[key];\n                newVal = this[key] = newProperties[key];\n                if (newVal !== oldVal || typeof newVal === 'object') {\n                    silence || this.emit('change:'+key, newVal, oldVal);//Will emit 'change:visibility'\n                    changed = true;\n                }\n            }\n        }\n        if (changed) {\n            silence || this.emit('change', newProperties, oldProperties);\n        }\n    };\n\n    Content.enums = {};\n    /**\n     * The StreamHub APIs use enumerations to define\n     * the visibility of messages sent down the wire. All levels of\n     * visibility should be in this enumeration.\n     * @enum visibility\n     * @property {string} visibility.NONE - Should not be displayed.\n     * @property {string} visibility.EVERYONE - Visible to all.\n     * @property {string} visibility.OWNER - Visible only to the author.\n     * @property {string} visibility.GROUP - Visible to privileged users.\n     */\n    Content.enums.visibility = [\n        'NONE',\n        'EVERYONE',\n        'OWNER',\n        'GROUP'\n    ];\n\n    return Content;\n});\n\ndefine('streamhub-sdk/content', ['streamhub-sdk/content/main'], function (main) { return main; });\n","\ndefine(\"hgn!streamhub-input/templates/content-editor\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<section class=\\\"lf-content-editor\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"lf-user-info\\\">\");_.b(\"\\n\" + i);_.b(\"        <span class=\\\"lf-name\\\">\");_.b(_.v(_.d(\"strings.username\",c,p,0)));_.b(\"</span>\");_.b(\"\\n\" + i);_.b(\"    </div>\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"lf-editor-container\\\">\");_.b(\"\\n\" + i);_.b(_.rp(\"editor\",c,p,\"        \"));_.b(\"    </div>\");_.b(\"\\n\" + i);if(_.s(_.f(\"mediaEnabled\",c,p,1),c,p,0,229,286,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"        <div class=\\\"lf-attachment-list-view\\\"></div>\");_.b(\"\\n\");});c.pop();}_.b(\"    <div class=\\\"lf-btn-wrapper\\\">\");_.b(\"\\n\" + i);if(_.s(_.f(\"mediaEnabled\",c,p,1),c,p,0,362,420,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"            <div class=\\\"lf-editor-upload\\\"></div>\");_.b(\"\\n\");});c.pop();}_.b(\"        <button class=\\\"lf-btn lf-input-btn lf-content-editor-post\\\">\");_.b(_.v(_.d(\"strings.post\",c,p,0)));_.b(\" </button>\");_.b(\"\\n\" + i);_.b(\"    </div>\");_.b(\"\\n\" + i);_.b(\"</section>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-editor/util',['require','exports','module'],function (require, exports, module) {/**\n * @fileoverview Util functions that are useful the other modules.\n */\n\nvar util = {};\n\n/**\n * Abstract function. This is wicked awesome for ensuring that all of the\n * functions get overridden when using the inheritance pattern.\n */\nutil.abstractMethod = function() {\n    throw 'Function must be implemented.';\n};\n\n/**\n * Convert newline chars to <p> tags\n * @param {string} content\n * @returns {string}\n */\nutil.normalizeNewlines = function (content) {\n    content = content.replace(/(\\s*)$/, '');\n    content = '<p>' + content.split('\\n').join('</p><p>') + '</p>';\n    return content;\n};\n\n/**\n * Focus a textarea and place the cursor at the end of the text.\n * @param {jQuery.Element}\n */\nutil.focusAndPlaceCursorAtEnd = function ($textareaEl) {\n    var textareaEl = $textareaEl[0];\n    $textareaEl.focus();\n    if (textareaEl.setSelectionRange) {\n        var len = $textareaEl.val().length * 2;  // * 2 works to force the final char.\n        textareaEl.setSelectionRange(len, len);\n    } else {\n        $textareaEl.val($textareaEl.val());\n    }\n};\n\nmodule.exports = util;\n\n});\n","\ndefine(\"hgn!streamhub-editor/templates/editor\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"lf-editor-resize\\\" />\");_.b(\"\\n\" + i);_.b(\"<textarea class='lf-editor-field'></textarea>\");_.b(\"\\n\" + i);_.b(\"<a class='lf-editor-post-btn'>\");_.b(_.v(_.d(\"strings.postBtn\",c,p,0)));_.b(\"</a>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-editor/editor',['require','exports','module','jquery','hgn!streamhub-editor/templates/editorerror','view/event-map','inherits','streamhub-editor/util','view','hgn!streamhub-editor/templates/editor'],function (require, exports, module) {/**\n * @fileOverview The editor view class. This contains the editor box and any\n * buttons that go along with it.\n */\n\nvar $ = require('jquery');\nvar errorTemplate = require('hgn!streamhub-editor/templates/editorerror');\nvar EventMap = require('view/event-map');\nvar inherits = require('inherits');\nvar util = require('streamhub-editor/util');\nvar View = require('view');\n\n/**\n * Editor view.\n * @constructor\n * @extends {View}\n * @param {Object} opts Config options.\n */\nvar Editor = function(opts) {\n    View.call(this, opts);\n\n    /**\n     * The original height of the editor. This is set in the render function\n     * so that we know how big to reset the height to.\n     * @type {?number}\n     * @private\n     */\n    this._originalHeight = null;\n\n    /**\n     * Whether placeholders are supported or not.\n     * @type {boolean}\n     * @private\n     */\n    this._placeholderSupported = true;\n\n    // overridable strings\n    this._i18n = $.extend(true, {}, this._i18n, opts.i18n);\n};\ninherits(Editor, View);\n\n/** @enum {string} */\nEditor.prototype._i18n = {\n    PLACEHOLDERTEXT: 'The Call of the Comment',\n    POST: 'Post',\n    ERRORS: {\n        BODY: 'Please add a message',\n        GENERIC: 'There was an error'\n    }\n};\n\n/** @enum {string} */\nEditor.prototype.classes = {\n    FIELD: 'lf-editor-field',\n    FOCUS: 'lf-editor-focus',\n    RESIZE: 'lf-editor-resize',\n    POST_BTN: 'lf-editor-post-btn'\n};\n\n/** @override */\nEditor.prototype.events = new EventMap((function() {\n    var classes = Editor.prototype.classes;\n    var events = {};\n    events['blur .' + classes.FIELD] = '_handleEditorBlur';\n    events['click .' + classes.POST_BTN] = '_handlePostBtnClick';\n    events['focus .' + classes.FIELD] = '_handleEditorFocus';\n    events['keydown .' + classes.FIELD] = '_handleEditorKeydown';\n    events['keyup .' + classes.FIELD] = '_handleEditorKeyup';\n    return events;\n})());\n\n/**\n * Get the contents of the editor and do any processing required.\n * @return {string}\n * @private\n */\nEditor.prototype._getContents = function () {\n    return util.normalizeNewlines(this.$textareaEl.val());\n};\n\n/**\n * Handle the blur event in the textarea.\n * @private\n */\nEditor.prototype._handleEditorBlur = function () {\n    this.$el.toggleClass(this.classes.FOCUS, false);\n\n    if (this._placeholderSupported || this.$textareaEl.val() !== '') {\n        return;\n    }\n    this.$textareaEl.val(this._i18n.PLACEHOLDERTEXT);\n};\n\n/**\n * Handle the focus event in the textarea.\n * @private\n */\nEditor.prototype._handleEditorFocus = function () {\n    this.$el.toggleClass(this.classes.FOCUS, true);\n\n    if (this._placeholderSupported) {\n        return;\n    }\n\n    if (this.$textareaEl.val() !== this._i18n.PLACEHOLDERTEXT) {\n        return;\n    }\n    this.$textareaEl.val('');\n};\n\n/**\n * Handle the keydown event in the textarea.\n * @param {jQuery.Event} ev\n * @private\n */\nEditor.prototype._handleEditorKeydown = function (ev) {\n    ev.stopPropagation();\n    this._resize();\n    var isEnter = ev.keyCode === 13;\n    if (!isEnter || ev.shiftKey) {\n        return;\n    }\n    ev.preventDefault();\n    this.handlePostBtnClick();\n};\n\n/**\n * Handle the keyup event in the textarea.\n * @param {jQuery.Event} ev\n * @private\n */\nEditor.prototype._handleEditorKeyup = function (ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._resize();\n};\n\n/**\n * Handle the post button click event. This should validate the data and\n * dispatch a post event that a controller can handle.\n */\nEditor.prototype._handlePostBtnClick = function() {\n    var data = this.buildPostEventObj();\n    if (!this._validate(data)) {\n        return;\n    }\n    this.sendPostEvent(data);\n};\n\n/**\n * Post failure callback.\n * @param {Object} data The response data.\n */\nEditor.prototype._handlePostFailure = util.abstractMethod;\n\n/**\n * Post success callback.\n * @param {Object} data The response data.\n */\nEditor.prototype._handlePostSuccess = util.abstractMethod;\n\n/**\n * Process the placeholder shenanigans that need to happen because IE 9- doesn't\n * support placeholders on textareas.\n * @private\n */\nEditor.prototype._processPlaceholders = function () {\n    if (this.$textareaEl[0].placeholder !== undefined) {\n        this.$textareaEl.attr('placeholder', this._i18n.PLACEHOLDERTEXT);\n        return;\n    }\n    this._placeholderSupported = false;\n    this.$textareaEl.val(this._i18n.PLACEHOLDERTEXT);\n};\n\n/**\n * Resize the editor.\n * @private\n */\nEditor.prototype._resize = function () {\n    var content = this.$textareaEl.val();\n    var height = 0;\n    this.$resizeEl.html(util.normalizeNewlines(content));\n    $.each(this.$resizeEl.children(), function (i, child) {\n        height += $(child).height();\n    });\n    this.$textareaEl.height(height);\n};\n\n/**\n * Validate the post data.\n * @param {Object} data The post data to be validated.\n * @return {boolean} Whether the post data is valid or not.\n */\nEditor.prototype._validate = function(data) {\n    if (!data.body) {\n        this.showError(this._i18n.ERRORS.BODY);\n        return false;\n    }\n    return true;\n};\n\n/**\n * Build the post event object that will be dispatched from the editor.\n * @return {Object} The post event object.\n */\nEditor.prototype.buildPostEventObj = function() {\n    var event = {};\n    event.body = this.$textareaEl.val();\n    event.failure = $.proxy(this._handlePostFailure, this);\n    event.success = $.proxy(this._handlePostSuccess, this);\n    return event;\n};\n\n/**\n * Focus on the textarea.\n */\nEditor.prototype.focus = function () {\n    util.focusAndPlaceCursorAtEnd(this.$textareaEl);\n};\n\n/**\n * Initialize the editor view. This keeps track of the original height of the\n * field and focuses on the textarea.\n * This should be called once the editor is in the DOM.\n */\nEditor.prototype.initialize = function () {\n    this._originalHeight = this.$textareaEl.height();\n    this.focus();\n};\n\n/** @override */\nEditor.prototype.getTemplateContext = function () {\n    return {\n        strings: {\n            post: this._i18n.POST\n        }\n    };\n};\n\n/** @override */\nEditor.prototype.render = function() {\n    View.prototype.render.call(this);\n    this.$resizeEl = this.getElementsByClass(this.classes.RESIZE);\n    this.$textareaEl = this.getElementsByClass(this.classes.FIELD);\n    this.$errorContainer = this.$el;\n    this._processPlaceholders();\n};\n\n/**\n * Reset the editor back to it's original state.\n */\nEditor.prototype.reset = function () {\n    this.$resizeEl.html('');\n    this.$textareaEl.val('');\n    this.$textareaEl.height(this._originalHeight);\n};\n\n/** @override */\nEditor.prototype.template = require('hgn!streamhub-editor/templates/editor');\n\n/**\n * Send the post event.\n * @param {Object} data The post data to send.\n */\nEditor.prototype.sendPostEvent = util.abstractMethod;\n\n/**\n * Show an error message to the user.\n * @param {string} msg The error message to display.\n */\nEditor.prototype.showError = function (msg) {\n    if (this.$errorEl) {\n        return;\n    }\n\n    // TODO (mark): Eventually we'll want to have a map for error event types\n    // but the SDK only returns error message strings which are useless to us.\n    this.$errorEl = $(errorTemplate({msg: msg}));\n    this.$errorContainer.append(this.$errorEl);\n    this.$errorEl.fadeTo(500, 0.98);\n    this.$textareaEl.blur();\n\n    this.$errorEl.one('click', $.proxy(function (ev) {\n        ev.stopPropagation();\n        this.$errorEl.remove();\n        this.$errorEl = null;\n        this.focus();\n    }, this));\n};\n\nmodule.exports = Editor;\n\n});\n","\ndefine('observer',[],function() {\n\n    var listenIds = 0;\n\n    /**\n     * An Observable mixin for use with EventEmitter\n     * @param {Object} that\n     * @exports streamhub-sdk/observer\n     */\n    function Observer(that) {\n        that._listeningTo = {};\n        that.listenTo = listenTo;\n        that.stopListening = stopListening;\n        return that;\n    };\n\n    /**\n     * Listen to the event on the provided object\n     * @param {EventEmitter} obj\n     * @param {string} name\n     * @param {function()} callback\n     */\n    function listenTo(obj, name, callback) {\n        var id = obj._listenId || (obj._listenId = listenIds++ + '');\n\n        // TODO: simplify\n        this._listeningTo[id] = this._listeningTo[id] || {};\n        this._listeningTo[id].obj = obj;\n        this._listeningTo[id].listeners = this._listeningTo[id].listeners || {};\n        this._listeningTo[id].listeners[name] = this._listeningTo[id].listeners[name] || [];\n        this._listeningTo[id].listeners[name].push(callback);\n\n        obj.on(name, callback);\n    }\n\n    /**\n     * Stop listening to the provided object\n     * @param {?EventEmitter} obj\n     */\n    function stopListening(obj) {\n        if (obj) {\n            removeListenersForObj.call(this, obj._listenId);\n            return;\n        }\n        // TODO: name/callback granularity\n        for (var id in this._listeningTo) {\n            if (!this._listeningTo.hasOwnProperty(id)) {\n                continue;\n            }\n            removeListenersForObj.call(this, id)\n        }\n    }\n\n    function removeListenersForObj(id) {\n        if (!this._listeningTo[id]) {\n            return;\n        }\n\n        var obj = this._listeningTo[id].obj;\n        var listeners = this._listeningTo[id].listeners;\n        var callbacks;\n        for (var name in listeners) {\n            if (!listeners.hasOwnProperty(name)) {\n                continue;\n            }\n\n            callbacks = listeners[name];\n            for (var i = 0; i < callbacks.length; i++) {\n                obj.removeListener(name, callbacks[i]);\n            }\n        }\n        delete this._listeningTo[id];\n    }\n\n    return Observer;\n});\n","\ndefine('streamhub-input/javascript/pipeable',['require','exports','module'],function (require, exports, module) {/**\n * An input specific implementation of a readable that actively writes new content to a destination.\n * @param [opts] {Object}\n * @param [opts.destination] {Writable} The collection or other Writable that\n *      will receive this input. it is recommended that this is specified.\n */\nfunction Pipeable(opts) {\n    opts = opts || {};\n    this._destination = opts.destination || null;\n}\n\n/**\n * @param {Writable} writable\n */\nPipeable.prototype.pipe = function (writable) {\n    this._destination = writable;\n};\n\n/**\n * Set the destination to null\n */\nPipeable.prototype.unpipe = function () {\n    this._destination = null;\n};\n\n/**\n * @param {Object} data\n * @param {function(?Error, Object)} cb\n */\nPipeable.prototype.writeToDestination = function (data, cb) {\n    if (!this._destination) {\n        throw 'No destination to write to';\n    }\n    this._destination.write(data, cb);\n};\n\nmodule.exports = Pipeable;\n\n});\n","\ndefine('json',{load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});","\ndefine(\"json!streamhub-input/../package.json\", function(){ return {\n  \"name\": \"streamhub-input\",\n  \"description\": \"Livefyre Streamhub Input\",\n  \"author\": \"Livefyre <joao@livefyre.com>\",\n  \"contributors\": {\n    \"name\": \"Joao Martins\",\n    \"email\": \"joao@livefyre.com\"\n  },\n  \"version\": \"0.2.2\",\n  \"scripts\": {\n    \"postinstall\": \"./node_modules/bower/bin/bower install\",\n    \"start\": \"node ./dev/server.js\",\n    \"build\": \"npm run-script clean-build && npm run-script build-non-min && ./node_modules/requirejs/bin/r.js -o ./tools/build.conf.js && npm run-script fonts\",\n    \"build-non-min\": \"./node_modules/requirejs/bin/r.js -o ./tools/build.conf.js optimize=none out=./dist/streamhub-input.js\",\n    \"build-css\": \"mkdir -p dist && ./node_modules/less/bin/lessc --include-path=lib/ --clean-css src/styles/hub-input.less dist/streamhub-input.min.css\",\n    \"clean-build\": \"rm -rf dist && mkdir -p dist\",\n    \"hint\": \"./node_modules/jshint/bin/jshint src/ tests/; echo\",\n    \"test\": \"./node_modules/karma/bin/karma start tests/karma.conf.js --singleRun\",\n    \"testw\": \"./node_modules/karma/bin/karma start tests/karma.conf.js\",\n    \"test-ci\": \"./node_modules/karma/bin/karma start tests/karma.conf.js --singleRun --reporters dots,junit,coverage  && npm run send-to-coveralls\",\n    \"karma\": \"./node_modules/karma/bin/karma start tests/karma.conf.js\",\n    \"fonts\": \"cp -rf ./lib/livefyre-bootstrap/src/fonts dist/fonts\",\n    \"jsdoc\": \"rm -rf docs/api && ./node_modules/jsdoc/jsdoc README.md -c tools/jsdoc.conf.json\",\n    \"send-to-coveralls\": \"find coverage -name 'lcov.info' -print0 | xargs -0 cat | ./node_modules/coveralls/bin/coveralls.js\"\n  },\n  \"devDependencies\": {\n    \"bower\": \"1.2.6\",\n    \"cajon\": \"~0.1.11\",\n    \"coveralls\": \"~2.3.0\",\n    \"express\": \"4.0.0\",\n    \"http-server\": \"*\",\n    \"ink-docstrap\": \"git://github.com/michaelward82/docstrap.git#line-number-alignment\",\n    \"jsdoc\": \"git://github.com/jsdoc3/jsdoc.git\",\n    \"jshint\": \"~2.1.0\",\n    \"karma\": \"~0.10.5\",\n    \"karma-cajon\": \"*\",\n    \"karma-chrome-launcher\": \"~0.1.0\",\n    \"karma-coffee-preprocessor\": \"~0.1.0\",\n    \"karma-coverage\": \"~0.1.2\",\n    \"karma-firefox-launcher\": \"~0.1.0\",\n    \"karma-html2js-preprocessor\": \"~0.1.0\",\n    \"karma-jasmine\": \"~0.1.3\",\n    \"karma-junit-reporter\": \"~0.1.0\",\n    \"karma-phantomjs-launcher\": \"~0.1.0\",\n    \"karma-requirejs\": \"~0.2.0\",\n    \"karma-script-launcher\": \"~0.1.0\",\n    \"less\": \"*\",\n    \"less-middleware\": \"0.1.15\",\n    \"phantomjs\": \"*\",\n    \"phantomjs\": \"~1.9.2-2\",\n    \"requirejs\": \"2.1.9\",\n    \"rework\": \"git://github.com/gobengo/rework\"\n  }\n}\n;});\n","\ndefine('streamhub-input/javascript/package-attribute',['require','exports','module','json!streamhub-input/../package.json'],function (require, exports, module) {var packageJson = require('json!streamhub-input/../package.json');\nvar packageAttribute = 'data-lf-package';\n\n/**\n * Decorate an HTMLElement with the proper package attribute\n * for streamhub-wall e.g.\n * data-lf-package=\"streamhub-wall#3.0.0\"\n */\nexports.decorate = function (el) {\n    var currentVal = el.getAttribute(packageAttribute);\n    var newVal = packageName(packageJson);\n    // If there already was this attribute, just add to the attr\n    // space-separated\n    if (currentVal) {\n        newVal = [currentVal, ' ', newVal].join('');\n    }\n    el.setAttribute(packageAttribute, newVal);\n};\n\nexports.undecorate = function (el) {\n    var currentVal = el.getAttribute(packageAttribute) || '';\n    var newVal = currentVal.replace(packageName(packageJson), '');\n    el.setAttribute(packageAttribute, newVal);\n};\n\nexports.decorateModal = function modalWithPackageSelector(modal) {\n    modal.$el.on('showing', setHasPackageAttribute.bind({}, modal, true));\n    modal.$el.on('hiding', setHasPackageAttribute.bind({}, modal, false));\n    return modal;\n};\n\nfunction setHasPackageAttribute(modal, shouldHaveAttr) {\n    debugger;\n    exports[shouldHaveAttr ? 'decorate' : 'undecorate'](modal.parentNode);\n}\n\nfunction packageName(packageJson) {\n    return packageJson.name + '#' + packageJson.version;\n}\n\n});\n","\ndefine('streamhub-input/javascript/button',['require','exports','module','streamhub-sdk/ui/auth-required-command','streamhub-sdk/ui/button','inherits','streamhub-input/javascript/package-attribute'],function (require, exports, module) {var AuthRequiredCommand = require('streamhub-sdk/ui/auth-required-command');\nvar Button = require('streamhub-sdk/ui/button');\nvar inherits = require('inherits');\nvar packageAttribute = require('streamhub-input/javascript/package-attribute');\n\n'use strict';\n\n/**\n * @param command {Command} Command to execute.\n * @param [opts] {Object}\n * @param [opts.input] {Pipeable} The Input source.\n * @param [opts.destination] {Writable} The collection or other Writable that\n *      will receive this input. it is recommended that this is specified.\n * @param [opts.authRequired] {boolean} True by default. Wraps the command in an\n *      auth-required-command, disabling the button unless there is an\n *      authentication route.\n * @constructor\n * @extends {Button}\n */\n function InputButton(command, opts) {\n    opts = opts || {};\n    /**\n     * @type {?Pipeable}\n     */\n    this._input = opts.input || null;\n\n    opts.destination && this.pipe(opts.destination);\n\n    if (opts.authRequired !== false) {\n        command = new AuthRequiredCommand(command);\n    }\n\n    Button.call(this, command, opts);\n}\ninherits(InputButton, Button);\n\n/** @override */\nInputButton.prototype.elClass += ' input-btn';\n\n/** @override */\nInputButton.prototype.elTag = 'button';\n\n/** @override */\nInputButton.prototype.setElement = function () {\n    if (this.el) {\n        packageAttribute.undecorate(this.el);\n    }\n    Button.prototype.setElement.apply(this, arguments);\n    packageAttribute.decorate(this.el);\n};\n\n/**\n * Facade for button's input.\n * @param {Writable} writable\n */\nInputButton.prototype.pipe = function (writeable) {\n    this._input && this._input.pipe(writeable);\n};\n\n/**\n * Facade for button's input.\n * @param {Writable} writable\n */\nInputButton.prototype.unpipe = function (writeable) {\n    this._input && this._input.unpipe(writeable);\n};\n\nmodule.exports = InputButton;\n\n});\n","\ndefine('streamhub-input/javascript/modal/modal-input-command',['require','exports','module','streamhub-sdk/ui/command','inherits'],function (require, exports, module) {var Command = require('streamhub-sdk/ui/command');\nvar inherits = require('inherits');\n\n'use strict';\n\n/**\n * A command that, when executed, shows the modal version of an Input view. Requires that\n * the view implements LaunchableModal\n * @param view {LaunchableModal} View to launch as a modal\n * @param [opts] {Object}\n * @constructor\n * @extends {Command}\n */\nfunction ModalInputCommand(view, opts) {\n    opts = opts || {};\n    if (!view) {\n        throw 'Can\\'t instantiate a ModalInputCommand without specifying a view';\n    }\n    function cmd() {\n        view.launchModal(opts.modal);\n    }\n\n    /**\n     * The Input instance that will be launched into a modal\n     * @type {!Input}\n     */\n    this.view = view;\n\n    Command.call(this, cmd, opts);\n}\ninherits(ModalInputCommand, Command);\n\n/** @override */\nModalInputCommand.prototype.canExecute = function () {\n    return (this.view) ? true : false;\n};\n\nmodule.exports = ModalInputCommand;\n\n});\n","\ndefine(\"hgn!streamhub-sdk/content/templates/oembed-link\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"content-attachment content-attachment-link\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachment-frame\\\"></div>\");_.b(\"\\n\" + i);if(_.s(_.f(\"thumbnail_url\",c,p,1),c,p,0,128,218,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"        <img class=\\\"content-attachment-link-thumbnail\\\" src=\\\"\");_.b(_.t(_.f(\"thumbnail_url\",c,p,0)));_.b(\"\\\"/>\");_.b(\"\\n\");});c.pop();}_.b(\"    <div class=\\\"content-attachment-link-body\\\">\");_.b(\"\\n\" + i);_.b(\"        <a href=\\\"\");_.b(_.t(_.f(\"url\",c,p,0)));_.b(\"\\\" target=\\\"_blank\\\">\");_.b(_.t(_.f(\"title\",c,p,0)));_.b(\"</a>\");_.b(\"\\n\" + i);_.b(\"        <p class=\\\"content-attachment-provider\\\">via \");_.b(_.t(_.f(\"provider_name\",c,p,0)));_.b(\"</p>\");_.b(\"\\n\" + i);_.b(\"    </div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine(\"hgn!streamhub-sdk/content/templates/oembed-rich\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"content-attachment content-attachment-rich\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachment-frame\\\"></div>\");_.b(\"\\n\" + i);_.b(\"    \");_.b(_.t(_.f(\"html\",c,p,0)));_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-sdk/content/views/oembed-view',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'hgn!streamhub-sdk/content/templates/oembed-photo',\n    'hgn!streamhub-sdk/content/templates/oembed-video',\n    'hgn!streamhub-sdk/content/templates/oembed-link',\n    'hgn!streamhub-sdk/content/templates/oembed-rich',\n    'inherits'\n],\nfunction($, View, OembedPhotoTemplate, OembedVideoTemplate, OembedLinkTemplate, OembedRichTemplate, inherits) {\n    'use strict';\n\n    /**\n     * A view that renders oembed attachments\n     *\n     * @param opts {Object} A set of options to config the view with\n     * @param opts.el {HTMLElement} The element in which to render the streamed content\n     * @param opts.oembed {Object} The oembed attachment object to display\n     * @fires OembedView#imageLoaded.hub\n     * @fires OembedView#imageError.hub\n     * @exports streamhub-sdk/content/views/oembed-view\n     * @constructor\n     */\n    var OembedView = function(opts) {\n        this.oembed = opts.oembed || {};\n        View.call(this, opts);\n\n        if (!this.oembed) {\n            return;\n        }\n        this.template = this.OEMBED_TEMPLATES[this.oembed.type];\n    };\n    inherits(OembedView, View);\n\n    /**\n     * A mapping of oembed type to its mustache template for rendering \n     * @readonly\n     * @enum {Template}\n     */\n    OembedView.prototype.OEMBED_TEMPLATES = {\n        'photo': OembedPhotoTemplate,\n        'video': OembedVideoTemplate,\n        'link':  OembedLinkTemplate,\n        'rich':  OembedRichTemplate\n    };\n\n    /**\n     * Renders the template and appends itself to this.el\n     * For oembed types with thumbnails attach image load/error handlers\n     */\n    OembedView.prototype.render = function() {\n        // YouTube oembed thumbnails (hqdefault.jpg) include a letterbox for 16:9 aspect ratio\n        // videos. Use mqdefault.jpg instead as it does not have letterboxing.\n        // http://kb.oboxsites.com/knowledgebase/how-to-remove-black-bars-on-youtube-oembed-thumbnails/\n        if (this.oembed.provider_name === 'YouTube') {\n            var re = /(hqdefault.jpg)$/;\n            if (re.test(this.oembed.thumbnail_url)) {\n                this.oembed.thumbnail_url = this.oembed.thumbnail_url.replace(re, 'mqdefault.jpg');\n            }\n        }\n        var context = $.extend({}, this.oembed);\n        this.$el.html(this.template(context));\n\n        if (this.oembed.type !== 'photo' && this.oembed.type !== 'video') {\n            return;\n        }\n\n        // handle oembed loading gracefully\n        var self = this;\n        var newImg = this.$el.find('img.content-attachment-actual-image');\n        newImg.hide();\n        newImg.on('load', function() {\n            if (newImg.parent().is('.content-attachment-photo')) {\n                newImg.parent().fadeIn();\n            } else {\n                newImg.fadeIn();\n            }\n            /**\n             * Image load success\n             * @event OembedView#imageLoaded.hub\n             */\n            self.$el.trigger('imageLoaded.hub');\n        });\n        newImg.on('error', function() {\n            /**\n             * Image load error\n             * @event OembedView#imageError.hub\n             */\n            self.$el.trigger('imageError.hub', self.oembed);\n        });\n    };\n\n    return OembedView;\n});\n","\ndefine('streamhub-sdk/content/views/attachment-list-view',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'streamhub-sdk/content/views/oembed-view',\n    'hgn!streamhub-sdk/content/templates/attachment-list',\n    'inherits'],\nfunction($, View, OembedView, AttachmentListTemplate, inherits) {\n    'use strict';\n   \n    /**\n     * A simple View that displays Content in a list (`<ul>` by default).\n     * @param opts {Object} A set of options to config the view with\n     * @param opts.el {HTMLElement} The element in which to render the streamed content\n     * @param opts.content {Content} The content instance with which to display its attachments\n     * @exports streamhub-sdk/views/attachment-list-view\n     * @constructor\n     */\n    var AttachmentListView = function(opts) {\n        opts = opts || {};\n\n        this.oembedViews = [];\n        this._rendered = false;\n\n        View.call(this, opts);\n        \n        if (opts.content) {\n            this.setContent(opts.content);\n        }\n    };\n    inherits(AttachmentListView, View);\n\n    AttachmentListView.prototype.template = AttachmentListTemplate;\n    AttachmentListView.prototype.stackedAttachmentsSelector = '.content-attachments-stacked';\n    AttachmentListView.prototype.contentAttachmentSelector = '.content-attachment';\n    AttachmentListView.prototype.listLengthAttribute = 'data-hub-list-length';\n\n    /**\n     * Set the element for the view to render in.\n     * You will probably want to call .render() after this, but not always.\n     * @param content {HTMLElement} The element to render this View in\n     */\n    AttachmentListView.prototype.setContent = function (content) {\n        var self = this;\n\n        if (! content) {\n            return;\n        }\n\n        // If this was previously managing different Content\n        if (this.content) {\n            // Remove existing attachment views\n            this.$el.find(this.contentAttachmentSelector).remove();\n            this.oembedViews = [];\n        }\n\n        this.content = content;\n        \n        // Add attachments that already exist\n        for (var i=0; i < this.content.attachments.length; i++) {\n            this.add(this.content.attachments[i]);\n        }\n        // Add attachments added later\n        this.content.on('attachment', function (attachment) {\n            self.add(attachment);\n        });\n        this.content.on('removeAttachment', function (attachment) {\n            self.remove(attachment);\n        });\n    };\n\n    /**\n     * Set the element for the view to render in.\n     * You will probably want to call .render() after this, but not always.\n     * @param element {HTMLElement} The element to render this View in\n     * @returns this\n     */\n    AttachmentListView.prototype.setElement = function (element) {\n        var ret = View.prototype.setElement.apply(this, arguments);\n        this.$el.attr(this.listLengthAttribute, this.count());\n        return ret;\n    };\n\n    AttachmentListView.prototype.render = function () {\n        var self = this;\n        View.prototype.render.call(this);\n        this._rendered = true;\n        $.each(self.oembedViews, function (i, oembedView) {\n            if ( ! self.$el.has(oembedView.$el).length) {\n                // oembedView needs to be a descendant of AttachmentListView#.el\n                self._insert(oembedView);\n            }\n            oembedView.render();\n        });\n    };\n\n    /**\n     * A count of the number of attachments for this content item\n     * @returns {int} The number of attachments for this content item\n     */\n    AttachmentListView.prototype.count = function () {\n        return this.oembedViews.length;\n    };\n\n    /**\n     * Appends a new OembedView given an Oembed instance to the view\n     * @param oembed {Oembed} A Oembed instance to insert into the view\n     * @returns {OembedView} The OembedView associated with the newly inserted oembed\n     */\n    AttachmentListView.prototype._insert = function (contentView) {\n        contentView.$el.appendTo(this.$el.find(this.stackedAttachmentsSelector));\n    };\n\n    /**\n     * Add a Oembed attachment to the Attachments view. \n     * @param oembed {Oembed} A Oembed instance to render in the View\n     * @returns {AttachmentListView} By convention, return this instance for chaining\n     */\n    AttachmentListView.prototype.add = function(oembed) {\n        var oembedView = this._createOembedView(oembed);\n\n        this.oembedViews.push(oembedView);\n\n        // Insert in .el\n        if (this.el) {\n            this._insert(oembedView);\n            // Update list length attribute\n            this.$el.attr(this.listLengthAttribute, this.count());\n        }\n\n        if (this._rendered) {\n            oembedView.render();\n        }\n\n        return oembedView;\n    };\n\n    /**\n     * Remove a piece of Content from this ListView\n     * @param content {Content} The Content to be removed\n     * @returns {boolean} true if Content was removed, else false\n     */\n    AttachmentListView.prototype.remove = function (oembed) {\n        var oembedView = this.getOembedView(oembed);\n        if (! oembedView) {\n            return false;\n        }\n        oembedView.$el.remove();\n        // Remove from this.oembedViews[]\n        this.oembedViews.splice(this.oembedViews.indexOf(oembedView), 1);\n        return true;\n    };\n\n    /**\n     * Creates the view to render the oembed content object\n     * @param oembed {Oembed} A Oembed instance to render in the View\n     * @returns {OembedView} \n     */\n    AttachmentListView.prototype._createOembedView = function(oembed) {\n        var oembedView = new OembedView({\n            oembed: oembed\n        });\n        return oembedView;\n    };\n\n    /**\n     * Given a new Content instance, return an existing contentView that\n     * should be used to update the content (based on identity or content.id).\n     * @param newOembed {Content} The piece of content to find the view for.\n     * @returns {OembedView | null} The oembedView for the content, or null.\n     */\n    AttachmentListView.prototype.getOembedView = function (newOembed) {\n        for (var i=0; i < this.oembedViews.length; i++) {\n            var oembedView = this.oembedViews[i];\n            if ((newOembed === oembedView.oembed) || (newOembed.id && oembedView.oembed.id === newOembed.id)) {\n                return oembedView;\n            }\n        }\n        return null;\n    };\n\n    AttachmentListView.prototype.destroy = function () {\n        View.prototype.destroy.call(this);\n        this.oembedViews = null;\n    };\n\n    return AttachmentListView;\n});\n","\ndefine('streamhub-sdk/content/views/tiled-attachment-list-view',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'streamhub-sdk/content/views/attachment-list-view',\n    'streamhub-sdk/content/views/oembed-view',\n    'hgn!streamhub-sdk/content/templates/tiled-attachment-list',\n    'inherits'],\nfunction ($, View, AttachmentListView, OembedView, TiledAttachmentListTemplate, inherits) {\n    'use strict';\n\n    \n    /**\n     * A simple View that displays Content in a list (`<ul>` by default).\n     *\n     * @param opts {Object} A set of options to config the view with\n     * @param opts.el {HTMLElement} The element in which to render the streamed content\n     * @param opts.content {Content} The content instance with which to display its attachments\n     * @fires TiledAttachmentListView#focusContent.hub\n     * @exports streamhub-sdk/views/tiled-attachment-list-view\n     * @constructor\n     */\n    var TiledAttachmentListView = function (opts) {\n        opts = opts || {};\n        this.oembedViews = [];\n        AttachmentListView.call(this, opts);\n    };\n    inherits(TiledAttachmentListView, AttachmentListView);\n\n    TiledAttachmentListView.prototype.template = TiledAttachmentListTemplate;\n    TiledAttachmentListView.prototype.tiledAttachmentsSelector = '.content-attachments-tiled';\n    TiledAttachmentListView.prototype.stackedAttachmentsSelector = '.content-attachments-stacked';\n    TiledAttachmentListView.prototype.squareTileClassName = 'content-attachment-square-tile';\n    TiledAttachmentListView.prototype.horizontalTileClassName = 'content-attachment-horizontal-tile';\n    TiledAttachmentListView.prototype.contentAttachmentSelector = '.content-attachment';\n\n    TiledAttachmentListView.prototype.events = AttachmentListView.prototype.events.extended({\n        'click': function (e, opts) {\n            opts = opts || {};\n            this.$el.trigger('focusContent.hub', { content: this.content, attachmentToFocus: opts.oembed });\n        }\n    });\n\n    TiledAttachmentListView.prototype.render = function () {\n        AttachmentListView.prototype.render.call(this);\n        this.retile();\n    };\n\n\n    /**\n     * Checks whether attachment is tileable\n     * @returns {boolean} Whether an attachment is tileable\n     */\n    TiledAttachmentListView.prototype.isTileableAttachment = function (oembed) {\n        if (oembed.type === 'photo' || oembed.type === 'video') {\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * A count of the number of tileable attachments for this content item\n     * @returns {boolean} The number of tileable attachments for this content item\n     */\n    TiledAttachmentListView.prototype.tileableCount = function () {\n        var attachmentsCount = 0;\n\n        for (var i=0; i < this.oembedViews.length; i++) {\n            if (this.isTileableAttachment(this.oembedViews[i].oembed)) {\n                attachmentsCount++;\n            }\n        }\n        return attachmentsCount;\n    };\n\n    /**\n     * Add a Oembed attachment to the Attachments view. \n     * @param oembed {Oembed} A Oembed instance to render in the View\n     * @returns {AttachmentListView} By convention, return this instance for chaining\n     */\n    TiledAttachmentListView.prototype.add = function (oembed) {\n        AttachmentListView.prototype.add.call(this, oembed);\n        this.retile();\n        return this;\n    };\n\n    TiledAttachmentListView.prototype._insert = function (oembedView) {\n        var tiledAttachmentsEl = this.$el.find(this.tiledAttachmentsSelector);\n        var stackedAttachmentsEl = this.$el.find(this.stackedAttachmentsSelector);\n        if (this.isTileableAttachment(oembedView.oembed)) {\n            oembedView.$el.appendTo(tiledAttachmentsEl);\n        } else {\n            oembedView.$el.appendTo(stackedAttachmentsEl);\n        }\n    };\n\n    /**\n     * Removes a Oembed attachment from the Attachments view. \n     * @param oembed {Oembed} A Oembed instance to remove\n     */\n    TiledAttachmentListView.prototype.remove = function (oembed) {\n        AttachmentListView.prototype.remove.call(this, oembed);\n        this.retile();\n    };\n\n    /**\n     * Retiles all attachments of the content \n     */\n    TiledAttachmentListView.prototype.retile = function () {\n        if ( ! this.el) {\n            return;\n        }\n        var tiledAttachmentsEl = this.$el.find(this.tiledAttachmentsSelector);\n\n        // Add classes to make thumbnails tile\n        var attachmentsCount = this.tileableCount(this.oembedViews);\n        tiledAttachmentsEl\n            .removeClass('content-attachments-1')\n            .removeClass('content-attachments-2')\n            .removeClass('content-attachments-3')\n            .removeClass('content-attachments-4');\n        if (attachmentsCount && attachmentsCount <= 4) {\n            // Only tile for <= 4 photo or video attachments\n            tiledAttachmentsEl.addClass('content-attachments-' + attachmentsCount);\n        }\n        tiledAttachmentsEl.find(this.contentAttachmentSelector).addClass(this.squareTileClassName);\n        if (attachmentsCount === 3) {\n            tiledAttachmentsEl.find(this.contentAttachmentSelector + ':first')\n                .removeClass(this.squareTileClassName)\n                .addClass(this.horizontalTileClassName);\n        } else if (attachmentsCount > 4) {\n            tiledAttachmentsEl.find(this.contentAttachmentSelector)\n                .removeClass(this.squareTileClassName)\n                .addClass(this.horizontalTileClassName);\n        } else {\n            tiledAttachmentsEl.find(this.contentAttachmentSelector)\n                .removeClass(this.horizontalTileClassName)\n                .addClass(this.squareTileClassName);\n        }\n    };\n\n    return TiledAttachmentListView;\n});\n","\ndefine(\"hgn!streamhub-sdk/content/templates/tiled-attachment-list\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"content-attachments-interactive-gallery\\\"></div>\");_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-tiled\\\"></div>\");_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-stacked\\\"></div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-sdk/content/views/gallery-attachment-list-view',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'streamhub-sdk/content/views/tiled-attachment-list-view',\n    'streamhub-sdk/content/views/oembed-view',\n    'hgn!streamhub-sdk/content/templates/gallery-attachment-list',\n    'hgn!streamhub-sdk/content/templates/content-byline',\n    'inherits'],\nfunction($, View, TiledAttachmentListView, OembedView, GalleryAttachmentListTemplate, contentBylineTemplate, inherits) {\n    'use strict';\n\n    /**\n     * A view that displays a content's attachments as a gallery\n     *\n     * @param opts {Object} A set of options to config the view with\n     * @param opts.el {HTMLElement} The element in which to render the streamed content\n     * @param opts.content {Content} The content containing attachments to display as a gallery\n     * @param opts.attachmentToFocus {Oembed} The attachment to focus in the gallery\n     * @param opts.userInfo {boolean} Whether to display the user info\n     * @param opts.pageButtons {boolean} Whether to display next/previous page buttons\n     * @param opts.pageCount {boolean} Whether to display the page count/index\n     * @param opts.thumbnails {boolean} Whether to display the thumbnails of all attachments\n     * @param opts.proportionalThumbnails {boolean} Whether the thumbnail widths are proportional to the gallery container\n     * @fires GalleryAttachmentListView#hideModal.hub\n     * @exports streamhub-sdk/views/gallery-attachment-list-view\n     * @constructor\n     */\n    var GalleryAttachmentListView = function(opts) {\n        opts = opts || {};\n        View.call(this, opts);\n\n        this.userInfo = opts.userInfo === undefined ? true : opts.userInfo;\n        this.pageButtons = opts.pageButtons === undefined ? true : opts.pageButtons;\n        this.pageCount = opts.pageCount === undefined ? true : opts.pageCount;\n        this.thumbnails = opts.thumbnails === undefined ? false : opts.thumbnails;\n        this.proportionalThumbnails = opts.proportionalThumbnails === undefined ? false : opts.proportionalThumbnails;\n        this.focusedIndex = 0;\n        this.oembedViews = [];\n\n        if (opts.content) {\n            this.setContent(opts.content);\n        }\n        \n        if (opts.attachmentToFocus) {\n            this.setFocusedAttachment(opts.attachmentToFocus);\n        }\n\n        var self = this;\n        $(window).on('resize', function(e) {\n            self.resizeFocusedAttachment();\n        });\n\n        $(window).on('keyup', function(e) {\n            e.preventDefault();\n            if (!self.pageButtons) {\n                return;\n            }\n            if (e.keyCode === 37) {\n                // left arrow\n                self.prev();\n            } else if (e.keyCode === 39) {\n                // right arrow\n                self.next();\n            }\n        });\n    };\n    inherits(GalleryAttachmentListView, View);\n    $.extend(GalleryAttachmentListView.prototype, TiledAttachmentListView.prototype);\n\n    GalleryAttachmentListView.prototype.template = GalleryAttachmentListTemplate;\n    GalleryAttachmentListView.prototype.attachmentsGallerySelector = '.content-attachments-gallery';\n    GalleryAttachmentListView.prototype.focusedAttachmentsSelector = '.content-attachments-gallery-focused';\n    GalleryAttachmentListView.prototype.galleryThumbnailsSelector = '.content-attachments-gallery-thumbnails';\n    GalleryAttachmentListView.prototype.galleryPrevSelector = '.content-attachments-gallery-prev';\n    GalleryAttachmentListView.prototype.galleryNextSelector = '.content-attachments-gallery-next';\n    GalleryAttachmentListView.prototype.galleryCloseSelector = '.content-attachments-gallery-close';\n    GalleryAttachmentListView.prototype.galleryCountSelector = '.content-attachments-gallery-count';\n    GalleryAttachmentListView.prototype.galleryCurrentPageSelector = '.content-attachments-gallery-current-page';\n    GalleryAttachmentListView.prototype.galleryTotalPagesSelector = '.content-attachments-gallery-total-pages';\n    GalleryAttachmentListView.prototype.focusedAttachmentClassName = 'content-attachments-focused';\n    GalleryAttachmentListView.prototype.attachmentMetaSelector = '.content-attachments-meta';\n    GalleryAttachmentListView.prototype.actualImageSelector = '.content-attachment-actual-image';\n\n    GalleryAttachmentListView.prototype.events = TiledAttachmentListView.prototype.events.extended({\n        click: function (e) {\n            /**\n             * Hide modal\n             * @event GalleryAttachmentListView#hideModal.hub\n             */\n            this.$el.trigger('hideModal.hub');\n        },\n        'focusContent.hub': function(e, context) {\n            if (context.content) {\n                for (var i=0; i < context.content.attachments; i++) {\n                    this.add(context.content.attachments[i]);\n                }\n            }\n            this.setFocusedAttachment(context.attachmentToFocus);\n            this.render();\n        }\n    }, function (events) {\n        var pagingSelectors = [\n            this.attachmentMetaSelector,\n            this.galleryNextSelector,\n            this.galleryPrevSelector,\n            this.actualImageSelector\n        ].join(',');\n\n        events['click '+pagingSelectors] = function (e) {\n            e.stopPropagation();\n            if (!this.pageButtons) {\n                return;\n            }\n            if ($(e.currentTarget).hasClass(this.galleryNextSelector.substring(1)) || $(e.currentTarget).hasClass(this.actualImageSelector.substring(1))) {\n                this.next();\n            } else if ($(e.currentTarget).hasClass(this.galleryPrevSelector.substring(1))) {\n                this.prev();\n            }\n        };\n    });\n\n    /**\n     * Set the attachment instance to be displayed as the focused item in the gallery\n     * @param element {Oembed} The attachment to focus in the gallery\n     */\n    GalleryAttachmentListView.prototype.setFocusedAttachment = function (attachment) {\n        attachment = attachment.el ? attachment.oembed : attachment;\n        this._focusedAttachment = attachment;\n    };\n\n    /**\n     * Set the element for the view to render in.\n     * You will probably want to call .render() after this, but not always.\n     * @param element {HTMLElement} The element to render this View in\n     * @returns this\n     */\n    GalleryAttachmentListView.prototype.setElement = function (element) {\n        return View.prototype.setElement.call(this, element);\n    };\n\n    /**\n     * Creates DOM structure of gallery to be displayed\n     */\n    GalleryAttachmentListView.prototype.render = function () {\n        TiledAttachmentListView.prototype.render.call(this);\n\n        var attachmentsGalleryEl = this.$el.find(this.attachmentsGallerySelector);\n        var self = this;\n        $.each(this.oembedViews, function (i, oembedView) {\n            oembedView.$el.appendTo(attachmentsGalleryEl.find(self.galleryThumbnailsSelector));\n            oembedView.$el.on('click', function(e) {\n                $(e.target).trigger('focusContent.hub', { content: self.content, attachmentToFocus: oembedView.oembed });\n            });\n            oembedView.render();\n        });\n\n        var contentMetaEl = this.$el.find(this.attachmentMetaSelector);\n        contentMetaEl[ this.userInfo ? 'show' : 'hide' ]();\n\n        var pageButtonEls = this.$el.find([this.galleryPrevSelector, this.galleryNextSelector].join(','));\n        pageButtonEls[ this.pageButtons ? 'show' : 'hide' ]();\n\n        var pageCountEl = this.$el.find(this.galleryCountSelector);\n        pageCountEl[ this.pageCount ? 'show' : 'hide' ]();\n\n        var thumbnailsEl = this.$el.find(this.galleryThumbnailsSelector);\n\n        if (this.proportionalThumbnails) {\n            var thumbnailTileEls = thumbnailsEl.children();\n            for (var i=0; i < thumbnailTileEls.length; i++) {\n                thumbnailTileEls.eq(i).width(100 / thumbnailTileEls.length + '%').height(75);\n            }\n        }\n\n        this.focus();\n        this._rendered = true;\n    };\n\n\n    GalleryAttachmentListView.prototype.setContent = function (content, opts) {\n        opts = opts || {};\n        TiledAttachmentListView.prototype.setContent.apply(this, arguments);\n        if (opts.attachment) {\n            this.setFocusedAttachment(opts.attachment);\n        }\n        if (this._rendered) {\n            this.render();\n        }\n    };\n\n\n    /**\n     * Appends a new OembedView given an Oembed instance to the view\n     * @param oembed {Oembed} A Oembed instance to insert into the view\n     * @returns {OembedView} The OembedView associated with the newly inserted oembed\n     */\n    GalleryAttachmentListView.prototype._insert = function (oembedView) {\n        var self = this;\n        var stackedAttachmentsEl = this.$el.find(this.stackedAttachmentsSelector);\n        var attachmentsGalleryEl = this.$el.find(this.attachmentsGallerySelector);\n\n        if (this.isTileableAttachment(oembedView.oembed)) {\n            oembedView.$el.appendTo(attachmentsGalleryEl.find(this.galleryThumbnailsSelector));\n            oembedView.$el.on('click', function(e) {\n                /**\n                 * Focus content\n                 * @event TiledAttachmentListView#focusContent.hub\n                 */\n                $(e.target).trigger('focusContent.hub', { content: self.content, attachmentToFocus: oembedView.oembed });\n            });\n        } else {\n            oembedView.$el.appendTo(stackedAttachmentsEl);\n        }\n\n        return oembedView;\n    };\n\n    /**\n     * Add a Oembed attachment to the Attachments view. \n     * @param oembed {Oembed} A Oembed instance to render in the View\n     * @returns {AttachmentListView} By convention, return this instance for chaining\n     */\n    GalleryAttachmentListView.prototype.add = function (oembed) {\n        // Gallery doesn't display non-tileable attachments (e.g. links)\n        if (! this.isTileableAttachment(oembed)) {\n            return this;\n        }\n        var oembedView = TiledAttachmentListView.prototype.add.call(this, oembed);\n\n        this.focus();\n\n        return oembedView;\n    };\n\n    /**\n     * Displays the focused attachment in the gallery, updates\n     * page count/index, and prev/next button visibility.\n     * @param oembed {Oembed} A Oembed instance to render in the View\n     */\n    GalleryAttachmentListView.prototype.focus = function (oembed) {\n        if (!oembed && !this.oembedViews.length) {\n            return;\n        }\n        oembed = oembed ? oembed : this._focusedAttachment || this.oembedViews[0].oembed;\n\n        if ( ! this._focusedAttachment) {\n            this.setFocusedAttachment(oembed);\n        }\n\n        // Render focused attachment\n        var focusedAttachmentsEl = this.$el.find(this.focusedAttachmentsSelector);\n        focusedAttachmentsEl.empty();\n\n        var oembedView = new OembedView({ oembed: oembed });\n        oembedView.render();\n        var focusedEl = oembedView.$el.clone();\n        focusedEl.appendTo(focusedAttachmentsEl);\n\n        var photoContentEl = focusedEl.find('.content-attachment-photo');\n        photoContentEl.addClass(this.focusedAttachmentClassName);\n        if (this._focusedAttachment.type === 'video') {\n            var playButtonEl = focusedEl.find('.content-attachment-controls-play');\n            playButtonEl.hide();\n            photoContentEl.hide().removeClass(this.focusedAttachmentClassName);\n            var videoContentEl = focusedEl.find('.content-attachment-video');\n            videoContentEl.addClass(this.focusedAttachmentClassName);\n            videoContentEl.html(this._focusedAttachment.html);\n            if (this.tile) {\n                videoContentEl.find('iframe').css({'width': '100%', 'height': '100%'});\n            }\n            videoContentEl.show();\n        }\n\n        // Update page count and focused index\n        var attachmentsCount = this.tileableCount();\n        if (this.pageCount) {\n            var newIndex = 0;\n            for (var i=0; i < this.oembedViews.length; i++) {\n                if (this.oembedViews[i].oembed === this._focusedAttachment) {\n                    this.focusedIndex = newIndex;\n                    break;\n                }\n                if (this.isTileableAttachment(this.oembedViews[i].oembed)) {\n                    newIndex++;\n                }\n            }\n            this.$el.find(this.galleryCurrentPageSelector).html(this.focusedIndex + 1);\n            this.$el.find(this.galleryTotalPagesSelector).html(attachmentsCount);\n\n            var galleryCountEl = this.$el.find(this.galleryCountSelector);\n            \n            if (attachmentsCount > 1) {\n                galleryCountEl.show();\n            } else {\n                galleryCountEl.hide();\n            }\n        }\n\n        // Prev/Next buttons\n        if (attachmentsCount === 1) {\n            this.$el.find(this.galleryPrevSelector).hide();\n            this.$el.find(this.galleryNextSelector).hide();\n        } else if (this.focusedIndex + 1 === attachmentsCount) {\n            this.$el.find(this.galleryPrevSelector).show();\n            this.$el.find(this.galleryNextSelector).hide();\n        } else if (this.focusedIndex === 0) {\n            this.$el.find(this.galleryPrevSelector).hide();\n            this.$el.find(this.galleryNextSelector).show();\n        } else {\n            this.$el.find(this.galleryPrevSelector).show();\n            this.$el.find(this.galleryNextSelector).show();\n        }\n\n        // Meta\n        var contentMetaEl = this.$el.find(this.attachmentMetaSelector);\n        contentMetaEl.html(contentBylineTemplate(this.content));\n\n        // Update gallery size\n        var self = this;\n        var focusedAttachmentEl = this.$el.find('.'+this.focusedAttachmentClassName + '> *');\n        if (!focusedAttachmentEl.length) {\n            return;\n        }\n        if (focusedAttachmentEl[0].tagName === 'IMG') {\n            focusedAttachmentEl.on('load', function(e) {\n                self.resizeFocusedAttachment();\n            });\n        } else {\n            this.resizeFocusedAttachment();\n        }\n    };\n\n    /**\n     * Resizes the focused attachment to fit within the content view\n     */\n    GalleryAttachmentListView.prototype.resizeFocusedAttachment = function() {\n        // Set direct child of focused attachment to expand to itself\n        var focusedAttachmentEl = this.$el.find('.'+this.focusedAttachmentClassName);\n        focusedAttachmentEl.children().eq(0).width('100%').height('100%');\n\n        this.$el.trigger('galleryResize.hub');\n    };\n\n    /**\n     * Focuses the next attachment if it is not the last attachment\n     */\n    GalleryAttachmentListView.prototype.next = function() {\n        var tileableIndex = 0;\n        for (var i=0; i < this.oembedViews.length; i++) {\n            if (!this.isTileableAttachment(this.oembedViews[i].oembed)) {\n                continue;\n            }\n            if (this.focusedIndex+1 === tileableIndex) {\n                this.focusedIndex = tileableIndex;\n                this._focusedAttachment = this.oembedViews[i].oembed;\n                this.render();\n                break;\n            }\n            tileableIndex++;\n        }\n    };\n\n    /**\n     * Focuses the previous attachment if it is not the first attachment\n     */\n    GalleryAttachmentListView.prototype.prev = function() {\n        var tileableIndex = 0;\n        for (var i=0; i < this.oembedViews.length; i++) {\n            if (!this.isTileableAttachment(this.oembedViews[i].oembed)) {\n                continue;\n            }\n            if (this.focusedIndex-1 === tileableIndex) {\n                this.focusedIndex = tileableIndex;\n                this._focusedAttachment = this.oembedViews[i].oembed;\n                this.render();\n                break;\n            }\n            tileableIndex++;\n        }\n    };\n\n    return GalleryAttachmentListView;\n});\n \n","\ndefine(\"hgn!streamhub-sdk/content/templates/gallery-attachment-list\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"content-attachments-meta\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-meta-avatar\\\"></div>\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-meta-name\\\"></div>\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-meta-subname\\\"></div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\" + i);_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-gallery\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-gallery-focused\\\"></div>\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-gallery-thumbnails\\\"></div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\" + i);_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-gallery-prev\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-gallery-prev-btn\\\"></div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-gallery-next\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"content-attachments-gallery-next-btn\\\"></div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\" + i);_.b(\"\\n\" + i);_.b(\"<div class=\\\"content-attachments-gallery-count\\\">\");_.b(\"\\n\" + i);_.b(\"    <span class=\\\"content-attachments-gallery-current-page\\\"></span> of <span class=\\\"content-attachments-gallery-total-pages\\\"></span>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine(\"hgn!streamhub-sdk/content/templates/content-byline\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"content-header-inner\\\">\");_.b(\"\\n\" + i);if(_.s(_.d(\"author.avatar\",c,p,1),c,p,0,57,163,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"        <a class=\\\"content-author-avatar\\\">\");_.b(\"\\n\" + i);_.b(\"            <img src=\\\"\");_.b(_.v(_.d(\"author.avatar\",c,p,0)));_.b(\"\\\" />\");_.b(\"\\n\" + i);_.b(\"        </a>\");_.b(\"\\n\");});c.pop();}_.b(\"    <div class=\\\"content-byline\\\">\");_.b(\"\\n\" + i);if(_.s(_.d(\"author.url\",c,p,1),c,p,0,238,359,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"            <a class=\\\"content-author-name\\\" href=\\\"\");_.b(_.v(_.d(\"author.url\",c,p,0)));_.b(\"\\\" target=\\\"_blank\\\">\");_.b(_.v(_.d(\"author.displayName\",c,p,0)));_.b(\"</a>\");_.b(\"\\n\");});c.pop();}if(!_.s(_.d(\"author.url\",c,p,1),c,p,1,0,0,\"\")){if(_.s(_.d(\"author.profileUrl\",c,p,1),c,p,0,433,876,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"                <div class=\\\"content-author-name\\\">\");_.b(\"\\n\" + i);_.b(\"                    <a href=\\\"\");_.b(_.v(_.d(\"author.profileUrl\",c,p,0)));_.b(\"\\\" target=\\\"_blank\\\">\");_.b(_.v(_.d(\"author.displayName\",c,p,0)));_.b(\"</a>\");_.b(\"\\n\" + i);_.b(\"                </div>\");_.b(\"\\n\" + i);if(_.s(_.d(\"author.twitterUserId\",c,p,1),c,p,0,647,838,\"{{ }}\")){_.rs(c,p,function(c,p,_){_.b(\"                \t<a class=\\\"content-author-username\\\" href=\\\"https://twitter.com/intent/user?user_id=\");_.b(_.v(_.d(\"author.twitterUserId\",c,p,0)));_.b(\"\\\" target=\\\"_blank\\\">@\");_.b(_.v(_.d(\"author.twitterUsername\",c,p,0)));_.b(\"</a>\");_.b(\"\\n\");});c.pop();}});c.pop();}if(!_.s(_.d(\"author.profileUrl\",c,p,1),c,p,1,0,0,\"\")){_.b(\"                <span class=\\\"content-author-name\\\">\");_.b(_.v(_.d(\"author.displayName\",c,p,0)));_.b(\"</span>\");_.b(\"\\n\");};};_.b(\"    </div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-sdk/modal/main',[\n    'streamhub-sdk/jquery',\n    'streamhub-sdk/view',\n    'streamhub-sdk/content/views/gallery-attachment-list-view',\n    'hgn!streamhub-sdk/modal/templates/modal',\n    'inherits'\n], function($, View, GalleryAttachmentListView, ModalTemplate, inherits) {\n    'use strict';\n\n    /**\n     * A view that overlays over the entire viewport to display some content\n     *\n     * @param opts {Object} A set of options to config the view with\n     * @fires GalleryAttachmentListView#hideModal.hub\n     * @fires GalleryAttachmentListView#error\n     * @exports streamhub-sdk/modal\n     * @constructor\n     */\n    var ModalView = function (opts) {\n        opts = opts || {};\n        this.visible = false;\n        this._attached = false;\n        this._modalSubView = opts.modalSubView || null;\n        // The parent node that this will attach to when shown\n        this.parentNode = ModalView.el;\n        View.call(this);\n\n        var self = this;\n        $(window).keyup(function (e) {\n            // Escape\n            if (e.keyCode === 27 && self.visible) {\n                self.hide();\n            }\n        });\n\n        ModalView.instances.push(this);\n    };\n    inherits(ModalView, View);\n\n\n    // Store all instances of modal to ensure that only one is visible\n    ModalView.instances = [];\n\n    // A stack pointing to instances that should be re-shown\n    ModalView._stackedInstances = [];\n\n    // A singleton container element houses all modals\n    ModalView.$el = $('<div class=\"hub-modals\"></div>');\n    ModalView.el = ModalView.$el[0];\n\n    // insert it on domReady\n    ModalView.insertEl = function () {\n        $('body').append(ModalView.el);\n    };\n    $(document).ready(ModalView.insertEl);\n\n\n    ModalView.prototype.template = ModalTemplate;\n    ModalView.prototype.elClass = ' hub-modal';\n\n\n    ModalView.prototype.modalElSelector = '.hub-modal';\n    ModalView.prototype.closeButtonSelector = '.hub-modal-close';\n    ModalView.prototype.containerElSelector = '.hub-modal-content';\n    ModalView.prototype.contentViewElSelector = '.hub-modal-content-view';\n\n\n    /**\n     * Makes the modal and its content visible\n     * @param [modalSubView] {View} The view to be displayed in the by the modal.\n     *      Defaults to this._modalSubView\n     * @param [stack] {boolean=} Set true to start a stacked set of modals.\n     *          Set false to exclude from a current stack. Leave undefined\n     *          for normal stackless behavior.\n     */\n    ModalView.prototype.show = function (modalSubView, stack) {\n        var self = this;\n        if (stack || ModalView._stackedInstances.length && stack !== false) {\n            this._stack();\n        }\n\n        // First hide any other modals\n        $.each(ModalView.instances, function (i, modal) {\n            if (modal === self) {\n                return;\n            }\n            if (modal.visible) {\n                modal.hide();\n            }\n        });\n\n        this.$el.trigger('showing');\n\n        $('body').css('overflow', 'hidden');\n\n        this.$el.show();\n        if ( ! this._attached) {\n            this._attach();\n        }\n\n        this._modalSubView = modalSubView || this._modalSubView;\n\n        this.render();\n\n        this.visible = true;\n        this.$el.trigger('shown');\n    };\n\n\n    /**\n     * Makes the modal and its content not visible\n     */\n    ModalView.prototype.hide = function () {\n        this.$el.trigger('hiding');\n        this.$el.hide();\n        this._detach();\n        this.visible = false;\n        $('body').css('overflow', 'auto');\n        this.$el.trigger('hidden');\n    };\n\n\n    /**\n     * Creates DOM structure of gallery to be displayed\n     */\n    ModalView.prototype.render = function () {\n        View.prototype.render.call(this);\n\n        this._modalSubView.setElement(this.$el.find(this.contentViewElSelector));\n        this._modalSubView.render();\n    };\n\n\n    /**\n     * Set the element for the view to render in.\n     * ModalView construction takes care of creating its own element in\n     *     ModalView.el. You probably don't want to call this manually\n     * @private\n     * @param element {HTMLElement} The element to render this View in\n     * @returns this\n     */\n    ModalView.prototype.setElement = function (element) {\n        View.prototype.setElement.call(this, element);\n        var self = this;\n\n        this.$el.addClass(this.elClass);\n\n        this.$el.on('hideModal.hub', function (e) {\n            self.hide();\n            self._unstack();\n        });\n\n        this.$el.on('click', this.closeButtonSelector, function (e) {\n            self.$el.trigger('hideModal.hub');\n        });\n\n        this.$el.on('click', function (e) {\n            /**\n             * Hide modal\n             * @event GalleryAttachmentListView#hideModal.hub\n             */\n            if ($(e.target).hasClass('hub-modal-content') || $(e.target).hasClass('hub-modal-close')) {\n                self.$el.trigger('hideModal.hub');\n            }\n        });\n\n        return this;\n    };\n\n\n    /**\n     * Attach .el to the DOM\n     * @private\n     */\n    ModalView.prototype._attach = function () {\n        this.$el.appendTo(this.parentNode);\n        this._attached = true;\n    };\n\n\n    /**\n     * Detach .el from the DOM\n     * This may be useful when the modal is hidden, so that\n     *     the browser doesn't have to lay it out, and it doesn't\n     *     somehow intercept DOM events\n     * @private\n     */\n    ModalView.prototype._detach = function () {\n        this.$el.detach();\n        this._attached = false;\n    };\n\n    /**\n     * Pushes this instance onto a stack of instances\n     * @private\n     */\n    ModalView.prototype._stack = function () {\n        ModalView._stackedInstances.push(this);\n    };\n\n    /**\n     * If we're stacking modals, remove this modal from the stack and show the\n     * next modal.\n     * @private\n     */\n    ModalView.prototype._unstack = function () {\n        var stackLength = ModalView._stackedInstances.length,\n            top;\n        if (stackLength === 0) {\n        //Return early if the stack is empty\n            return;\n        }\n\n        //Check that this is the top item and pop it off if it is\n        top = ModalView._stackedInstances[stackLength - 1];\n        this === top && ModalView._stackedInstances.pop() && stackLength--;\n\n        if (stackLength > 0) {\n        //If there is a next modal, show it\n            ModalView._stackedInstances[stackLength - 1].show(undefined, false);\n        }\n    };\n\n    return ModalView;\n});\n\ndefine('streamhub-sdk/modal', ['streamhub-sdk/modal/main'], function (main) { return main; });\n","\ndefine(\"hgn!streamhub-sdk/modal/templates/modal\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<div class=\\\"hub-modal-close\\\">&times;</div>\");_.b(\"\\n\" + i);_.b(\"<div class=\\\"hub-modal-content\\\">\");_.b(\"\\n\" + i);_.b(\"    <div class=\\\"hub-modal-content-view\\\"></div>\");_.b(\"\\n\" + i);_.b(\"</div>\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-input/javascript/modal/launchable-modal',['require','exports','module','streamhub-sdk/modal','streamhub-input/javascript/package-attribute'],function (require, exports, module) {var ModalView = require('streamhub-sdk/modal');\nvar packageAttribute = require('streamhub-input/javascript/package-attribute');\n\n'use strict';\n\n/**\n * A view that can be displayed and interacted with in an otherwise generic modal.\n * @constructor\n */\nfunction LaunchableModal() {\n    this._showing = false;\n}\n\n/**\n * Displays and operates this view as a modal.\n * Modal representation of this view.\n * @param {!ModalView} modal\n */\nLaunchableModal.prototype.launchModal = function(modal) {\n    this._modal = modal || this._modal || new ModalView();\n    packageAttribute.decorateModal(this._modal);\n    this._modal.show(this, true);  // Will .render() and stack\n    this._showing = true;\n};\n\n/**\n * Called when the modal view has competed its task and can be closed/hidden.\n */\nLaunchableModal.prototype.returnModal = function () {\n    this._showing && this._modal.$el.trigger('hideModal.hub');  // Will _modal.hide()\n    this._showing = false;\n};\n\nmodule.exports = LaunchableModal;\n\n});\n","\ndefine(\"hgn!streamhub-input/templates/upload\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<iframe id=\\\"\");_.b(_.v(_.f(\"container\",c,p,0)));_.b(\"\\\" class=\\\"hub-upload\\\" />\");_.b(\"\\n\");return _.fl();;}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n","\ndefine('streamhub-input/javascript/upload/view',['require','exports','module','jquery','streamhub-sdk/content','inherits','streamhub-input/javascript/modal/launchable-modal','streamhub-sdk/debug','streamhub-input/javascript/pipeable','streamhub-sdk/view','hgn!streamhub-input/templates/upload'],function (require, exports, module) {var $ = require('jquery');\nvar Content = require('streamhub-sdk/content');\nvar inherits = require('inherits');\nvar LaunchableModal = require('streamhub-input/javascript/modal/launchable-modal');\nvar log = require('streamhub-sdk/debug')('streamhub-input/javascript/upload/view');\nvar Pipeable = require('streamhub-input/javascript/pipeable');\nvar View = require('streamhub-sdk/view');\n\n'use strict';\n\n/**\n * The reference to window.filepicker is stored here once loaded.\n * @private\n */\nvar picker = null;\n\n/**\n * A view that handles the display of and data returned by FilePicker.\n * Parasitically inherits from Readable, allowing it to pipe returned data\n * to a Writable.\n * @param [opts] {Object}\n * @param [opts.filepicker] {{key: !string, cache: !string}} If you intend to use\n *      a different api key, you will also need to provide the cache url.\n * @param [opts.name] {string} Assigned to provider_name for returned data\n * @param [opts.destination] {Writable} The collection or other Writable that\n *      will receive this input. it is recommended that this is specified.\n * @constructor\n * @extends {View}\n */\nfunction Upload(opts) {\n    opts = $.extend({}, Upload.DEFAULT_OPTS, opts);\n    View.call(this, opts);\n    LaunchableModal.call(this);\n    Pipeable.call(this, opts);\n\n    if (opts.filepicker) {\n        this._filepickerKey = opts.filepicker.key;\n        this._cacheUrl = opts.filepicker.cache;\n    }\n    this.name = opts.name || this.name;\n}\ninherits(Upload, View);\ninherits.parasitically(Upload, LaunchableModal);\ninherits.parasitically(Upload, Pipeable);\n\n/**\n * provider_name attribute assigned to written data\n * @type {!string}\n */\nUpload.prototype.name = 'Streamhub-Input/Upload';\n\n/** @override */\nUpload.prototype.elTag = 'iframe';\n\n/** @override */\nUpload.prototype.template = require('hgn!streamhub-input/templates/upload');\n\n/**\n * Get contextual data for a template.\n * @override\n * @returns {!Object}\n */\nUpload.prototype.getTemplateContext = function () {\n    return {\n        container: this.opts.pick.container\n    };\n};\n\n/**\n * Loads the filepicker script if picker is undefined\n * @param {function()} cb\n * @private\n */\nUpload.prototype._initFilepicker = function () {\n    if (picker) {\n        return;\n    }\n\n    var src = this.opts.src;\n    $.getScript(src, scriptLoadCallback);\n\n    var self = this;\n    function scriptLoadCallback(script, status) {\n        if (status !== 'success') {\n            picker = false;\n            throw 'There was an error loading ' + src;\n        }\n\n        picker = window.filepicker;\n        picker.setKey(self._filepickerKey);\n        self.emit('pickerLoaded');\n    }\n};\n\n/**\n * Key for FilePicker API.\n * @type {!string}\n * @private\n */\nUpload.prototype._filepickerKey = 'AtvGm2B6RR9mDKb8bImIHz';\n\n/**\n * The URL where uploads are cached\n * @type {!string}\n * @private\n */\nUpload.prototype._cacheUrl = 'http://dazfoe7f6de09.cloudfront.net/';\n\n/**\n * The default options for using FilePicker and pickAndStore\n * @type {!Object}\n */\nUpload.DEFAULT_OPTS = {\n    packageAs: 'content',\n    pick: {\n        'container': 'picker',\n        'maxSize': 4*1024*1024, // allows files < 4MB\n        'mimetypes': ['image/*'],\n        'multiple': true,\n        'services': ['COMPUTER', 'WEBCAM', 'IMAGE_SEARCH', 'FACEBOOK', 'INSTAGRAM', 'FLICKR', 'PICASA', 'BOX', 'DROPBOX', 'GOOGLE_DRIVE']\n    },\n    store: {\n        'location': 'S3',\n        'access': 'public'\n    },\n    src: '//api.filepicker.io/v1/filepicker.js'\n};\n\n/**\n * Default callback to pickAndStore()\n * @param [err] {Object}\n * @param [inkBlob] {Object}\n */\nUpload.prototype._processResponse = function (err, inkBlob) {\n    if (err) {\n        if (err.code !== 101) {//101 when dialog closed using x-box.\n            this.showError('There was an error storing the file.');\n        }\n        return;\n    }\n\n    var contents = [];\n    var self = this;\n    if (inkBlob) {\n        if (!inkBlob.length) {\n            inkBlob = [inkBlob];\n        }\n\n        $.each(inkBlob, function (i, blob) {\n            var content = self._packageInput(blob);\n            contents.push(content);\n            self.writeToDestination(content);\n        });\n    }\n    return contents;\n};\n\n/**\n * Displays and operates this view as a modal.\n * @param [callback] {function(err: Object, data: Object)}\n *      Called after a successful interaction\n * @override\n */\nUpload.prototype.launchModal = function(callback) {\n    var self = this;\n    if (!picker) {\n        this.once('pickerLoaded', this.launchModal.bind(this, callback));\n        return this._initFilepicker();\n    }\n\n    LaunchableModal.prototype.launchModal.apply(this, arguments);\n\n    function errBack(err, data) {\n        self._processResponse(err, data);\n        self.returnModal();\n    }\n    function successFn(inkBlob) {\n        errBack(null, inkBlob);\n    }\n    function errorFn(err) {\n        errBack(err);\n    }\n\n    picker.pickAndStore(this.opts.pick, this.opts.store, successFn, errorFn);\n};\n\n/**\n * Creates and returns a Content object based on the input.\n * @param input {Object} Usually the data retrieved from getInput().\n * @returns {Content}\n * @protected\n * @override\n */\nUpload.prototype._packageInput = function (input) {\n    var url = this._cacheUrl + input.key;\n    var attachment = {\n        type: 'photo',\n        url: url,\n        link: url,\n        provider_name: this.name\n        //TODO (joao) images dimensions?!!!!\n    };\n    var content = new Content({body: ''});\n    content.attachments.push(attachment);\n    return content;\n};\n\n/** @override */\nUpload.prototype.showError = function (msg) {\n    //TODO (joao) Real implementation\n    log(msg);\n};\n\nmodule.exports = Upload;\n\n});\n","\ndefine('streamhub-input/javascript/upload/button',['require','exports','module','inherits','streamhub-input/javascript/button','streamhub-input/javascript/modal/modal-input-command','streamhub-input/javascript/upload/view','jquery','hgn!streamhub-input/templates/upload-button'],function (require, exports, module) {var inherits = require('inherits');\nvar InputButton = require('streamhub-input/javascript/button');\nvar ModalInputCommand = require('streamhub-input/javascript/modal/modal-input-command');\nvar Upload = require('streamhub-input/javascript/upload/view');\nvar $ = require('jquery');\n\n'use strict';\n\n/**\n * @param [opts] {Object}\n * @constructor\n * @extends {InputButton}\n */\nfunction UploadButton(opts) {\n    opts = opts || {};\n    this._i18n = $.extend(true, {}, this._i18n, (opts._i18n || {}));\n    var input = new Upload();\n    var command = new ModalInputCommand(input, {\n        modal: opts.modal\n    });\n\n    InputButton.call(this, command, {\n        el: opts.el,\n        input: opts.input || input,\n        destination: opts.destination,\n        authRequired: opts.authRequired\n    });\n}\ninherits(UploadButton, InputButton);\n\n/** @enum {string} */\nUploadButton.prototype._i18n = {\n    POST_PHOTO: 'Post Your Photo'\n};\n\n/** @override */\nUploadButton.prototype.getTemplateContext = function () {\n    return {\n        strings: {\n            post: this._i18n.POST_PHOTO\n        }\n    };\n};\n\n/** @override */\nUploadButton.prototype.template = require('hgn!streamhub-input/templates/upload-button');\n\n/**\n * @override\n * @type {string}\n */\nUploadButton.prototype.elClass += ' hub-upload-btn';\n\nmodule.exports = UploadButton;\n\n});\n","\ndefine('streamhub-input/javascript/upload/button-icon',['require','exports','module','inherits','streamhub-input/javascript/upload/button','hgn!streamhub-input/templates/upload-button-icon'],function (require, exports, module) {/**\n * @fileoverview The upload button, as a mini icon\n */\nvar inherits = require('inherits');\nvar UploadButton = require('streamhub-input/javascript/upload/button');\n\n'use strict';\n\n/**\n * @constructor\n * @extends {UploadButton}\n */\nfunction UploadButtonIcon(opts) {\n    opts = opts || {};\n    UploadButton.call(this, opts);\n}\ninherits(UploadButtonIcon, UploadButton);\n\n/** @override */\nUploadButtonIcon.prototype.elClass = 'editor-upload';\n\n/** @override */\nUploadButtonIcon.prototype.elTag = 'span';\n\n/** @override */\nUploadButtonIcon.prototype.template = require('hgn!streamhub-input/templates/upload-button-icon');\n\nmodule.exports = UploadButtonIcon;\n\n});\n","\ndefine('streamhub-input/javascript/content-editor/view',['require','exports','module','jquery','streamhub-input/javascript/content-editor/attachment-list-view','auth','streamhub-sdk/ui/auth-required-command','streamhub-sdk/ui/button','streamhub-sdk/ui/command','streamhub-sdk/content','hgn!streamhub-input/templates/content-editor','streamhub-editor/editor','hgn!streamhub-editor/templates/editor','inherits','observer','streamhub-input/javascript/pipeable','streamhub-input/javascript/upload/button-icon','streamhub-sdk/view'],function (require, exports, module) {var $ = require('jquery');\nvar AttachmentListView = require('streamhub-input/javascript/content-editor/attachment-list-view');\nvar Auth = require('auth');\nvar AuthRequiredCommand = require('streamhub-sdk/ui/auth-required-command');\nvar Button = require('streamhub-sdk/ui/button');\nvar Command = require('streamhub-sdk/ui/command');\nvar Content = require('streamhub-sdk/content');\nvar contentEditorTemplate = require('hgn!streamhub-input/templates/content-editor');\nvar Editor = require('streamhub-editor/editor');\nvar editorTemplate = require('hgn!streamhub-editor/templates/editor');\nvar inherits = require('inherits');\nvar Observer = require('observer');\nvar Pipeable = require('streamhub-input/javascript/pipeable');\nvar UploadButtonIcon = require('streamhub-input/javascript/upload/button-icon');\nvar View = require('streamhub-sdk/view');\n\n'use strict';\n\n/**\n * A view that takes text input from a user and posts it to a collection/Writable.\n * Implements Input.\n * @param [opts] {Object}\n * @param [opts.i18n] {Object.<string>} Display strng overrides\n * @param [opts.mediaEnabled] {boolean} Are media uploads allowed?\n * @constructor\n * @extends {Editor}\n * @extends {Pipeable}\n */\nfunction ContentEditor(opts) {\n    opts = opts || {};\n    Editor.call(this, opts);\n    Pipeable.call(this, opts);\n    Observer(this);\n\n    this._postCmd = new Command(this._handlePostBtnClick.bind(this));\n    this._authCmd = new AuthRequiredCommand(this._postCmd);\n\n    this._user = Auth.get('livefyre');\n\n    this.listenTo(Auth, 'login.livefyre', handleLogin.bind(this));\n    this.listenTo(Auth, 'logout', handleLogout.bind(this));\n}\ninherits(ContentEditor, Editor);\ninherits.parasitically(ContentEditor, Pipeable);\n\n/**\n * Set the user and rerender\n * @param {?User} livefyreUser\n */\nfunction handleLogin(livefyreUser) {\n    this._user = livefyreUser;\n    this.render();\n}\n\n/** Unset the user and rerender */\nfunction handleLogout() {\n    this._user = null;\n    this.render();\n}\n\n/**\n * Render the upload button (camera icon) that launches filepicker, and\n * render the contianer where photo upload thumbnails will live.\n * @private\n */\nContentEditor.prototype._addUploadButton = function () {\n    this._uploadButton = this._uploadButton || new UploadButtonIcon();\n    this._attachmentsList = this._attachmentsList || new AttachmentListView();\n\n    this._uploadButton.setElement(this.getElementsByClass(this.classes.EDITOR_UPLOAD));\n    this._attachmentsList.setElement(this.getElementsByClass(this.classes.ATTACHMENT_LIST));\n    this._uploadButton.render();\n    this._attachmentsList.render();\n    this._uploadButton.pipe(this._attachmentsList);\n};\n\n/** @override */\nContentEditor.prototype._i18n = (function () {\n    var strings = $.extend(true, {}, Editor.prototype._i18n);\n    strings.PLACEHOLDERTEXT = 'What would you like to say?';\n    strings.POST = 'Post Your Comment';\n    return strings;\n})();\n\n/**\n * Post failure callback.\n * @private\n */\nContentEditor.prototype._handlePostFailure = function () {\n    this.showError(this._i18n.ERRORS.GENERIC);\n    this._postButton.enable();\n};\n\n/**\n * Post success callback.\n * @private\n */\nContentEditor.prototype._handlePostSuccess = function () {\n    this.reset();\n    this._postButton.enable();\n};\n\n/** @override */\nContentEditor.prototype._validate = function(data) {\n    var valid = !!(data.body || (data.attachments && data.attachments.length));\n    if (!valid) {\n        this.showError(this._i18n.ERRORS.BODY);\n    }\n    return valid;\n};\n\n/* @override */\nContentEditor.prototype.buildPostEventObj = function () {\n    var event = Editor.prototype.buildPostEventObj.call(this);\n    if (this.opts.mediaEnabled) {\n        event.attachments = this._attachmentsList.getAttachments();\n    }\n    return event;\n};\n\n/** @enum {string} */\nContentEditor.prototype.classes = (function () {\n    var classes = $.extend({}, Editor.prototype.classes);\n    classes.EDITOR_UPLOAD = 'lf-editor-upload';\n    classes.POST_BTN = 'lf-content-editor-post';\n    classes.ATTACHMENT_LIST = 'lf-attachment-list-view';\n    return classes;\n})();\n\n/**\n * Class to be added to the view's element.\n * @type {!string}\n */\nContentEditor.prototype.elClass += ' lf-edit';\n\n/**\n * The default element tag.\n * @override\n * @type {!string}\n */\nContentEditor.prototype.elTag = 'article';\n\n/** @override */\nContentEditor.prototype.destroy = function () {\n    View.prototype.destroy.call(this);\n    this.stopListening();\n    this._uploadButton && this._uploadButton.destroy();\n    this._uploadButton = null;\n    this._attachmentsList && this._attachmentsList.destroy();\n    this._attachmentsList = null;\n};\n\n/**\n * Get contextual data for a template.\n * @type {function()}\n * @override\n */\nContentEditor.prototype.getTemplateContext = function () {\n    var username = this._user && this._user.get('displayName') || '';\n    return {\n        mediaEnabled: this.opts.mediaEnabled,\n        strings: {\n            post: this._i18n.POST,\n            username: username\n        }\n    };\n};\n\n/** @override */\nContentEditor.prototype.render = function () {\n    Editor.prototype.render.call(this);\n    this.$postEl = this.$('.' + this.classes.POST_BTN);\n\n    this._postButton = new Button(this._authCmd, {el: this.$postEl});\n\n    if (this.opts.mediaEnabled) {\n        this._addUploadButton();\n    }\n};\n\n/** @override */\nContentEditor.prototype.reset = function () {\n    Editor.prototype.reset.call(this);\n    this._attachmentsList && this._attachmentsList.clearAttachments();\n};\n\n/** @override */\nContentEditor.prototype.sendPostEvent = function (ev) {\n    var newContent = new Content();\n    newContent.body = ev.body;\n    newContent.attachments = ev.attachments;\n    this._postButton.disable();\n    this.writeToDestination(newContent, function(err) {\n        if (err) {\n            ev.failure(err);\n        }\n        ev.success();\n    });\n};\n\n/** @override */\nContentEditor.prototype.template = function (context) {\n    return contentEditorTemplate(context, {\n        editor: editorTemplate.template\n    });\n};\n\nmodule.exports = ContentEditor;\n\n});\n"]}